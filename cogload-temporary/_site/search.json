[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "NASA-TLX",
    "section": "",
    "text": "Description here"
  },
  {
    "objectID": "preprocess.html",
    "href": "preprocess.html",
    "title": "First Banch Preprocess Workflow",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\n\n\n\nmr_preproc &lt;- function(d) {\n\n  require(tidyverse)\n  \n  d |&gt; select(\n    # select columns we need\n    \"Индивидуальный_код\",\n    correctAns,\n    base_pic,\n    rotated_pic,\n    resp_MR_easy.keys,\n    resp_MR_easy.corr,\n    resp_MR_easy.rt\n  ) |&gt;\n    drop_na() |&gt; # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"MR\",\n           # add task name (mental rotation)\n           level = \"easy\",\n           # add difficulty level\n           trial = 1:16) |&gt; # number trials\n    rename(\n      \"id\" = \"Индивидуальный_код\",\n      # rename columns for handy usage\n      \"key\" = resp_MR_easy.keys,\n      \"is_correct\" = resp_MR_easy.corr,\n      \"rt\" = resp_MR_easy.rt\n    ) -&gt; MR_easy # ready to use\n  \n  \n  d |&gt; select(\n    # select columns we need\n    \"Индивидуальный_код\",\n    correctAns,\n    base_pic,\n    rotated_pic,\n    resp_MR_medium.keys,\n    resp_MR_medium.corr,\n    resp_MR_medium.rt\n  ) |&gt;\n    drop_na() |&gt; # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"MR\",\n           # add task name (mental rotation)\n           level = \"medium\",\n           # add difficulty level\n           trial = 1:16) |&gt;  # number trials\n    rename(\n      # rename columns for handy usage\n      \"id\" = \"Индивидуальный_код\",\n      \"key\" = resp_MR_medium.keys,\n      \"is_correct\" = resp_MR_medium.corr,\n      \"rt\" = resp_MR_medium.rt\n    ) -&gt; MR_medium # ready to use\n  \n  \n  \n  d |&gt; select(\n    # select columns we need\n    \"Индивидуальный_код\",\n    correctAns,\n    base_pic,\n    rotated_pic,\n    resp_MR_hard.keys,\n    resp_MR_hard.corr,\n    resp_MR_hard.rt\n  ) |&gt;\n    drop_na() |&gt; # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"MR\",\n           # add task name (mental rotation)\n           level = \"hard\",\n           # add difficulty level\n           trial = 1:16) |&gt; # number trials\n    rename(\n      # rename columns for handy usage\n      \"id\" = \"Индивидуальный_код\",\n      \"key\" = resp_MR_hard.keys,\n      \"is_correct\" = resp_MR_hard.corr,\n      \"rt\" = resp_MR_hard.rt\n    ) -&gt; MR_hard # ready to use\n  \n  # bind all conditions of mental rotation task to one tibble\n  \n  bind_rows(MR_easy, MR_medium, MR_hard) -&gt; MR\n  \n  return(MR)\n  \n}\n\n\nms_preproc &lt;- function(d) {\n  \n  # Since we our participants could fill the fields in any order, \n  # here is a function which allows us to count correct inputs \n  # our subjects made.\n  \n  n_count &lt;- function(df) {\n    df |&gt; select(matches(\"^noun\")) |&gt; as.matrix() -&gt; s\n    df |&gt; select(matches(\"^resp\")) |&gt; as.matrix() -&gt; r\n    a &lt;- vector(mode = \"numeric\", length = 16L)\n    for (i in 1:16) {\n      a[i] &lt;- sum(r[i, ] %in% s[i, ])\n    }\n    return(a)\n  }\n  \n  if (\"mouse_MSe.time\" %in% colnames(d)) {\n    \n    d |&gt; select(\n      \"Индивидуальный_код\",\n      matches(\"^noun\"),\n      matches(\"resp\\\\d\\\\.text$\"),\n      \"mouse_MSe.time\"\n    ) |&gt;\n      filter_at(vars(paste0(\"noun\", 1:3)), all_vars(!is.na(.))) |&gt;\n      filter_at(vars(paste0(\"noun\", 4:7)), all_vars(is.na(.))) |&gt;\n      mutate(task = \"MS\",\n             level = \"easy\") |&gt;\n      rename(\n        \"resp1\" = resp1.text,\n        \"resp2\" = resp2.text,\n        \"resp3\" = resp3.text,\n        \"id\" = \"Индивидуальный_код\",\n        \"rt\" = \"mouse_MSe.time\"\n      ) |&gt;\n      select(-c(paste0(\"noun\", 4:7))) -&gt; MS_easy\n    \n    d |&gt; select(\n      \"Индивидуальный_код\",\n      matches(\"^noun\"),\n      matches(\"MSm.text$\"),\n      \"mouse_MSm.time\"\n    ) |&gt;\n      filter_at(vars(paste0(\"noun\", 4:5)), all_vars(!is.na(.))) |&gt;\n      filter_at(vars(paste0(\"noun\", 6:7)), all_vars(is.na(.))) |&gt;\n      mutate(task = \"MS\",\n             level = \"medium\") |&gt; \n      rename(\"id\" = \"Индивидуальный_код\",\n             \"rt\" = \"mouse_MSm.time\") |&gt;\n      rename_with(.fn = str_replace_all, \n                  pattern = \"_MSm\\\\.text\", \n                  replacement = \"\") |&gt; \n      select(-noun6, -noun7) -&gt; MS_medium\n    \n    \n    d |&gt; select(\n      \"Индивидуальный_код\",\n      matches(\"^noun\"),\n      matches(\"MSh.text$\"),\n      \"mouse_MSh.time\"\n    ) |&gt;\n      filter_at(vars(paste0(\"noun\", 1:7)), all_vars(!is.na(.))) |&gt;\n      mutate(task = \"MS\",\n             level = \"hard\") |&gt;\n      rename(\"id\" = \"Индивидуальный_код\",\n             \"rt\" = \"mouse_MSh.time\") |&gt; \n      rename_with(.fn = str_replace_all,\n                  pattern = \"_MSh\\\\.text\",\n                  replacement = \"\") -&gt; MS_hard\n    \n  } else {\n    \n    d |&gt; select(\"Индивидуальный_код\",\n                matches(\"^noun\"),\n                matches(\"resp\\\\d\\\\.text$\")) |&gt;\n      filter_at(vars(paste0(\"noun\", 1:3)), all_vars(!is.na(.))) |&gt;\n      filter_at(vars(paste0(\"noun\", 4:7)), all_vars(is.na(.))) |&gt;\n      mutate(task = \"MS\",\n             level = \"easy\",\n             rt = NA) |&gt;\n      rename(\n        \"resp1\" = resp1.text,\n        \"resp2\" = resp2.text,\n        \"resp3\" = resp3.text,\n        \"id\" = \"Индивидуальный_код\"\n      ) |&gt;\n      select(-c(paste0(\"noun\", 4:7))) -&gt; MS_easy\n    \n    d |&gt; select(\"Индивидуальный_код\",\n                matches(\"^noun\"),\n                matches(\"MSm.text$\")) |&gt;\n      filter_at(vars(paste0(\"noun\", 4:5)), all_vars(!is.na(.))) |&gt;\n      filter_at(vars(paste0(\"noun\", 6:7)), all_vars(is.na(.))) |&gt;\n      mutate(task = \"MS\",\n             level = \"medium\",\n             rt = NA) |&gt;\n      rename(\"id\" = \"Индивидуальный_код\") |&gt;\n      rename_with(.fn = str_replace_all,\n                  pattern = \"_MSm\\\\.text\",\n                  replacement = \"\") |&gt; \n      select(-noun6, -noun7) -&gt; MS_medium\n    \n    \n    d |&gt; select(\"Индивидуальный_код\",\n                matches(\"^noun\"),\n                matches(\"MSh.text$\")) |&gt;\n      filter_at(vars(paste0(\"noun\", 1:7)), all_vars(!is.na(.))) |&gt;\n      mutate(task = \"MS\",\n             level = \"hard\",\n             rt = NA) |&gt;\n      rename(\"id\" = \"Индивидуальный_код\") |&gt; \n      rename_with(.fn = str_replace_all,\n                  pattern = \"_MSh\\\\.text\", \n                  replacement = \"\") -&gt; MS_hard\n  }\n  \n  tibble(\n    id = MS_easy$id[1],\n    trials = 1:16,\n    MS_easy_n = n_count(MS_easy),\n    MS_easy_rt = MS_easy$rt,\n    MS_medium_n = n_count(MS_medium),\n    MS_medium_rt = MS_medium$rt,\n    MS_hard_n = n_count(MS_hard),\n    MS_hard_rt = MS_hard$rt\n  ) |&gt;\n    pivot_longer(cols = -c(\"id\", \"trials\"), values_to = \"value\") |&gt;\n    separate(name, c(\"task\", \"level\", \"name\")) |&gt;\n    pivot_wider(values_from = value, names_from = name) |&gt;\n    mutate(acc = ifelse(level == \"easy\", n / 3,\n                        ifelse(\n                          level == \"medium\", n / 5,\n                          ifelse(level == \"hard\", n / 7, NA)\n                        ))) -&gt; MS\n  \n  return(MS)\n  \n}\n\n\nst_preproc &lt;- function(d) {\n\n  require(tidyverse)\n  \n  d |&gt; select(\n    # select columns we need\n    \"Индивидуальный_код\",\n    target_present,\n    key_resp_SE.keys,\n    key_resp_SE.corr,\n    key_resp_SE.rt\n  ) |&gt;\n    drop_na() |&gt; # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"ST\",\n           # add task name (Sternberg task)\n           level = \"easy\",\n           # add difficulty level\n           trial = 1:16) |&gt; # number trials\n    rename(\n      # rename columns for handy usage\n      \"id\" = \"Индивидуальный_код\",\n      \"key\" = key_resp_SE.keys,\n      \"is_correct\" = key_resp_SE.corr,\n      \"rt\" = key_resp_SE.rt\n    ) -&gt; ST_easy # ready to use\n  \n  d |&gt; select(\n    # select columns we need\n    \"Индивидуальный_код\",\n    target_present,\n    key_resp_SM.keys,\n    key_resp_SM.corr,\n    key_resp_SM.rt\n  ) |&gt;\n    drop_na() |&gt; # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"ST\",\n           # add task name (Sternberg task)\n           level = \"medium\",\n           # add difficulty level\n           trial = 1:16) |&gt; # number trials\n    rename(\n      # rename columns for handy usage\n      \"id\" = \"Индивидуальный_код\",\n      \"key\" = key_resp_SM.keys,\n      \"is_correct\" = key_resp_SM.corr,\n      \"rt\" = key_resp_SM.rt\n    ) -&gt; ST_medium # ready to use\n  \n  \n  d |&gt; select(\n    # select columns we need\n    \"Индивидуальный_код\",\n    target_present,\n    resp_S_H_trials.keys,\n    resp_S_H_trials.corr,\n    resp_S_H_trials.rt\n  ) |&gt;\n    drop_na() |&gt; # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"ST\",\n           # add task name (Sternberg task)\n           level = \"hard\",\n           # add difficulty level\n           trial = 1:16) |&gt; # number trials\n    rename(\n      # rename columns for handy usage\n      \"id\" = \"Индивидуальный_код\",\n      \"key\" = resp_S_H_trials.keys,\n      \"is_correct\" = resp_S_H_trials.corr,\n      \"rt\" = resp_S_H_trials.rt\n    ) -&gt; ST_hard # ready to use\n  \n  # bind all conditions of sternberg task to one tibble\n  bind_rows(ST_easy, ST_hard, ST_medium) -&gt; ST\n  \n  return(ST)\n\n}\n\n\nnasatlx_preproc &lt;- function(d) {\n  d |&gt; select(\"Индивидуальный_код\",\n              slider.response,\n              head,\n              task_type,\n              task_level) |&gt;\n    filter_at(vars(head, task_type, task_level), all_vars(!is.na(.))) |&gt;\n    rename(\"id\" = \"Индивидуальный_код\",\n           \"score\" = slider.response) |&gt;\n    mutate(\n      scale = recode(\n        head,\n        \"Умственная нагрузка\" = \"ME\",\n        \"Физическая нагрузка\" = \"PH\",\n        \"Давление времени\" = \"TI\",\n        \"Успешность выполнения\" = \"PE\",\n        \"Усилия\" = \"EF\",\n        \"Уровень фрустрации\" = \"FR\"\n      ),\n      task = recode(\n        task_type,\n        \"mental_rotation\" = \"MR\",\n        \"sternberg\" = \"ST\",\n        \"mental_span\" = \"MS\"\n      ),\n      level = recode(\n        task_level,\n        \"1\" = \"easy\",\n        \"2\" = \"medium\",\n        \"3\" = \"hard\"\n      )\n    ) |&gt;\n    select(id, scale, score, task, level) -&gt; NASATLX\n  \n  return(NASATLX)\n}\n\n\nsequence_preproc &lt;- function(d) {\n  \n  d |&gt; select(\n    E_rotation,\n    M_rotation,\n    H_rotation,\n    E_Sternberg,\n    M_Sternberg,\n    H_Sternberg,\n    E_span,\n    M_span,\n    H_span\n  ) |&gt;\n    drop_na() |&gt;\n    sapply(function(x) which(x == 1)) -&gt; v \n    \n  tibble(name = names(v),\n           order = v,\n           id = d[[\"Индивидуальный_код\"]][1]) |&gt;\n    arrange(order) |&gt;\n    separate(name, c(\"level\", \"task\"), \"_\") |&gt;\n    mutate(\n      task = recode(\n        task,\n        \"rotation\" = \"MR\",\n        \"Sternberg\" = \"ST\",\n        \"span\" = \"MS\"\n      ),\n      level = recode(\n        level,\n        \"E\" = \"easy\",\n        \"M\" = \"medium\",\n        \"H\" = \"hard\"\n      )\n    ) -&gt; SEQUENCE\n  \n  return(SEQUENCE)\n  \n}\n\n\n\n\n\nfiles &lt;- paste0(\"../data-firstbanch/\", dir(\"../data-firstbanch\"))\nlength(files)\n\n[1] 78\n\n\n\nMR_data &lt;- tibble()\nST_data &lt;- tibble()\nMS_data &lt;- tibble()\nNASATLX_data &lt;- tibble()\nSEQUENCE_data &lt;- tibble()\n\n\nfor (i in 1:length(files)) {\n  \n  print(files[i])\n  \n  d &lt;- read_csv(files[i], show_col_types = FALSE)\n  \n  MR_data |&gt; bind_rows(mr_preproc(d) |&gt; mutate(file = files[i])) -&gt; MR_data\n  ST_data |&gt; bind_rows(st_preproc(d) |&gt; mutate(file = files[i])) -&gt; ST_data\n  MS_data |&gt; bind_rows(ms_preproc(d) |&gt; mutate(file = files[i])) -&gt; MS_data\n  NASATLX_data |&gt; bind_rows(nasatlx_preproc(d) |&gt; mutate(file = files[i])) -&gt; NASATLX_data\n  SEQUENCE_data |&gt; bind_rows(sequence_preproc(d) |&gt; mutate(file = files[i])) -&gt; SEQUENCE_data\n\n}\n\n[1] \"../data-firstbanch/001SSMS_entire_exp_2022-05-31_18h24.17.csv\"\n[1] \"../data-firstbanch/003SSKS_entire_exp_2022-06-16_20h02.35.389.csv\"\n[1] \"../data-firstbanch/004SSDR_entire_exp_2022-06-02_21h35.09.567.csv\"\n[1] \"../data-firstbanch/005SSDR_entire_exp_2022-05-31_20h43.50.910.csv\"\n[1] \"../data-firstbanch/006SSEE_entire_exp_2022-06-02_22h14.18.092.csv\"\n[1] \"../data-firstbanch/007SSJM_entire_exp_2022-06-01_15h12.27.341.csv\"\n[1] \"../data-firstbanch/008SSEP_entire_exp_2022-09-15_21h36.55.631.csv\"\n[1] \"../data-firstbanch/009SSAP_entire_exp_2022-06-04_15h48.30.436.csv\"\n[1] \"../data-firstbanch/010SSEA_entire_exp_2022-06-07_24h08.05.064.csv\"\n[1] \"../data-firstbanch/011SSAB_entire_exp_2022-06-01_14h54.48.csv\"\n[1] \"../data-firstbanch/012EROP_entire_exp_2022-07-14_20h26.20.219.csv\"\n[1] \"../data-firstbanch/013ERVB_entire_exp_2022-06-23_15h53.22.750.csv\"\n[1] \"../data-firstbanch/014ERAI_entire_exp_2022-06-16_13h57.46.683.csv\"\n[1] \"../data-firstbanch/015ERIG_entire_exp_2022-08-17_23h56.01.csv\"\n[1] \"../data-firstbanch/016ERSA_entire_exp_2022-06-16_14h19.07.981.csv\"\n[1] \"../data-firstbanch/017ERVZ_entire_exp_2022-08-20_16h11.35.184.csv\"\n[1] \"../data-firstbanch/019ERSM_entire_exp_2022-06-18_21h43.19.372.csv\"\n[1] \"../data-firstbanch/021SSAZ_entire_exp_2022-07-15_03h19.45.491.csv\"\n[1] \"../data-firstbanch/022ERVS_entire_exp_2022-07-15_21h42.11.588.csv\"\n[1] \"../data-firstbanch/023ERRS_entire_exp_2022-07-11_18h59.41.csv\"\n[1] \"../data-firstbanch/024SSSV_entire_exp_2022-07-24_18h50.18.841.csv\"\n[1] \"../data-firstbanch/025ARAS_entire_exp_2023-05-02_19h18.58.479.csv\"\n[1] \"../data-firstbanch/026SSDM_entire_exp_2022-07-16_12h26.44.968.csv\"\n[1] \"../data-firstbanch/027ARDB_entire_exp_2022-07-18_10h37.13.819.csv\"\n[1] \"../data-firstbanch/029SSDL_entire_exp_2022-07-16_09h09.20.517.csv\"\n[1] \"../data-firstbanch/030SSPM_entire_exp_2022-08-17_21h31.18.058.csv\"\n[1] \"../data-firstbanch/031SSAS_entire_exp_2022-07-16_08h00.03.221.csv\"\n[1] \"../data-firstbanch/032SSAP_entire_exp_2022-07-17_13h28.21.518.csv\"\n[1] \"../data-firstbanch/033SSML_entire_exp_2022-07-26_18h52.18.365.csv\"\n[1] \"../data-firstbanch/035SSDD_entire_exp_2022-08-14_12h43.23.036.csv\"\n[1] \"../data-firstbanch/037ARDL_entire_exp_2022-07-16_22h20.51.764.csv\"\n[1] \"../data-firstbanch/038AREN_entire_exp_2022-07-19_11h25.52.006.csv\"\n[1] \"../data-firstbanch/039ARVP_entire_exp_2022-08-08_15h15.43.173.csv\"\n[1] \"../data-firstbanch/040ARKK_entire_exp_2023-04-23_17h12.22.533.csv\"\n[1] \"../data-firstbanch/042SSAA_entire_exp_2022-08-17_14h03.26.713.csv\"\n[1] \"../data-firstbanch/045SSEM_entire_exp_2022-08-17_14h07.54.819.csv\"\n[1] \"../data-firstbanch/046SSVS_entire_exp_2022-08-20_13h21.07.492.csv\"\n[1] \"../data-firstbanch/047SSAK_entire_exp_2022-08-20_23h14.23.266.csv\"\n[1] \"../data-firstbanch/048SSAG_entire_exp_2022-08-18_20h28.36.828.csv\"\n[1] \"../data-firstbanch/050SSAA_entire_exp_2023-04-21_13h38.45.765.csv\"\n[1] \"../data-firstbanch/052SSME_entire_exp_2022-08-26_10h32.55.991.csv\"\n[1] \"../data-firstbanch/053SSAF_entire_exp_2022-08-25_21h56.58.660.csv\"\n[1] \"../data-firstbanch/054SSEB_entire_exp_2022-08-25_18h20.01.028.csv\"\n[1] \"../data-firstbanch/055SSNS_entire_exp_2022-08-27_10h54.17.951.csv\"\n[1] \"../data-firstbanch/056SSKA_entire_exp_2022-08-26_10h55.02.575.csv\"\n[1] \"../data-firstbanch/058SSAB_entire_exp_2022-09-01_19h07.29.229.csv\"\n[1] \"../data-firstbanch/059SSAS_entire_exp_2022-08-28_11h50.43.886.csv\"\n[1] \"../data-firstbanch/062SSON_entire_exp_2022-09-03_18h24.04.978.csv\"\n[1] \"../data-firstbanch/063SSMP_entire_exp_2022-08-31_09h41.09.233.csv\"\n[1] \"../data-firstbanch/064SSAB_entire_exp_2022-09-09_24h56.58.121.csv\"\n[1] \"../data-firstbanch/065SSTM_entire_exp_2022-09-08_13h04.21.029.csv\"\n[1] \"../data-firstbanch/066SSKA_entire_exp_2023-04-20_19h55.36.813.csv\"\n[1] \"../data-firstbanch/067SSDA_entire_exp_2022-09-08_15h14.26.648.csv\"\n[1] \"../data-firstbanch/068SSMT_entire_exp_2022-09-08_14h02.24.512.csv\"\n[1] \"../data-firstbanch/069SSMV_entire_exp_2022-09-09_15h05.56.561.csv\"\n[1] \"../data-firstbanch/070SSAK_entire_exp_2022-09-08_15h22.31.854.csv\"\n[1] \"../data-firstbanch/071SSEB_entire_exp_2022-09-13_13h34.34.403.csv\"\n[1] \"../data-firstbanch/073SSMS_entire_exp_2022-09-17_12h41.16.219.csv\"\n[1] \"../data-firstbanch/074SSKS_entire_exp_2022-09-09_08h40.26.331.csv\"\n[1] \"../data-firstbanch/076SSRK_entire_exp_2022-09-10_24h29.10.709.csv\"\n[1] \"../data-firstbanch/077SSKK_entire_exp_2022-09-09_18h47.59.035.csv\"\n[1] \"../data-firstbanch/079SSRR_entire_exp_2022-09-18_20h01.24.482.csv\"\n[1] \"../data-firstbanch/079SSRR_entire_exp_2023-04-23_12h12.09.879.csv\"\n[1] \"../data-firstbanch/080SSAF_entire_exp_2022-09-09_18h48.13.239.csv\"\n[1] \"../data-firstbanch/083SSAN_entire_exp_2022-09-10_09h01.25.268.csv\"\n[1] \"../data-firstbanch/086SSAI_entire_exp_2022-09-09_19h50.26.340.csv\"\n[1] \"../data-firstbanch/087SSVC_entire_exp_2022-09-17_17h38.47.991.csv\"\n[1] \"../data-firstbanch/088SSDR_entire_exp_2022-09-16_17h28.38.834.csv\"\n[1] \"../data-firstbanch/089SSDM_entire_exp_2023-04-25_14h12.30.529.csv\"\n[1] \"../data-firstbanch/091SSJP_entire_exp_2022-09-14_23h28.30.070.csv\"\n[1] \"../data-firstbanch/092SSAG_entire_exp_2022-09-10_16h20.00.504.csv\"\n[1] \"../data-firstbanch/093SSEG_entire_exp_2022-09-14_17h20.12.899.csv\"\n[1] \"../data-firstbanch/095SSVH_entire_exp_2022-09-15_24h16.25.521.csv\"\n[1] \"../data-firstbanch/096SSMR_entire_exp_2023-05-06_17h41.53.790.csv\"\n[1] \"../data-firstbanch/098SSDM_entire_exp_2023-04-23_16h09.02.953.csv\"\n[1] \"../data-firstbanch/099SSDA_entire_exp_04-20-2023_18h41.33.261.csv\"\n[1] \"../data-firstbanch/100SSNT_entire_exp_2023-04-25_13h53.44.583.csv\"\n[1] \"../data-firstbanch/101SSOK_entire_exp_2023-04-25_15h56.39.280.csv\"\n\n\n\nunique(MR_data$file) |&gt; length()\n\n[1] 78\n\nunique(ST_data$file) |&gt; length()\n\n[1] 78\n\nunique(MS_data$file) |&gt; length()\n\n[1] 78\n\nunique(NASATLX_data$file) |&gt; length()\n\n[1] 78\n\nunique(SEQUENCE_data$file) |&gt; length()\n\n[1] 78\n\n\n\n\n\n\nexptime &lt;- tibble()\n\nfor (j in 1:length(files)) {\n  \n  print(files[j])\n  \n  tibble(file = files[j],\n         start = files[j] |&gt; \n           str_extract(\"\\\\d{4}-\\\\d{2}-\\\\d{2}_\\\\d+h\\\\d+\\\\.\\\\d+\") |&gt; \n           str_replace(\"h\", \":\") |&gt; \n           str_replace(\"\\\\.\", \":\") |&gt; \n           str_replace(\"_\", \" \") |&gt; \n           as_datetime(tz = \"Etc/GMT-3\"),\n         end = file.info(files[j])$mtime |&gt; \n           as_datetime(tz = \"UTC\")\n  ) |&gt; \n    bind_rows(exptime) -&gt; exptime\n  \n}\n\n[1] \"../data-firstbanch/001SSMS_entire_exp_2022-05-31_18h24.17.csv\"\n[1] \"../data-firstbanch/003SSKS_entire_exp_2022-06-16_20h02.35.389.csv\"\n[1] \"../data-firstbanch/004SSDR_entire_exp_2022-06-02_21h35.09.567.csv\"\n[1] \"../data-firstbanch/005SSDR_entire_exp_2022-05-31_20h43.50.910.csv\"\n[1] \"../data-firstbanch/006SSEE_entire_exp_2022-06-02_22h14.18.092.csv\"\n[1] \"../data-firstbanch/007SSJM_entire_exp_2022-06-01_15h12.27.341.csv\"\n[1] \"../data-firstbanch/008SSEP_entire_exp_2022-09-15_21h36.55.631.csv\"\n[1] \"../data-firstbanch/009SSAP_entire_exp_2022-06-04_15h48.30.436.csv\"\n[1] \"../data-firstbanch/010SSEA_entire_exp_2022-06-07_24h08.05.064.csv\"\n[1] \"../data-firstbanch/011SSAB_entire_exp_2022-06-01_14h54.48.csv\"\n[1] \"../data-firstbanch/012EROP_entire_exp_2022-07-14_20h26.20.219.csv\"\n[1] \"../data-firstbanch/013ERVB_entire_exp_2022-06-23_15h53.22.750.csv\"\n[1] \"../data-firstbanch/014ERAI_entire_exp_2022-06-16_13h57.46.683.csv\"\n[1] \"../data-firstbanch/015ERIG_entire_exp_2022-08-17_23h56.01.csv\"\n[1] \"../data-firstbanch/016ERSA_entire_exp_2022-06-16_14h19.07.981.csv\"\n[1] \"../data-firstbanch/017ERVZ_entire_exp_2022-08-20_16h11.35.184.csv\"\n[1] \"../data-firstbanch/019ERSM_entire_exp_2022-06-18_21h43.19.372.csv\"\n[1] \"../data-firstbanch/021SSAZ_entire_exp_2022-07-15_03h19.45.491.csv\"\n[1] \"../data-firstbanch/022ERVS_entire_exp_2022-07-15_21h42.11.588.csv\"\n[1] \"../data-firstbanch/023ERRS_entire_exp_2022-07-11_18h59.41.csv\"\n[1] \"../data-firstbanch/024SSSV_entire_exp_2022-07-24_18h50.18.841.csv\"\n[1] \"../data-firstbanch/025ARAS_entire_exp_2023-05-02_19h18.58.479.csv\"\n[1] \"../data-firstbanch/026SSDM_entire_exp_2022-07-16_12h26.44.968.csv\"\n[1] \"../data-firstbanch/027ARDB_entire_exp_2022-07-18_10h37.13.819.csv\"\n[1] \"../data-firstbanch/029SSDL_entire_exp_2022-07-16_09h09.20.517.csv\"\n[1] \"../data-firstbanch/030SSPM_entire_exp_2022-08-17_21h31.18.058.csv\"\n[1] \"../data-firstbanch/031SSAS_entire_exp_2022-07-16_08h00.03.221.csv\"\n[1] \"../data-firstbanch/032SSAP_entire_exp_2022-07-17_13h28.21.518.csv\"\n[1] \"../data-firstbanch/033SSML_entire_exp_2022-07-26_18h52.18.365.csv\"\n[1] \"../data-firstbanch/035SSDD_entire_exp_2022-08-14_12h43.23.036.csv\"\n[1] \"../data-firstbanch/037ARDL_entire_exp_2022-07-16_22h20.51.764.csv\"\n[1] \"../data-firstbanch/038AREN_entire_exp_2022-07-19_11h25.52.006.csv\"\n[1] \"../data-firstbanch/039ARVP_entire_exp_2022-08-08_15h15.43.173.csv\"\n[1] \"../data-firstbanch/040ARKK_entire_exp_2023-04-23_17h12.22.533.csv\"\n[1] \"../data-firstbanch/042SSAA_entire_exp_2022-08-17_14h03.26.713.csv\"\n[1] \"../data-firstbanch/045SSEM_entire_exp_2022-08-17_14h07.54.819.csv\"\n[1] \"../data-firstbanch/046SSVS_entire_exp_2022-08-20_13h21.07.492.csv\"\n[1] \"../data-firstbanch/047SSAK_entire_exp_2022-08-20_23h14.23.266.csv\"\n[1] \"../data-firstbanch/048SSAG_entire_exp_2022-08-18_20h28.36.828.csv\"\n[1] \"../data-firstbanch/050SSAA_entire_exp_2023-04-21_13h38.45.765.csv\"\n[1] \"../data-firstbanch/052SSME_entire_exp_2022-08-26_10h32.55.991.csv\"\n[1] \"../data-firstbanch/053SSAF_entire_exp_2022-08-25_21h56.58.660.csv\"\n[1] \"../data-firstbanch/054SSEB_entire_exp_2022-08-25_18h20.01.028.csv\"\n[1] \"../data-firstbanch/055SSNS_entire_exp_2022-08-27_10h54.17.951.csv\"\n[1] \"../data-firstbanch/056SSKA_entire_exp_2022-08-26_10h55.02.575.csv\"\n[1] \"../data-firstbanch/058SSAB_entire_exp_2022-09-01_19h07.29.229.csv\"\n[1] \"../data-firstbanch/059SSAS_entire_exp_2022-08-28_11h50.43.886.csv\"\n[1] \"../data-firstbanch/062SSON_entire_exp_2022-09-03_18h24.04.978.csv\"\n[1] \"../data-firstbanch/063SSMP_entire_exp_2022-08-31_09h41.09.233.csv\"\n[1] \"../data-firstbanch/064SSAB_entire_exp_2022-09-09_24h56.58.121.csv\"\n[1] \"../data-firstbanch/065SSTM_entire_exp_2022-09-08_13h04.21.029.csv\"\n[1] \"../data-firstbanch/066SSKA_entire_exp_2023-04-20_19h55.36.813.csv\"\n[1] \"../data-firstbanch/067SSDA_entire_exp_2022-09-08_15h14.26.648.csv\"\n[1] \"../data-firstbanch/068SSMT_entire_exp_2022-09-08_14h02.24.512.csv\"\n[1] \"../data-firstbanch/069SSMV_entire_exp_2022-09-09_15h05.56.561.csv\"\n[1] \"../data-firstbanch/070SSAK_entire_exp_2022-09-08_15h22.31.854.csv\"\n[1] \"../data-firstbanch/071SSEB_entire_exp_2022-09-13_13h34.34.403.csv\"\n[1] \"../data-firstbanch/073SSMS_entire_exp_2022-09-17_12h41.16.219.csv\"\n[1] \"../data-firstbanch/074SSKS_entire_exp_2022-09-09_08h40.26.331.csv\"\n[1] \"../data-firstbanch/076SSRK_entire_exp_2022-09-10_24h29.10.709.csv\"\n[1] \"../data-firstbanch/077SSKK_entire_exp_2022-09-09_18h47.59.035.csv\"\n[1] \"../data-firstbanch/079SSRR_entire_exp_2022-09-18_20h01.24.482.csv\"\n[1] \"../data-firstbanch/079SSRR_entire_exp_2023-04-23_12h12.09.879.csv\"\n[1] \"../data-firstbanch/080SSAF_entire_exp_2022-09-09_18h48.13.239.csv\"\n[1] \"../data-firstbanch/083SSAN_entire_exp_2022-09-10_09h01.25.268.csv\"\n[1] \"../data-firstbanch/086SSAI_entire_exp_2022-09-09_19h50.26.340.csv\"\n[1] \"../data-firstbanch/087SSVC_entire_exp_2022-09-17_17h38.47.991.csv\"\n[1] \"../data-firstbanch/088SSDR_entire_exp_2022-09-16_17h28.38.834.csv\"\n[1] \"../data-firstbanch/089SSDM_entire_exp_2023-04-25_14h12.30.529.csv\"\n[1] \"../data-firstbanch/091SSJP_entire_exp_2022-09-14_23h28.30.070.csv\"\n[1] \"../data-firstbanch/092SSAG_entire_exp_2022-09-10_16h20.00.504.csv\"\n[1] \"../data-firstbanch/093SSEG_entire_exp_2022-09-14_17h20.12.899.csv\"\n[1] \"../data-firstbanch/095SSVH_entire_exp_2022-09-15_24h16.25.521.csv\"\n[1] \"../data-firstbanch/096SSMR_entire_exp_2023-05-06_17h41.53.790.csv\"\n[1] \"../data-firstbanch/098SSDM_entire_exp_2023-04-23_16h09.02.953.csv\"\n[1] \"../data-firstbanch/099SSDA_entire_exp_04-20-2023_18h41.33.261.csv\"\n[1] \"../data-firstbanch/100SSNT_entire_exp_2023-04-25_13h53.44.583.csv\"\n[1] \"../data-firstbanch/101SSOK_entire_exp_2023-04-25_15h56.39.280.csv\"\n\n\n\nexptime |&gt; \n  mutate(dur = abs(start - end)) -&gt; exptime\n\n\n\n\n\nset.seed(123)\ntibble(\n  file = exptime$file,\n  id = stringi::stri_rand_strings(length(exptime$file), 10)) -&gt; IDS\n\n\nMR_data |&gt; select(-id) |&gt; full_join(IDS, by = \"file\") -&gt; MR_data\nST_data |&gt; select(-id) |&gt; full_join(IDS, by = \"file\") -&gt; ST_data\nMS_data |&gt; select(-id) |&gt; full_join(IDS, by = \"file\") -&gt; MS_data\nNASATLX_data |&gt; select(-id) |&gt; full_join(IDS, by = \"file\") -&gt; NASATLX_data\nSEQUENCE_data |&gt; select(-id) |&gt; full_join(IDS, by = \"file\") -&gt; SEQUENCE_data\nexptime |&gt; full_join(IDS, by = \"file\") -&gt; exptime\n\n\n\n\n\nMR_data |&gt; select(-file) |&gt; write_csv(\"MR_firstbanch_data.csv\")\nST_data |&gt; select(-file) |&gt; write_csv(\"ST_firstbanch_data.csv\")\nMS_data |&gt; select(-file) |&gt; write_csv(\"MS_firstbanch_data.csv\")\nNASATLX_data |&gt; select(-file) |&gt; write_csv(\"NASATLX_firstbanch_data.csv\")\nSEQUENCE_data |&gt; select(-file) |&gt; write_csv(\"SEQ_firstbanch_data.csv\")\nexptime |&gt; select(-file) |&gt; write_csv(\"EXPTIME_firstbanch_data.csv\")\nIDS |&gt; write_csv(\"IDS_firstbanch_data.csv\")"
  },
  {
    "objectID": "preprocess.html#packages",
    "href": "preprocess.html#packages",
    "title": "First Banch Preprocess Workflow",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors"
  },
  {
    "objectID": "preprocess.html#custom-preprocess-functions",
    "href": "preprocess.html#custom-preprocess-functions",
    "title": "First Banch Preprocess Workflow",
    "section": "",
    "text": "mr_preproc &lt;- function(d) {\n\n  require(tidyverse)\n  \n  d |&gt; select(\n    # select columns we need\n    \"Индивидуальный_код\",\n    correctAns,\n    base_pic,\n    rotated_pic,\n    resp_MR_easy.keys,\n    resp_MR_easy.corr,\n    resp_MR_easy.rt\n  ) |&gt;\n    drop_na() |&gt; # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"MR\",\n           # add task name (mental rotation)\n           level = \"easy\",\n           # add difficulty level\n           trial = 1:16) |&gt; # number trials\n    rename(\n      \"id\" = \"Индивидуальный_код\",\n      # rename columns for handy usage\n      \"key\" = resp_MR_easy.keys,\n      \"is_correct\" = resp_MR_easy.corr,\n      \"rt\" = resp_MR_easy.rt\n    ) -&gt; MR_easy # ready to use\n  \n  \n  d |&gt; select(\n    # select columns we need\n    \"Индивидуальный_код\",\n    correctAns,\n    base_pic,\n    rotated_pic,\n    resp_MR_medium.keys,\n    resp_MR_medium.corr,\n    resp_MR_medium.rt\n  ) |&gt;\n    drop_na() |&gt; # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"MR\",\n           # add task name (mental rotation)\n           level = \"medium\",\n           # add difficulty level\n           trial = 1:16) |&gt;  # number trials\n    rename(\n      # rename columns for handy usage\n      \"id\" = \"Индивидуальный_код\",\n      \"key\" = resp_MR_medium.keys,\n      \"is_correct\" = resp_MR_medium.corr,\n      \"rt\" = resp_MR_medium.rt\n    ) -&gt; MR_medium # ready to use\n  \n  \n  \n  d |&gt; select(\n    # select columns we need\n    \"Индивидуальный_код\",\n    correctAns,\n    base_pic,\n    rotated_pic,\n    resp_MR_hard.keys,\n    resp_MR_hard.corr,\n    resp_MR_hard.rt\n  ) |&gt;\n    drop_na() |&gt; # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"MR\",\n           # add task name (mental rotation)\n           level = \"hard\",\n           # add difficulty level\n           trial = 1:16) |&gt; # number trials\n    rename(\n      # rename columns for handy usage\n      \"id\" = \"Индивидуальный_код\",\n      \"key\" = resp_MR_hard.keys,\n      \"is_correct\" = resp_MR_hard.corr,\n      \"rt\" = resp_MR_hard.rt\n    ) -&gt; MR_hard # ready to use\n  \n  # bind all conditions of mental rotation task to one tibble\n  \n  bind_rows(MR_easy, MR_medium, MR_hard) -&gt; MR\n  \n  return(MR)\n  \n}\n\n\nms_preproc &lt;- function(d) {\n  \n  # Since we our participants could fill the fields in any order, \n  # here is a function which allows us to count correct inputs \n  # our subjects made.\n  \n  n_count &lt;- function(df) {\n    df |&gt; select(matches(\"^noun\")) |&gt; as.matrix() -&gt; s\n    df |&gt; select(matches(\"^resp\")) |&gt; as.matrix() -&gt; r\n    a &lt;- vector(mode = \"numeric\", length = 16L)\n    for (i in 1:16) {\n      a[i] &lt;- sum(r[i, ] %in% s[i, ])\n    }\n    return(a)\n  }\n  \n  if (\"mouse_MSe.time\" %in% colnames(d)) {\n    \n    d |&gt; select(\n      \"Индивидуальный_код\",\n      matches(\"^noun\"),\n      matches(\"resp\\\\d\\\\.text$\"),\n      \"mouse_MSe.time\"\n    ) |&gt;\n      filter_at(vars(paste0(\"noun\", 1:3)), all_vars(!is.na(.))) |&gt;\n      filter_at(vars(paste0(\"noun\", 4:7)), all_vars(is.na(.))) |&gt;\n      mutate(task = \"MS\",\n             level = \"easy\") |&gt;\n      rename(\n        \"resp1\" = resp1.text,\n        \"resp2\" = resp2.text,\n        \"resp3\" = resp3.text,\n        \"id\" = \"Индивидуальный_код\",\n        \"rt\" = \"mouse_MSe.time\"\n      ) |&gt;\n      select(-c(paste0(\"noun\", 4:7))) -&gt; MS_easy\n    \n    d |&gt; select(\n      \"Индивидуальный_код\",\n      matches(\"^noun\"),\n      matches(\"MSm.text$\"),\n      \"mouse_MSm.time\"\n    ) |&gt;\n      filter_at(vars(paste0(\"noun\", 4:5)), all_vars(!is.na(.))) |&gt;\n      filter_at(vars(paste0(\"noun\", 6:7)), all_vars(is.na(.))) |&gt;\n      mutate(task = \"MS\",\n             level = \"medium\") |&gt; \n      rename(\"id\" = \"Индивидуальный_код\",\n             \"rt\" = \"mouse_MSm.time\") |&gt;\n      rename_with(.fn = str_replace_all, \n                  pattern = \"_MSm\\\\.text\", \n                  replacement = \"\") |&gt; \n      select(-noun6, -noun7) -&gt; MS_medium\n    \n    \n    d |&gt; select(\n      \"Индивидуальный_код\",\n      matches(\"^noun\"),\n      matches(\"MSh.text$\"),\n      \"mouse_MSh.time\"\n    ) |&gt;\n      filter_at(vars(paste0(\"noun\", 1:7)), all_vars(!is.na(.))) |&gt;\n      mutate(task = \"MS\",\n             level = \"hard\") |&gt;\n      rename(\"id\" = \"Индивидуальный_код\",\n             \"rt\" = \"mouse_MSh.time\") |&gt; \n      rename_with(.fn = str_replace_all,\n                  pattern = \"_MSh\\\\.text\",\n                  replacement = \"\") -&gt; MS_hard\n    \n  } else {\n    \n    d |&gt; select(\"Индивидуальный_код\",\n                matches(\"^noun\"),\n                matches(\"resp\\\\d\\\\.text$\")) |&gt;\n      filter_at(vars(paste0(\"noun\", 1:3)), all_vars(!is.na(.))) |&gt;\n      filter_at(vars(paste0(\"noun\", 4:7)), all_vars(is.na(.))) |&gt;\n      mutate(task = \"MS\",\n             level = \"easy\",\n             rt = NA) |&gt;\n      rename(\n        \"resp1\" = resp1.text,\n        \"resp2\" = resp2.text,\n        \"resp3\" = resp3.text,\n        \"id\" = \"Индивидуальный_код\"\n      ) |&gt;\n      select(-c(paste0(\"noun\", 4:7))) -&gt; MS_easy\n    \n    d |&gt; select(\"Индивидуальный_код\",\n                matches(\"^noun\"),\n                matches(\"MSm.text$\")) |&gt;\n      filter_at(vars(paste0(\"noun\", 4:5)), all_vars(!is.na(.))) |&gt;\n      filter_at(vars(paste0(\"noun\", 6:7)), all_vars(is.na(.))) |&gt;\n      mutate(task = \"MS\",\n             level = \"medium\",\n             rt = NA) |&gt;\n      rename(\"id\" = \"Индивидуальный_код\") |&gt;\n      rename_with(.fn = str_replace_all,\n                  pattern = \"_MSm\\\\.text\",\n                  replacement = \"\") |&gt; \n      select(-noun6, -noun7) -&gt; MS_medium\n    \n    \n    d |&gt; select(\"Индивидуальный_код\",\n                matches(\"^noun\"),\n                matches(\"MSh.text$\")) |&gt;\n      filter_at(vars(paste0(\"noun\", 1:7)), all_vars(!is.na(.))) |&gt;\n      mutate(task = \"MS\",\n             level = \"hard\",\n             rt = NA) |&gt;\n      rename(\"id\" = \"Индивидуальный_код\") |&gt; \n      rename_with(.fn = str_replace_all,\n                  pattern = \"_MSh\\\\.text\", \n                  replacement = \"\") -&gt; MS_hard\n  }\n  \n  tibble(\n    id = MS_easy$id[1],\n    trials = 1:16,\n    MS_easy_n = n_count(MS_easy),\n    MS_easy_rt = MS_easy$rt,\n    MS_medium_n = n_count(MS_medium),\n    MS_medium_rt = MS_medium$rt,\n    MS_hard_n = n_count(MS_hard),\n    MS_hard_rt = MS_hard$rt\n  ) |&gt;\n    pivot_longer(cols = -c(\"id\", \"trials\"), values_to = \"value\") |&gt;\n    separate(name, c(\"task\", \"level\", \"name\")) |&gt;\n    pivot_wider(values_from = value, names_from = name) |&gt;\n    mutate(acc = ifelse(level == \"easy\", n / 3,\n                        ifelse(\n                          level == \"medium\", n / 5,\n                          ifelse(level == \"hard\", n / 7, NA)\n                        ))) -&gt; MS\n  \n  return(MS)\n  \n}\n\n\nst_preproc &lt;- function(d) {\n\n  require(tidyverse)\n  \n  d |&gt; select(\n    # select columns we need\n    \"Индивидуальный_код\",\n    target_present,\n    key_resp_SE.keys,\n    key_resp_SE.corr,\n    key_resp_SE.rt\n  ) |&gt;\n    drop_na() |&gt; # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"ST\",\n           # add task name (Sternberg task)\n           level = \"easy\",\n           # add difficulty level\n           trial = 1:16) |&gt; # number trials\n    rename(\n      # rename columns for handy usage\n      \"id\" = \"Индивидуальный_код\",\n      \"key\" = key_resp_SE.keys,\n      \"is_correct\" = key_resp_SE.corr,\n      \"rt\" = key_resp_SE.rt\n    ) -&gt; ST_easy # ready to use\n  \n  d |&gt; select(\n    # select columns we need\n    \"Индивидуальный_код\",\n    target_present,\n    key_resp_SM.keys,\n    key_resp_SM.corr,\n    key_resp_SM.rt\n  ) |&gt;\n    drop_na() |&gt; # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"ST\",\n           # add task name (Sternberg task)\n           level = \"medium\",\n           # add difficulty level\n           trial = 1:16) |&gt; # number trials\n    rename(\n      # rename columns for handy usage\n      \"id\" = \"Индивидуальный_код\",\n      \"key\" = key_resp_SM.keys,\n      \"is_correct\" = key_resp_SM.corr,\n      \"rt\" = key_resp_SM.rt\n    ) -&gt; ST_medium # ready to use\n  \n  \n  d |&gt; select(\n    # select columns we need\n    \"Индивидуальный_код\",\n    target_present,\n    resp_S_H_trials.keys,\n    resp_S_H_trials.corr,\n    resp_S_H_trials.rt\n  ) |&gt;\n    drop_na() |&gt; # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"ST\",\n           # add task name (Sternberg task)\n           level = \"hard\",\n           # add difficulty level\n           trial = 1:16) |&gt; # number trials\n    rename(\n      # rename columns for handy usage\n      \"id\" = \"Индивидуальный_код\",\n      \"key\" = resp_S_H_trials.keys,\n      \"is_correct\" = resp_S_H_trials.corr,\n      \"rt\" = resp_S_H_trials.rt\n    ) -&gt; ST_hard # ready to use\n  \n  # bind all conditions of sternberg task to one tibble\n  bind_rows(ST_easy, ST_hard, ST_medium) -&gt; ST\n  \n  return(ST)\n\n}\n\n\nnasatlx_preproc &lt;- function(d) {\n  d |&gt; select(\"Индивидуальный_код\",\n              slider.response,\n              head,\n              task_type,\n              task_level) |&gt;\n    filter_at(vars(head, task_type, task_level), all_vars(!is.na(.))) |&gt;\n    rename(\"id\" = \"Индивидуальный_код\",\n           \"score\" = slider.response) |&gt;\n    mutate(\n      scale = recode(\n        head,\n        \"Умственная нагрузка\" = \"ME\",\n        \"Физическая нагрузка\" = \"PH\",\n        \"Давление времени\" = \"TI\",\n        \"Успешность выполнения\" = \"PE\",\n        \"Усилия\" = \"EF\",\n        \"Уровень фрустрации\" = \"FR\"\n      ),\n      task = recode(\n        task_type,\n        \"mental_rotation\" = \"MR\",\n        \"sternberg\" = \"ST\",\n        \"mental_span\" = \"MS\"\n      ),\n      level = recode(\n        task_level,\n        \"1\" = \"easy\",\n        \"2\" = \"medium\",\n        \"3\" = \"hard\"\n      )\n    ) |&gt;\n    select(id, scale, score, task, level) -&gt; NASATLX\n  \n  return(NASATLX)\n}\n\n\nsequence_preproc &lt;- function(d) {\n  \n  d |&gt; select(\n    E_rotation,\n    M_rotation,\n    H_rotation,\n    E_Sternberg,\n    M_Sternberg,\n    H_Sternberg,\n    E_span,\n    M_span,\n    H_span\n  ) |&gt;\n    drop_na() |&gt;\n    sapply(function(x) which(x == 1)) -&gt; v \n    \n  tibble(name = names(v),\n           order = v,\n           id = d[[\"Индивидуальный_код\"]][1]) |&gt;\n    arrange(order) |&gt;\n    separate(name, c(\"level\", \"task\"), \"_\") |&gt;\n    mutate(\n      task = recode(\n        task,\n        \"rotation\" = \"MR\",\n        \"Sternberg\" = \"ST\",\n        \"span\" = \"MS\"\n      ),\n      level = recode(\n        level,\n        \"E\" = \"easy\",\n        \"M\" = \"medium\",\n        \"H\" = \"hard\"\n      )\n    ) -&gt; SEQUENCE\n  \n  return(SEQUENCE)\n  \n}"
  },
  {
    "objectID": "preprocess.html#load-preprocess-data",
    "href": "preprocess.html#load-preprocess-data",
    "title": "First Banch Preprocess Workflow",
    "section": "",
    "text": "files &lt;- paste0(\"../data-firstbanch/\", dir(\"../data-firstbanch\"))\nlength(files)\n\n[1] 78\n\n\n\nMR_data &lt;- tibble()\nST_data &lt;- tibble()\nMS_data &lt;- tibble()\nNASATLX_data &lt;- tibble()\nSEQUENCE_data &lt;- tibble()\n\n\nfor (i in 1:length(files)) {\n  \n  print(files[i])\n  \n  d &lt;- read_csv(files[i], show_col_types = FALSE)\n  \n  MR_data |&gt; bind_rows(mr_preproc(d) |&gt; mutate(file = files[i])) -&gt; MR_data\n  ST_data |&gt; bind_rows(st_preproc(d) |&gt; mutate(file = files[i])) -&gt; ST_data\n  MS_data |&gt; bind_rows(ms_preproc(d) |&gt; mutate(file = files[i])) -&gt; MS_data\n  NASATLX_data |&gt; bind_rows(nasatlx_preproc(d) |&gt; mutate(file = files[i])) -&gt; NASATLX_data\n  SEQUENCE_data |&gt; bind_rows(sequence_preproc(d) |&gt; mutate(file = files[i])) -&gt; SEQUENCE_data\n\n}\n\n[1] \"../data-firstbanch/001SSMS_entire_exp_2022-05-31_18h24.17.csv\"\n[1] \"../data-firstbanch/003SSKS_entire_exp_2022-06-16_20h02.35.389.csv\"\n[1] \"../data-firstbanch/004SSDR_entire_exp_2022-06-02_21h35.09.567.csv\"\n[1] \"../data-firstbanch/005SSDR_entire_exp_2022-05-31_20h43.50.910.csv\"\n[1] \"../data-firstbanch/006SSEE_entire_exp_2022-06-02_22h14.18.092.csv\"\n[1] \"../data-firstbanch/007SSJM_entire_exp_2022-06-01_15h12.27.341.csv\"\n[1] \"../data-firstbanch/008SSEP_entire_exp_2022-09-15_21h36.55.631.csv\"\n[1] \"../data-firstbanch/009SSAP_entire_exp_2022-06-04_15h48.30.436.csv\"\n[1] \"../data-firstbanch/010SSEA_entire_exp_2022-06-07_24h08.05.064.csv\"\n[1] \"../data-firstbanch/011SSAB_entire_exp_2022-06-01_14h54.48.csv\"\n[1] \"../data-firstbanch/012EROP_entire_exp_2022-07-14_20h26.20.219.csv\"\n[1] \"../data-firstbanch/013ERVB_entire_exp_2022-06-23_15h53.22.750.csv\"\n[1] \"../data-firstbanch/014ERAI_entire_exp_2022-06-16_13h57.46.683.csv\"\n[1] \"../data-firstbanch/015ERIG_entire_exp_2022-08-17_23h56.01.csv\"\n[1] \"../data-firstbanch/016ERSA_entire_exp_2022-06-16_14h19.07.981.csv\"\n[1] \"../data-firstbanch/017ERVZ_entire_exp_2022-08-20_16h11.35.184.csv\"\n[1] \"../data-firstbanch/019ERSM_entire_exp_2022-06-18_21h43.19.372.csv\"\n[1] \"../data-firstbanch/021SSAZ_entire_exp_2022-07-15_03h19.45.491.csv\"\n[1] \"../data-firstbanch/022ERVS_entire_exp_2022-07-15_21h42.11.588.csv\"\n[1] \"../data-firstbanch/023ERRS_entire_exp_2022-07-11_18h59.41.csv\"\n[1] \"../data-firstbanch/024SSSV_entire_exp_2022-07-24_18h50.18.841.csv\"\n[1] \"../data-firstbanch/025ARAS_entire_exp_2023-05-02_19h18.58.479.csv\"\n[1] \"../data-firstbanch/026SSDM_entire_exp_2022-07-16_12h26.44.968.csv\"\n[1] \"../data-firstbanch/027ARDB_entire_exp_2022-07-18_10h37.13.819.csv\"\n[1] \"../data-firstbanch/029SSDL_entire_exp_2022-07-16_09h09.20.517.csv\"\n[1] \"../data-firstbanch/030SSPM_entire_exp_2022-08-17_21h31.18.058.csv\"\n[1] \"../data-firstbanch/031SSAS_entire_exp_2022-07-16_08h00.03.221.csv\"\n[1] \"../data-firstbanch/032SSAP_entire_exp_2022-07-17_13h28.21.518.csv\"\n[1] \"../data-firstbanch/033SSML_entire_exp_2022-07-26_18h52.18.365.csv\"\n[1] \"../data-firstbanch/035SSDD_entire_exp_2022-08-14_12h43.23.036.csv\"\n[1] \"../data-firstbanch/037ARDL_entire_exp_2022-07-16_22h20.51.764.csv\"\n[1] \"../data-firstbanch/038AREN_entire_exp_2022-07-19_11h25.52.006.csv\"\n[1] \"../data-firstbanch/039ARVP_entire_exp_2022-08-08_15h15.43.173.csv\"\n[1] \"../data-firstbanch/040ARKK_entire_exp_2023-04-23_17h12.22.533.csv\"\n[1] \"../data-firstbanch/042SSAA_entire_exp_2022-08-17_14h03.26.713.csv\"\n[1] \"../data-firstbanch/045SSEM_entire_exp_2022-08-17_14h07.54.819.csv\"\n[1] \"../data-firstbanch/046SSVS_entire_exp_2022-08-20_13h21.07.492.csv\"\n[1] \"../data-firstbanch/047SSAK_entire_exp_2022-08-20_23h14.23.266.csv\"\n[1] \"../data-firstbanch/048SSAG_entire_exp_2022-08-18_20h28.36.828.csv\"\n[1] \"../data-firstbanch/050SSAA_entire_exp_2023-04-21_13h38.45.765.csv\"\n[1] \"../data-firstbanch/052SSME_entire_exp_2022-08-26_10h32.55.991.csv\"\n[1] \"../data-firstbanch/053SSAF_entire_exp_2022-08-25_21h56.58.660.csv\"\n[1] \"../data-firstbanch/054SSEB_entire_exp_2022-08-25_18h20.01.028.csv\"\n[1] \"../data-firstbanch/055SSNS_entire_exp_2022-08-27_10h54.17.951.csv\"\n[1] \"../data-firstbanch/056SSKA_entire_exp_2022-08-26_10h55.02.575.csv\"\n[1] \"../data-firstbanch/058SSAB_entire_exp_2022-09-01_19h07.29.229.csv\"\n[1] \"../data-firstbanch/059SSAS_entire_exp_2022-08-28_11h50.43.886.csv\"\n[1] \"../data-firstbanch/062SSON_entire_exp_2022-09-03_18h24.04.978.csv\"\n[1] \"../data-firstbanch/063SSMP_entire_exp_2022-08-31_09h41.09.233.csv\"\n[1] \"../data-firstbanch/064SSAB_entire_exp_2022-09-09_24h56.58.121.csv\"\n[1] \"../data-firstbanch/065SSTM_entire_exp_2022-09-08_13h04.21.029.csv\"\n[1] \"../data-firstbanch/066SSKA_entire_exp_2023-04-20_19h55.36.813.csv\"\n[1] \"../data-firstbanch/067SSDA_entire_exp_2022-09-08_15h14.26.648.csv\"\n[1] \"../data-firstbanch/068SSMT_entire_exp_2022-09-08_14h02.24.512.csv\"\n[1] \"../data-firstbanch/069SSMV_entire_exp_2022-09-09_15h05.56.561.csv\"\n[1] \"../data-firstbanch/070SSAK_entire_exp_2022-09-08_15h22.31.854.csv\"\n[1] \"../data-firstbanch/071SSEB_entire_exp_2022-09-13_13h34.34.403.csv\"\n[1] \"../data-firstbanch/073SSMS_entire_exp_2022-09-17_12h41.16.219.csv\"\n[1] \"../data-firstbanch/074SSKS_entire_exp_2022-09-09_08h40.26.331.csv\"\n[1] \"../data-firstbanch/076SSRK_entire_exp_2022-09-10_24h29.10.709.csv\"\n[1] \"../data-firstbanch/077SSKK_entire_exp_2022-09-09_18h47.59.035.csv\"\n[1] \"../data-firstbanch/079SSRR_entire_exp_2022-09-18_20h01.24.482.csv\"\n[1] \"../data-firstbanch/079SSRR_entire_exp_2023-04-23_12h12.09.879.csv\"\n[1] \"../data-firstbanch/080SSAF_entire_exp_2022-09-09_18h48.13.239.csv\"\n[1] \"../data-firstbanch/083SSAN_entire_exp_2022-09-10_09h01.25.268.csv\"\n[1] \"../data-firstbanch/086SSAI_entire_exp_2022-09-09_19h50.26.340.csv\"\n[1] \"../data-firstbanch/087SSVC_entire_exp_2022-09-17_17h38.47.991.csv\"\n[1] \"../data-firstbanch/088SSDR_entire_exp_2022-09-16_17h28.38.834.csv\"\n[1] \"../data-firstbanch/089SSDM_entire_exp_2023-04-25_14h12.30.529.csv\"\n[1] \"../data-firstbanch/091SSJP_entire_exp_2022-09-14_23h28.30.070.csv\"\n[1] \"../data-firstbanch/092SSAG_entire_exp_2022-09-10_16h20.00.504.csv\"\n[1] \"../data-firstbanch/093SSEG_entire_exp_2022-09-14_17h20.12.899.csv\"\n[1] \"../data-firstbanch/095SSVH_entire_exp_2022-09-15_24h16.25.521.csv\"\n[1] \"../data-firstbanch/096SSMR_entire_exp_2023-05-06_17h41.53.790.csv\"\n[1] \"../data-firstbanch/098SSDM_entire_exp_2023-04-23_16h09.02.953.csv\"\n[1] \"../data-firstbanch/099SSDA_entire_exp_04-20-2023_18h41.33.261.csv\"\n[1] \"../data-firstbanch/100SSNT_entire_exp_2023-04-25_13h53.44.583.csv\"\n[1] \"../data-firstbanch/101SSOK_entire_exp_2023-04-25_15h56.39.280.csv\"\n\n\n\nunique(MR_data$file) |&gt; length()\n\n[1] 78\n\nunique(ST_data$file) |&gt; length()\n\n[1] 78\n\nunique(MS_data$file) |&gt; length()\n\n[1] 78\n\nunique(NASATLX_data$file) |&gt; length()\n\n[1] 78\n\nunique(SEQUENCE_data$file) |&gt; length()\n\n[1] 78"
  },
  {
    "objectID": "preprocess.html#overall-experiment-time",
    "href": "preprocess.html#overall-experiment-time",
    "title": "First Banch Preprocess Workflow",
    "section": "",
    "text": "exptime &lt;- tibble()\n\nfor (j in 1:length(files)) {\n  \n  print(files[j])\n  \n  tibble(file = files[j],\n         start = files[j] |&gt; \n           str_extract(\"\\\\d{4}-\\\\d{2}-\\\\d{2}_\\\\d+h\\\\d+\\\\.\\\\d+\") |&gt; \n           str_replace(\"h\", \":\") |&gt; \n           str_replace(\"\\\\.\", \":\") |&gt; \n           str_replace(\"_\", \" \") |&gt; \n           as_datetime(tz = \"Etc/GMT-3\"),\n         end = file.info(files[j])$mtime |&gt; \n           as_datetime(tz = \"UTC\")\n  ) |&gt; \n    bind_rows(exptime) -&gt; exptime\n  \n}\n\n[1] \"../data-firstbanch/001SSMS_entire_exp_2022-05-31_18h24.17.csv\"\n[1] \"../data-firstbanch/003SSKS_entire_exp_2022-06-16_20h02.35.389.csv\"\n[1] \"../data-firstbanch/004SSDR_entire_exp_2022-06-02_21h35.09.567.csv\"\n[1] \"../data-firstbanch/005SSDR_entire_exp_2022-05-31_20h43.50.910.csv\"\n[1] \"../data-firstbanch/006SSEE_entire_exp_2022-06-02_22h14.18.092.csv\"\n[1] \"../data-firstbanch/007SSJM_entire_exp_2022-06-01_15h12.27.341.csv\"\n[1] \"../data-firstbanch/008SSEP_entire_exp_2022-09-15_21h36.55.631.csv\"\n[1] \"../data-firstbanch/009SSAP_entire_exp_2022-06-04_15h48.30.436.csv\"\n[1] \"../data-firstbanch/010SSEA_entire_exp_2022-06-07_24h08.05.064.csv\"\n[1] \"../data-firstbanch/011SSAB_entire_exp_2022-06-01_14h54.48.csv\"\n[1] \"../data-firstbanch/012EROP_entire_exp_2022-07-14_20h26.20.219.csv\"\n[1] \"../data-firstbanch/013ERVB_entire_exp_2022-06-23_15h53.22.750.csv\"\n[1] \"../data-firstbanch/014ERAI_entire_exp_2022-06-16_13h57.46.683.csv\"\n[1] \"../data-firstbanch/015ERIG_entire_exp_2022-08-17_23h56.01.csv\"\n[1] \"../data-firstbanch/016ERSA_entire_exp_2022-06-16_14h19.07.981.csv\"\n[1] \"../data-firstbanch/017ERVZ_entire_exp_2022-08-20_16h11.35.184.csv\"\n[1] \"../data-firstbanch/019ERSM_entire_exp_2022-06-18_21h43.19.372.csv\"\n[1] \"../data-firstbanch/021SSAZ_entire_exp_2022-07-15_03h19.45.491.csv\"\n[1] \"../data-firstbanch/022ERVS_entire_exp_2022-07-15_21h42.11.588.csv\"\n[1] \"../data-firstbanch/023ERRS_entire_exp_2022-07-11_18h59.41.csv\"\n[1] \"../data-firstbanch/024SSSV_entire_exp_2022-07-24_18h50.18.841.csv\"\n[1] \"../data-firstbanch/025ARAS_entire_exp_2023-05-02_19h18.58.479.csv\"\n[1] \"../data-firstbanch/026SSDM_entire_exp_2022-07-16_12h26.44.968.csv\"\n[1] \"../data-firstbanch/027ARDB_entire_exp_2022-07-18_10h37.13.819.csv\"\n[1] \"../data-firstbanch/029SSDL_entire_exp_2022-07-16_09h09.20.517.csv\"\n[1] \"../data-firstbanch/030SSPM_entire_exp_2022-08-17_21h31.18.058.csv\"\n[1] \"../data-firstbanch/031SSAS_entire_exp_2022-07-16_08h00.03.221.csv\"\n[1] \"../data-firstbanch/032SSAP_entire_exp_2022-07-17_13h28.21.518.csv\"\n[1] \"../data-firstbanch/033SSML_entire_exp_2022-07-26_18h52.18.365.csv\"\n[1] \"../data-firstbanch/035SSDD_entire_exp_2022-08-14_12h43.23.036.csv\"\n[1] \"../data-firstbanch/037ARDL_entire_exp_2022-07-16_22h20.51.764.csv\"\n[1] \"../data-firstbanch/038AREN_entire_exp_2022-07-19_11h25.52.006.csv\"\n[1] \"../data-firstbanch/039ARVP_entire_exp_2022-08-08_15h15.43.173.csv\"\n[1] \"../data-firstbanch/040ARKK_entire_exp_2023-04-23_17h12.22.533.csv\"\n[1] \"../data-firstbanch/042SSAA_entire_exp_2022-08-17_14h03.26.713.csv\"\n[1] \"../data-firstbanch/045SSEM_entire_exp_2022-08-17_14h07.54.819.csv\"\n[1] \"../data-firstbanch/046SSVS_entire_exp_2022-08-20_13h21.07.492.csv\"\n[1] \"../data-firstbanch/047SSAK_entire_exp_2022-08-20_23h14.23.266.csv\"\n[1] \"../data-firstbanch/048SSAG_entire_exp_2022-08-18_20h28.36.828.csv\"\n[1] \"../data-firstbanch/050SSAA_entire_exp_2023-04-21_13h38.45.765.csv\"\n[1] \"../data-firstbanch/052SSME_entire_exp_2022-08-26_10h32.55.991.csv\"\n[1] \"../data-firstbanch/053SSAF_entire_exp_2022-08-25_21h56.58.660.csv\"\n[1] \"../data-firstbanch/054SSEB_entire_exp_2022-08-25_18h20.01.028.csv\"\n[1] \"../data-firstbanch/055SSNS_entire_exp_2022-08-27_10h54.17.951.csv\"\n[1] \"../data-firstbanch/056SSKA_entire_exp_2022-08-26_10h55.02.575.csv\"\n[1] \"../data-firstbanch/058SSAB_entire_exp_2022-09-01_19h07.29.229.csv\"\n[1] \"../data-firstbanch/059SSAS_entire_exp_2022-08-28_11h50.43.886.csv\"\n[1] \"../data-firstbanch/062SSON_entire_exp_2022-09-03_18h24.04.978.csv\"\n[1] \"../data-firstbanch/063SSMP_entire_exp_2022-08-31_09h41.09.233.csv\"\n[1] \"../data-firstbanch/064SSAB_entire_exp_2022-09-09_24h56.58.121.csv\"\n[1] \"../data-firstbanch/065SSTM_entire_exp_2022-09-08_13h04.21.029.csv\"\n[1] \"../data-firstbanch/066SSKA_entire_exp_2023-04-20_19h55.36.813.csv\"\n[1] \"../data-firstbanch/067SSDA_entire_exp_2022-09-08_15h14.26.648.csv\"\n[1] \"../data-firstbanch/068SSMT_entire_exp_2022-09-08_14h02.24.512.csv\"\n[1] \"../data-firstbanch/069SSMV_entire_exp_2022-09-09_15h05.56.561.csv\"\n[1] \"../data-firstbanch/070SSAK_entire_exp_2022-09-08_15h22.31.854.csv\"\n[1] \"../data-firstbanch/071SSEB_entire_exp_2022-09-13_13h34.34.403.csv\"\n[1] \"../data-firstbanch/073SSMS_entire_exp_2022-09-17_12h41.16.219.csv\"\n[1] \"../data-firstbanch/074SSKS_entire_exp_2022-09-09_08h40.26.331.csv\"\n[1] \"../data-firstbanch/076SSRK_entire_exp_2022-09-10_24h29.10.709.csv\"\n[1] \"../data-firstbanch/077SSKK_entire_exp_2022-09-09_18h47.59.035.csv\"\n[1] \"../data-firstbanch/079SSRR_entire_exp_2022-09-18_20h01.24.482.csv\"\n[1] \"../data-firstbanch/079SSRR_entire_exp_2023-04-23_12h12.09.879.csv\"\n[1] \"../data-firstbanch/080SSAF_entire_exp_2022-09-09_18h48.13.239.csv\"\n[1] \"../data-firstbanch/083SSAN_entire_exp_2022-09-10_09h01.25.268.csv\"\n[1] \"../data-firstbanch/086SSAI_entire_exp_2022-09-09_19h50.26.340.csv\"\n[1] \"../data-firstbanch/087SSVC_entire_exp_2022-09-17_17h38.47.991.csv\"\n[1] \"../data-firstbanch/088SSDR_entire_exp_2022-09-16_17h28.38.834.csv\"\n[1] \"../data-firstbanch/089SSDM_entire_exp_2023-04-25_14h12.30.529.csv\"\n[1] \"../data-firstbanch/091SSJP_entire_exp_2022-09-14_23h28.30.070.csv\"\n[1] \"../data-firstbanch/092SSAG_entire_exp_2022-09-10_16h20.00.504.csv\"\n[1] \"../data-firstbanch/093SSEG_entire_exp_2022-09-14_17h20.12.899.csv\"\n[1] \"../data-firstbanch/095SSVH_entire_exp_2022-09-15_24h16.25.521.csv\"\n[1] \"../data-firstbanch/096SSMR_entire_exp_2023-05-06_17h41.53.790.csv\"\n[1] \"../data-firstbanch/098SSDM_entire_exp_2023-04-23_16h09.02.953.csv\"\n[1] \"../data-firstbanch/099SSDA_entire_exp_04-20-2023_18h41.33.261.csv\"\n[1] \"../data-firstbanch/100SSNT_entire_exp_2023-04-25_13h53.44.583.csv\"\n[1] \"../data-firstbanch/101SSOK_entire_exp_2023-04-25_15h56.39.280.csv\"\n\n\n\nexptime |&gt; \n  mutate(dur = abs(start - end)) -&gt; exptime"
  },
  {
    "objectID": "preprocess.html#create-and-add-ids",
    "href": "preprocess.html#create-and-add-ids",
    "title": "First Banch Preprocess Workflow",
    "section": "",
    "text": "set.seed(123)\ntibble(\n  file = exptime$file,\n  id = stringi::stri_rand_strings(length(exptime$file), 10)) -&gt; IDS\n\n\nMR_data |&gt; select(-id) |&gt; full_join(IDS, by = \"file\") -&gt; MR_data\nST_data |&gt; select(-id) |&gt; full_join(IDS, by = \"file\") -&gt; ST_data\nMS_data |&gt; select(-id) |&gt; full_join(IDS, by = \"file\") -&gt; MS_data\nNASATLX_data |&gt; select(-id) |&gt; full_join(IDS, by = \"file\") -&gt; NASATLX_data\nSEQUENCE_data |&gt; select(-id) |&gt; full_join(IDS, by = \"file\") -&gt; SEQUENCE_data\nexptime |&gt; full_join(IDS, by = \"file\") -&gt; exptime"
  },
  {
    "objectID": "preprocess.html#save-preprocessed-data",
    "href": "preprocess.html#save-preprocessed-data",
    "title": "First Banch Preprocess Workflow",
    "section": "",
    "text": "MR_data |&gt; select(-file) |&gt; write_csv(\"MR_firstbanch_data.csv\")\nST_data |&gt; select(-file) |&gt; write_csv(\"ST_firstbanch_data.csv\")\nMS_data |&gt; select(-file) |&gt; write_csv(\"MS_firstbanch_data.csv\")\nNASATLX_data |&gt; select(-file) |&gt; write_csv(\"NASATLX_firstbanch_data.csv\")\nSEQUENCE_data |&gt; select(-file) |&gt; write_csv(\"SEQ_firstbanch_data.csv\")\nexptime |&gt; select(-file) |&gt; write_csv(\"EXPTIME_firstbanch_data.csv\")\nIDS |&gt; write_csv(\"IDS_firstbanch_data.csv\")"
  },
  {
    "objectID": "analysis.html",
    "href": "analysis.html",
    "title": "First banch. Analysis workflow",
    "section": "",
    "text": "knitr::opts_chunk$set(error = TRUE)\n\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\ntheme_set(theme_bw()) # set black and white theme\nlibrary(lavaan)\n\nThis is lavaan 0.6-15\nlavaan is FREE software! Please report any bugs.\n\nlibrary(tidySEM)\n\nLoading required package: OpenMx\nOpenMx may run faster if it is compiled to take advantage of multiple cores.\nRegistered S3 method overwritten by 'tidySEM':\n  method          from  \n  predict.MxModel OpenMx\n\nlibrary(semPower)\n\n\n### Welcome to semPower 2.0.1 ###\n\nSee https://github.com/moshagen/semPower for quick examples.\nSee https://moshagen.github.io/semPower/ for a detailed manual.\n\nPlease cite as:\nMoshagen, M., & Erdfelder, E. (2016). A new strategy for testing structural equation models.\nStructural Equation Modeling, 23, 54-60. doi: 10.1080/10705511.2014.950896\n\nlibrary(lme4)\n\nLoading required package: Matrix\n\nAttaching package: 'Matrix'\n\nThe following objects are masked from 'package:OpenMx':\n\n    %&%, expm\n\nThe following objects are masked from 'package:tidyr':\n\n    expand, pack, unpack\n\nlibrary(lmerTest)\n\n\nAttaching package: 'lmerTest'\n\nThe following object is masked from 'package:lme4':\n\n    lmer\n\nThe following object is masked from 'package:stats':\n\n    step\n\nlibrary(MuMIn)\nlibrary(pwr)\n\n\nrm(list = ls())\n\n\n\n\n\nMR_data &lt;- read_csv(\"MR_firstbanch_data.csv\")\n\nRows: 3744 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (7): correctAns, base_pic, rotated_pic, key, task, level, id\ndbl (3): is_correct, rt, trial\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nST_data &lt;- read_csv(\"ST_firstbanch_data.csv\")\n\nRows: 3744 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): key, task, level, id\ndbl (4): target_present, is_correct, rt, trial\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nMS_data &lt;- read_csv(\"MS_firstbanch_data.csv\")\n\nRows: 3744 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): task, level, id\ndbl (4): trials, n, rt, acc\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nNASATLX_data &lt;- read_csv(\"NASATLX_firstbanch_data.csv\")\n\nRows: 4212 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): scale, task, level, id\ndbl (1): score\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nSEQUENCE_data &lt;- read_csv(\"SEQ_firstbanch_data.csv\")\n\nRows: 702 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): level, task, id\ndbl (1): order\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nEXPTIME &lt;- read_csv(\"EXPTIME_firstbanch_data.csv\")\n\nRows: 78 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): id\ndbl  (1): dur\ndttm (2): start, end\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n\n\nEXPTIME |&gt; ggplot(aes(dur)) +\n  geom_density()\n\nWarning: Removed 1 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\n\nEXPTIME |&gt; \n  filter(dur &lt; 250) |&gt; \n  ggplot(aes(dur)) +\n  # geom_density() +\n  geom_histogram() +\n  geom_vline(xintercept = 70) +\n  geom_vline(xintercept = 75) +\n  geom_vline(xintercept = 100)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nEXPTIME |&gt; \n  filter(dur &lt; 250) |&gt; \n  ggplot(aes(dur)) +\n  geom_boxplot() \n\n\n\n  #geom_vline(xintercept = 93, linetype = \"dashed\")\n\n\nEXPTIME$dur |&gt; min(na.rm = TRUE)\n\n[1] 28.23333\n\nquantile(EXPTIME$dur[EXPTIME$dur&lt;250], .75, na.rm = TRUE) + 1.5 * IQR(EXPTIME$dur[EXPTIME$dur&lt;250], na.rm = TRUE)\n\n   75% \n82.375 \n\n\n\n\n\n\n\n\nMR_data |&gt; \n  group_by(id, level, task) |&gt; \n  summarise(rt = mean(rt),\n            acc = mean(is_correct)) -&gt; MR_data_agg\n\n`summarise()` has grouped output by 'id', 'level'. You can override using the\n`.groups` argument.\n\n\n\nMR_data_agg |&gt; write_csv(\"MR_firstbanch_data_agg.csv\")\n\n\nMR_data_agg |&gt; \n  group_by(level, task) |&gt; \n  summarise(n = unique(id) |&gt; length(),\n            mean = mean(rt),\n            sd = sd(rt),\n            min = min(rt),\n            max = max(rt),\n            CI_lower = mean - 1.96 * sd / sqrt(n),\n            CI_upper = mean + 1.96 * sd / sqrt(n))\n\n`summarise()` has grouped output by 'level'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 3 × 9\n# Groups:   level [3]\n  level  task      n  mean    sd   min   max CI_lower CI_upper\n  &lt;chr&gt;  &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 easy   MR       78  7.11  4.56  1.43  25.5     6.10     8.12\n2 hard   MR       78 12.0  10.3   1.60  69.1     9.67    14.2 \n3 medium MR       78  8.79  5.88  1.10  37.1     7.49    10.1 \n\n\n\nMR_data_agg |&gt; \n  mutate(level = factor(level, \n                        ordered = TRUE, \n                        levels = c(\"easy\", \"medium\", \"hard\"))) |&gt; \n  ggplot(aes(level, rt)) +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"MR\")\n\n\n\n\n\nMR_data_agg |&gt; \n  group_by(level, task) |&gt; \n  summarise(n = unique(id) |&gt; length(),\n            mean = mean(acc),\n            sd = sd(acc),\n            min = min(acc),\n            max = max(acc),\n            CI_lower = mean - 1.96 * sd / sqrt(n),\n            CI_upper = mean + 1.96 * sd / sqrt(n))\n\n`summarise()` has grouped output by 'level'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 3 × 9\n# Groups:   level [3]\n  level  task      n  mean    sd   min   max CI_lower CI_upper\n  &lt;chr&gt;  &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 easy   MR       78 0.850 0.174 0.312     1    0.812    0.889\n2 hard   MR       78 0.721 0.178 0.312     1    0.682    0.761\n3 medium MR       78 0.755 0.178 0.25      1    0.715    0.794\n\n\n\nMR_data_agg |&gt; \n  mutate(level = factor(level, \n                        ordered = TRUE, \n                        levels = c(\"easy\", \"medium\", \"hard\"))) |&gt; \n  ggplot(aes(level, acc)) +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"MR\")\n\n\n\n\n\n\n\n\nMS_data |&gt; \n  group_by(id, level, task) |&gt; \n  summarise(rt = mean(rt),\n            acc = mean(acc)) -&gt; MS_data_agg\n\n`summarise()` has grouped output by 'id', 'level'. You can override using the\n`.groups` argument.\n\n\n\nMS_data_agg |&gt; write_csv(\"MS_firstbanch_data_agg.csv\")\n\n\nMS_data_agg |&gt; \n  group_by(level, task) |&gt; \n  summarise(n = unique(id) |&gt; length(),\n            mean = mean(rt, na.rm = TRUE),\n            sd = sd(rt, na.rm = TRUE),\n            min = min(rt, na.rm = TRUE),\n            max = max(rt, na.rm = TRUE),\n            CI_lower = mean - 1.96 * sd / sqrt(n),\n            CI_upper = mean + 1.96 * sd / sqrt(n))\n\n`summarise()` has grouped output by 'level'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 3 × 9\n# Groups:   level [3]\n  level  task      n  mean    sd   min   max CI_lower CI_upper\n  &lt;chr&gt;  &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 easy   MS       78  11.7  5.72  5.47  46.8     10.4     13.0\n2 hard   MS       78  22.7 11.8  11.2   91.0     20.1     25.4\n3 medium MS       78  19.1  5.79 10.1   39.9     17.8     20.4\n\n\n\nMS_data_agg |&gt; \n  mutate(level = factor(level, \n                        ordered = TRUE, \n                        levels = c(\"easy\", \"medium\", \"hard\"))) |&gt; \n  ggplot(aes(level, rt)) +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"MS\")\n\nWarning: Removed 72 rows containing non-finite values (`stat_summary()`).\n\n\n\n\n\n\nMS_data_agg |&gt; \n  group_by(level, task) |&gt; \n  summarise(n = unique(id) |&gt; length(),\n            mean = mean(acc),\n            sd = sd(acc),\n            min = min(acc),\n            max = max(acc),\n            CI_lower = mean - 1.96 * sd / sqrt(n),\n            CI_upper = mean + 1.96 * sd / sqrt(n))\n\n`summarise()` has grouped output by 'level'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 3 × 9\n# Groups:   level [3]\n  level  task      n  mean    sd   min   max CI_lower CI_upper\n  &lt;chr&gt;  &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 easy   MS       78 0.949 0.165     0 1        0.913    0.986\n2 hard   MS       78 0.635 0.168     0 0.973    0.597    0.672\n3 medium MS       78 0.878 0.172     0 1        0.839    0.916\n\n\n\nMS_data_agg |&gt; \n  mutate(level = factor(level, \n                        ordered = TRUE, \n                        levels = c(\"easy\", \"medium\", \"hard\"))) |&gt; \n  ggplot(aes(level, acc)) +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"MS\")\n\n\n\n\n\n\n\n\nST_data |&gt; \n  group_by(id, level, task) |&gt; \n  summarise(rt = mean(rt),\n            acc = mean(is_correct)) -&gt; ST_data_agg\n\n`summarise()` has grouped output by 'id', 'level'. You can override using the\n`.groups` argument.\n\n\n\nST_data_agg |&gt; write_csv(\"ST_firstbanch_data_agg.csv\")\n\n\nST_data_agg |&gt; \n  group_by(level, task) |&gt; \n  summarise(n = unique(id) |&gt; length(),\n            mean = mean(rt),\n            sd = sd(rt),\n            min = min(rt),\n            max = max(rt),\n            CI_lower = mean - 1.96 * sd / sqrt(n),\n            CI_upper = mean + 1.96 * sd / sqrt(n))\n\n`summarise()` has grouped output by 'level'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 3 × 9\n# Groups:   level [3]\n  level  task      n  mean    sd   min   max CI_lower CI_upper\n  &lt;chr&gt;  &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 easy   ST       78  1.12 0.325 0.627  2.47     1.05     1.19\n2 hard   ST       78  1.44 0.441 0.737  3.52     1.34     1.54\n3 medium ST       78  1.39 0.470 0.692  3.45     1.28     1.49\n\n\n\nST_data_agg |&gt; \n  mutate(level = factor(level, \n                        ordered = TRUE, \n                        levels = c(\"easy\", \"medium\", \"hard\"))) |&gt; \n  ggplot(aes(level, rt)) +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"ST\")\n\n\n\n\n\nST_data_agg |&gt; \n  group_by(level, task) |&gt; \n  summarise(n = unique(id) |&gt; length(),\n            mean = mean(acc),\n            sd = sd(acc),\n            min = min(acc),\n            max = max(acc),\n            CI_lower = mean - 1.96 * sd / sqrt(n),\n            CI_upper = mean + 1.96 * sd / sqrt(n))\n\n`summarise()` has grouped output by 'level'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 3 × 9\n# Groups:   level [3]\n  level  task      n  mean     sd   min   max CI_lower CI_upper\n  &lt;chr&gt;  &lt;chr&gt; &lt;int&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 easy   ST       78 0.979 0.0358 0.875 1        0.971    0.987\n2 hard   ST       78 0.686 0.127  0.312 0.875    0.658    0.714\n3 medium ST       78 0.836 0.114  0.562 1        0.811    0.861\n\n\n\nST_data_agg |&gt; \n  mutate(level = factor(level, \n                        ordered = TRUE, \n                        levels = c(\"easy\", \"medium\", \"hard\"))) |&gt; \n  ggplot(aes(level, acc)) +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"ST\")\n\n\n\n\n\n\n\n\nMR_data_agg |&gt; \n  bind_rows(MS_data_agg, ST_data_agg) |&gt;\n  mutate(level = factor(level, \n                        ordered = TRUE, \n                        levels = c(\"easy\", \"medium\", \"hard\"))) |&gt; \n  ggplot(aes(level, rt)) +\n  facet_wrap(~ task, scales = \"free_y\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"Reaction Time\")\n\nWarning: Removed 72 rows containing non-finite values (`stat_summary()`).\n\n\n\n\n\n\nMR_data_agg |&gt; \n  bind_rows(MS_data_agg, ST_data_agg) |&gt;\n  mutate(level = factor(level, \n                        ordered = TRUE, \n                        levels = c(\"easy\", \"medium\", \"hard\"))) |&gt; \n  ggplot(aes(level, acc)) +\n  facet_wrap(~ task, scales = \"free_y\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"Accuracy\")\n\n\n\n\n\n\n\n\n\nNASATLX_data |&gt; \n  # fix factor\n  mutate(\n    level = factor(\n      level,\n      levels = c(\"easy\", \"medium\", \"hard\"),\n      ordered = TRUE\n    ),\n    # modify vars to match with previously created encoding\n    scl = str_to_lower(scale),\n    tsk = str_to_lower(task),\n    lvl = str_sub(level, start = 1, end = 1) |&gt; str_to_upper(),\n    score = score * 5\n  ) |&gt;\n  # create a new var for CFA\n  unite(item, scl, tsk, lvl) -&gt; NASATLX_data\n\n\nlevel_colors &lt;- c(\"#4bd752\", \"#d7984b\", \"#d7524b\")\ntask_colors &lt;- c(\"red4\", \"green4\", \"blue4\")\nback_histogram_color &lt;- \"gray60\"\n\n\nNASATLX_data |&gt;\n  ggplot(aes(scale, score, fill = level)) +\n  geom_boxplot() +\n  facet_grid(task ~ .) +\n  theme(legend.position = \"bottom\") +\n  labs(x = \"NASA-TLX Scale\",\n       y = \"NASA-TLX Score (raw)\",\n       fill = \"Difficulty Level\") +\n  scale_fill_manual(values = level_colors)\n\nWarning: Removed 17 rows containing non-finite values (`stat_boxplot()`).\n\n\n\n\n\n\npd &lt;- position_dodge(0.3)\nNASATLX_data |&gt;\n  ggplot(aes(scale, score, color = level)) +\n  stat_summary(fun.data = mean_cl_boot, geom = \"errorbar\",\n               position = pd, width = .3) +\n  stat_summary(fun = mean, geom = \"point\",\n               position = pd) +\n  facet_grid(task ~ .) +\n  theme(legend.position = \"bottom\") +\n  labs(x = \"NASA-TLX Scale\",\n       y = \"NASA-TLX Score (raw)\",\n       fill = \"Difficulty Level\") +\n  scale_color_manual(values = level_colors)\n\nWarning: Removed 17 rows containing non-finite values (`stat_summary()`).\nRemoved 17 rows containing non-finite values (`stat_summary()`).\n\n\n\n\n\n\n\n\nNASATLX_data |&gt; \n  select(-item) |&gt; \n  # mutate(row_nubmer = row_number()) |&gt; \n  pivot_wider(values_from = score, names_from = scale) -&gt; nasa_tlx_wide\n# NASA_TLX |&gt; group_by(task, level) |&gt; summarise(n=n())\n# nasa_tlx_wide |&gt; group_by(task, level) |&gt; summarise(n=n())\n\n\nr2tof2 &lt;- function(r2) r2 / (1 - r2)\n\n\n\n\nmix_ME &lt;- lmer(ME ~ task * level + (1|id), \n               nasa_tlx_wide,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_ME)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: ME ~ task * level + (1 | id)\n   Data: nasa_tlx_wide\n\nREML criterion at convergence: 6090.6\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.1846 -0.5810  0.0514  0.6403  3.1496 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept) 172.8    13.14   \n Residual             300.2    17.33   \nNumber of obs: 701, groups:  id, 78\n\nFixed effects:\n                   Estimate Std. Error      df t value Pr(&gt;|t|)    \n(Intercept)          46.445      2.463 335.008  18.861  &lt; 2e-16 ***\ntaskMS              -16.813      2.774 615.020  -6.060 2.37e-09 ***\ntaskST              -18.655      2.774 615.020  -6.724 4.05e-11 ***\nlevelmedium          10.951      2.774 615.020   3.947 8.82e-05 ***\nlevelhard            19.777      2.774 615.020   7.128 2.86e-12 ***\ntaskMS:levelmedium   20.000      3.924 615.020   5.097 4.59e-07 ***\ntaskST:levelmedium   14.677      3.924 615.020   3.741 0.000201 ***\ntaskMS:levelhard     27.488      3.924 615.020   7.006 6.47e-12 ***\ntaskST:levelhard     20.282      3.931 615.107   5.160 3.34e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) taskMS taskST lvlmdm lvlhrd tskMS:lvlm tskST:lvlm tskMS:lvlh\ntaskMS      -0.563                                                             \ntaskST      -0.563  0.500                                                      \nlevelmedium -0.563  0.500  0.500                                               \nlevelhard   -0.563  0.500  0.500  0.500                                        \ntskMS:lvlmd  0.398 -0.707 -0.354 -0.707 -0.354                                 \ntskST:lvlmd  0.398 -0.354 -0.707 -0.707 -0.354  0.500                          \ntskMS:lvlhr  0.398 -0.707 -0.354 -0.354 -0.707  0.500      0.250               \ntskST:lvlhr  0.398 -0.353 -0.706 -0.353 -0.706  0.250      0.499      0.499    \n\nanova(mix_ME)\n\nType III Analysis of Variance Table with Satterthwaite's method\n           Sum Sq Mean Sq NumDF  DenDF F value    Pr(&gt;F)    \ntask         6703    3352     2 615.06  11.165 1.727e-05 ***\nlevel      152214   76107     2 615.06 253.516 &lt; 2.2e-16 ***\ntask:level  16928    4232     4 615.06  14.097 5.168e-11 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_ME)[1]\n\nWarning: 'r.squaredGLMM' now calculates a revised statistic. See the help page.\n\n\n[1] 0.3470414\n\nr2tof2(r.squaredGLMM(mix_ME)[1])\n\n[1] 0.5314908\n\npwr.f2.test(f2 = r2tof2(r.squaredGLMM(mix_ME)[1]),\n            u = 7,\n            sig.level = .05,\n            power = .8)\n\n\n     Multiple regression power calculation \n\n              u = 7\n              v = 26.69644\n             f2 = 0.5314908\n      sig.level = 0.05\n          power = 0.8\n\n\n\n\n\n\nmix_PH &lt;- lmer(PH ~ task * level + (1|id), \n               nasa_tlx_wide,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_PH)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: PH ~ task * level + (1 | id)\n   Data: nasa_tlx_wide\n\nREML criterion at convergence: 5661\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.5884 -0.5011 -0.0854  0.4111  5.0325 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept) 434.9    20.85   \n Residual             148.2    12.17   \nNumber of obs: 694, groups:  id, 78\n\nFixed effects:\n                   Estimate Std. Error       df t value Pr(&gt;|t|)    \n(Intercept)         17.0474     2.7392 127.9525   6.224 6.41e-09 ***\ntaskMS              -3.0090     1.9782 608.2281  -1.521  0.12875    \ntaskST              -5.6698     1.9562 608.0818  -2.898  0.00389 ** \nlevelmedium          0.8142     1.9562 608.0818   0.416  0.67740    \nlevelhard            5.5848     1.9562 608.0818   2.855  0.00445 ** \ntaskMS:levelmedium   8.9361     2.7821 608.1575   3.212  0.00139 ** \ntaskST:levelmedium   8.8358     2.7666 608.0868   3.194  0.00148 ** \ntaskMS:levelhard     7.8940     2.7860 608.1309   2.833  0.00476 ** \ntaskST:levelhard     7.7832     2.7615 608.0620   2.818  0.00498 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) taskMS taskST lvlmdm lvlhrd tskMS:lvlm tskST:lvlm tskMS:lvlh\ntaskMS      -0.356                                                             \ntaskST      -0.360  0.498                                                      \nlevelmedium -0.360  0.498  0.504                                               \nlevelhard   -0.360  0.498  0.504  0.504                                        \ntskMS:lvlmd  0.253 -0.711 -0.354 -0.703 -0.354                                 \ntskST:lvlmd  0.254 -0.352 -0.707 -0.707 -0.356  0.497                          \ntskMS:lvlhr  0.253 -0.709 -0.354 -0.354 -0.702  0.504      0.250               \ntskST:lvlhr  0.255 -0.353 -0.708 -0.357 -0.708  0.251      0.501      0.497    \n\nanova(mix_PH)\n\nType III Analysis of Variance Table with Satterthwaite's method\n            Sum Sq Mean Sq NumDF  DenDF F value    Pr(&gt;F)    \ntask        1087.1   543.6     2 608.13  3.6685  0.026080 *  \nlevel      13744.9  6872.5     2 608.10 46.3819 &lt; 2.2e-16 ***\ntask:level  2422.0   605.5     4 608.12  4.0865  0.002816 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_PH)[1]\n\n[1] 0.04098889\n\nr2tof2(r.squaredGLMM(mix_PH)[1])\n\n[1] 0.04274079\n\npwr.f2.test(f2 = r2tof2(r.squaredGLMM(mix_PH)[1]),\n            u = 7,\n            sig.level = .05,\n            power = .8)\n\n\n     Multiple regression power calculation \n\n              u = 7\n              v = 334.8529\n             f2 = 0.04274079\n      sig.level = 0.05\n          power = 0.8\n\n\n\n\n\n\nmix_TI &lt;- lmer(TI ~ task * level + (1|id), \n               nasa_tlx_wide,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_TI)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: TI ~ task * level + (1 | id)\n   Data: nasa_tlx_wide\n\nREML criterion at convergence: 6223.8\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.0957 -0.5892 -0.0314  0.6288  2.8906 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept) 160.6    12.67   \n Residual             373.7    19.33   \nNumber of obs: 701, groups:  id, 78\n\nFixed effects:\n                   Estimate Std. Error       df t value Pr(&gt;|t|)    \n(Intercept)         15.5984     2.6173 401.8373   5.960 5.53e-09 ***\ntaskMS               3.5592     3.0955 614.9845   1.150 0.250661    \ntaskST              11.3673     3.0955 614.9845   3.672 0.000261 ***\nlevelmedium          0.7836     3.0955 614.9845   0.253 0.800248    \nlevelhard            4.1863     3.0955 614.9845   1.352 0.176739    \ntaskMS:levelmedium  32.1104     4.3776 614.9845   7.335 7.02e-13 ***\ntaskST:levelmedium  33.6197     4.3854 615.0938   7.666 6.94e-14 ***\ntaskMS:levelhard    51.4924     4.3776 614.9845  11.763  &lt; 2e-16 ***\ntaskST:levelhard    50.8953     4.3776 614.9845  11.626  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) taskMS taskST lvlmdm lvlhrd tskMS:lvlm tskST:lvlm tskMS:lvlh\ntaskMS      -0.591                                                             \ntaskST      -0.591  0.500                                                      \nlevelmedium -0.591  0.500  0.500                                               \nlevelhard   -0.591  0.500  0.500  0.500                                        \ntskMS:lvlmd  0.418 -0.707 -0.354 -0.707 -0.354                                 \ntskST:lvlmd  0.417 -0.353 -0.706 -0.706 -0.353  0.499                          \ntskMS:lvlhr  0.418 -0.707 -0.354 -0.354 -0.707  0.500      0.250               \ntskST:lvlhr  0.418 -0.354 -0.707 -0.354 -0.707  0.250      0.499      0.500    \n\nanova(mix_TI)\n\nType III Analysis of Variance Table with Satterthwaite's method\n           Sum Sq Mean Sq NumDF  DenDF F value    Pr(&gt;F)    \ntask       203830  101915     2 615.03 272.724 &lt; 2.2e-16 ***\nlevel      173710   86855     2 615.03 232.424 &lt; 2.2e-16 ***\ntask:level  70059   17515     4 615.03  46.869 &lt; 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_TI)[1]\n\n[1] 0.5446988\n\nr2tof2(r.squaredGLMM(mix_TI)[1])\n\n[1] 1.196348\n\npwr.f2.test(f2 = r2tof2(r.squaredGLMM(mix_TI)[1]),\n            u = 7,\n            sig.level = .05,\n            power = .8)\n\n\n     Multiple regression power calculation \n\n              u = 7\n              v = 12.23247\n             f2 = 1.196348\n      sig.level = 0.05\n          power = 0.8\n\n\n\n\n\n\nmix_PE &lt;- lmer(PE ~ task * level + (1|id), \n               nasa_tlx_wide,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_PE)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: PE ~ task * level + (1 | id)\n   Data: nasa_tlx_wide\n\nREML criterion at convergence: 6076.8\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.3961 -0.6412  0.0325  0.6477  2.5583 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept) 113.9    10.67   \n Residual             306.0    17.49   \nNumber of obs: 701, groups:  id, 78\n\nFixed effects:\n                   Estimate Std. Error      df t value Pr(&gt;|t|)    \n(Intercept)          66.615      2.320 435.796  28.711  &lt; 2e-16 ***\ntaskMS               25.479      2.801 615.017   9.096  &lt; 2e-16 ***\ntaskST               23.503      2.801 615.017   8.391 3.31e-16 ***\nlevelmedium          -8.781      2.801 615.017  -3.135   0.0018 ** \nlevelhard           -16.480      2.801 615.017  -5.884 6.60e-09 ***\ntaskMS:levelmedium  -17.419      3.961 615.017  -4.397 1.29e-05 ***\ntaskST:levelmedium  -28.291      3.961 615.017  -7.142 2.61e-12 ***\ntaskMS:levelhard    -39.938      3.961 615.017 -10.082  &lt; 2e-16 ***\ntaskST:levelhard    -44.857      3.968 615.138 -11.304  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) taskMS taskST lvlmdm lvlhrd tskMS:lvlm tskST:lvlm tskMS:lvlh\ntaskMS      -0.604                                                             \ntaskST      -0.604  0.500                                                      \nlevelmedium -0.604  0.500  0.500                                               \nlevelhard   -0.604  0.500  0.500  0.500                                        \ntskMS:lvlmd  0.427 -0.707 -0.354 -0.707 -0.354                                 \ntskST:lvlmd  0.427 -0.354 -0.707 -0.707 -0.354  0.500                          \ntskMS:lvlhr  0.427 -0.707 -0.354 -0.354 -0.707  0.500      0.250               \ntskST:lvlhr  0.426 -0.353 -0.706 -0.353 -0.706  0.250      0.499      0.499    \n\nanova(mix_PE)\n\nType III Analysis of Variance Table with Satterthwaite's method\n           Sum Sq Mean Sq NumDF  DenDF F value    Pr(&gt;F)    \ntask         7295    3647     2 615.07  11.921  8.33e-06 ***\nlevel      234141  117070     2 615.07 382.616 &lt; 2.2e-16 ***\ntask:level  49094   12273     4 615.07  40.113 &lt; 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_PE)[1]\n\n[1] 0.4967487\n\nr2tof2(r.squaredGLMM(mix_PE)[1])\n\n[1] 0.9870788\n\npwr.f2.test(f2 = r2tof2(r.squaredGLMM(mix_PE)[1]),\n            u = 7,\n            sig.level = .05,\n            power = .8)\n\n\n     Multiple regression power calculation \n\n              u = 7\n              v = 14.63282\n             f2 = 0.9870788\n      sig.level = 0.05\n          power = 0.8\n\n\n\n\n\n\nmix_EF &lt;- lmer(EF ~ task * level + (1|id), \n               nasa_tlx_wide,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_EF)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: EF ~ task * level + (1 | id)\n   Data: nasa_tlx_wide\n\nREML criterion at convergence: 6055.8\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.1279 -0.6094  0.0357  0.6249  3.5591 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept) 249.8    15.81   \n Residual             276.8    16.64   \nNumber of obs: 700, groups:  id, 78\n\nFixed effects:\n                   Estimate Std. Error      df t value Pr(&gt;|t|)    \n(Intercept)          44.381      2.598 247.283  17.080  &lt; 2e-16 ***\ntaskMS              -12.862      2.664 614.020  -4.828 1.74e-06 ***\ntaskST              -11.609      2.664 614.020  -4.358 1.54e-05 ***\nlevelmedium           9.006      2.664 614.020   3.381 0.000769 ***\nlevelhard            17.584      2.664 614.020   6.601 8.86e-11 ***\ntaskMS:levelmedium   17.979      3.774 614.080   4.764 2.38e-06 ***\ntaskST:levelmedium   13.621      3.774 614.080   3.609 0.000333 ***\ntaskMS:levelhard     25.250      3.767 614.020   6.702 4.65e-11 ***\ntaskST:levelhard     14.255      3.767 614.020   3.784 0.000170 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) taskMS taskST lvlmdm lvlhrd tskMS:lvlm tskST:lvlm tskMS:lvlh\ntaskMS      -0.513                                                             \ntaskST      -0.513  0.500                                                      \nlevelmedium -0.513  0.500  0.500                                               \nlevelhard   -0.513  0.500  0.500  0.500                                        \ntskMS:lvlmd  0.362 -0.706 -0.353 -0.706 -0.353                                 \ntskST:lvlmd  0.362 -0.353 -0.706 -0.706 -0.353  0.498                          \ntskMS:lvlhr  0.362 -0.707 -0.354 -0.354 -0.707  0.499      0.250               \ntskST:lvlhr  0.362 -0.354 -0.707 -0.354 -0.707  0.250      0.499      0.500    \n\nanova(mix_EF)\n\nType III Analysis of Variance Table with Satterthwaite's method\n           Sum Sq Mean Sq NumDF  DenDF  F value    Pr(&gt;F)    \ntask         1763     881     2 614.07   3.1842    0.0421 *  \nlevel      113335   56667     2 614.07 204.7413 &lt; 2.2e-16 ***\ntask:level  13748    3437     4 614.07  12.4179 1.018e-09 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_EF)[1]\n\n[1] 0.2592648\n\nr2tof2(r.squaredGLMM(mix_EF)[1])\n\n[1] 0.3500102\n\npwr.f2.test(f2 = r2tof2(r.squaredGLMM(mix_EF)[1]),\n            u = 7,\n            sig.level = .05,\n            power = .8)\n\n\n     Multiple regression power calculation \n\n              u = 7\n              v = 40.49648\n             f2 = 0.3500102\n      sig.level = 0.05\n          power = 0.8\n\n\n\n\n\n\nmix_FR &lt;- lmer(FR ~ task * level + (1|id), \n               nasa_tlx_wide,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_FR)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: FR ~ task * level + (1 | id)\n   Data: nasa_tlx_wide\n\nREML criterion at convergence: 6292.3\n\nScaled residuals: \n     Min       1Q   Median       3Q      Max \n-2.92494 -0.67440 -0.04275  0.63993  2.97611 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept) 343.0    18.52   \n Residual             402.2    20.05   \nNumber of obs: 698, groups:  id, 78\n\nFixed effects:\n                   Estimate Std. Error      df t value Pr(&gt;|t|)    \n(Intercept)          35.058      3.091 256.301  11.342  &lt; 2e-16 ***\ntaskMS              -11.619      3.235 612.136  -3.592 0.000355 ***\ntaskST              -13.828      3.211 611.853  -4.306 1.94e-05 ***\nlevelmedium           6.322      3.211 611.853   1.969 0.049432 *  \nlevelhard            12.950      3.223 611.978   4.018 6.59e-05 ***\ntaskMS:levelmedium   13.354      4.558 611.995   2.930 0.003518 ** \ntaskST:levelmedium   20.118      4.541 611.853   4.430 1.12e-05 ***\ntaskMS:levelhard     23.420      4.566 612.053   5.129 3.92e-07 ***\ntaskST:levelhard     30.659      4.558 611.996   6.727 4.00e-11 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) taskMS taskST lvlmdm lvlhrd tskMS:lvlm tskST:lvlm tskMS:lvlh\ntaskMS      -0.516                                                             \ntaskST      -0.519  0.496                                                      \nlevelmedium -0.519  0.496  0.500                                               \nlevelhard   -0.518  0.495  0.498  0.498                                        \ntskMS:lvlmd  0.366 -0.710 -0.352 -0.705 -0.351                                 \ntskST:lvlmd  0.367 -0.351 -0.707 -0.707 -0.352  0.498                          \ntskMS:lvlhr  0.365 -0.708 -0.352 -0.352 -0.706  0.503      0.249               \ntskST:lvlhr  0.366 -0.349 -0.705 -0.352 -0.707  0.248      0.498      0.499    \n\nanova(mix_FR)\n\nType III Analysis of Variance Table with Satterthwaite's method\n           Sum Sq Mean Sq NumDF  DenDF  F value    Pr(&gt;F)    \ntask         1246     623     2 611.95   1.5486    0.2134    \nlevel      111859   55929     2 611.94 139.0640 &lt; 2.2e-16 ***\ntask:level  20526    5131     4 612.00  12.7589 5.569e-10 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_FR)[1]\n\n[1] 0.204493\n\nr2tof2(r.squaredGLMM(mix_FR)[1])\n\n[1] 0.2570599\n\npwr.f2.test(f2 = r2tof2(r.squaredGLMM(mix_FR)[1]),\n            u = 7,\n            sig.level = .05,\n            power = .8)\n\n\n     Multiple regression power calculation \n\n              u = 7\n              v = 55.20916\n             f2 = 0.2570599\n      sig.level = 0.05\n          power = 0.8\n\n\n\n\n\n\n\nlavmodel &lt;- \"\nPE =~ PE_mr + PE_ms + PE_st\nME =~ ME_mr + ME_ms + ME_st\nPH =~ PH_mr + PH_ms + PH_st\nEF =~ EF_mr + EF_ms + EF_st\nTI =~ TI_mr + TI_ms + TI_st\nFR =~ FR_mr + FR_ms + FR_st\nOW =~ PE + ME + PH + EF + TI + FR\"\n\n\nsemPower.getDf(lavmodel)\n\n[1] 129\n\n\n\nap &lt;- semPower.aPriori(effect = .05, effect.measure = 'RMSEA',\n                       alpha = .05, power = .80, df = semPower.getDf(lavmodel))\nsummary(ap)\n\n\n semPower: A priori power analysis\n                                   \n F0                        0.322500\n RMSEA                     0.050000\n Mc                        0.851079\n                                   \n df                        129     \n Required Num Observations 142     \n                                   \n Critical Chi-Square       156.5075\n NCP                       45.47250\n Alpha                     0.050000\n Beta                      0.198348\n Power (1 - Beta)          0.801652\n Implied Alpha/Beta Ratio  0.252082\n\n\n\n\n\n\n\n\n\nNASATLX_data |&gt; \n  pivot_wider(id_cols = id, \n              names_from = item, \n              values_from = score,\n              values_fn = unlist) -&gt; NASATLX_cfa\n\n\nmodel_easy &lt;- \"PE =~ pe_mr_E + pe_ms_E + pe_st_E\nPH =~ ph_mr_E + ph_ms_E + ph_st_E\nME =~ me_mr_E + me_ms_E + me_st_E\nEF =~ ef_mr_E + ef_ms_E + ef_st_E\nTI =~ ti_mr_E + ti_ms_E + ti_st_E\nFR =~ fr_mr_E + fr_ms_E + fr_st_E\nOW =~ PE + ME + PH + EF + TI + FR\"\n\ncfa_easy &lt;- cfa(model_easy, NASATLX_cfa,)\n\nWarning in lavaan::lavaan(model = model_easy, data = NASATLX_cfa, model.type = \"cfa\", : lavaan WARNING:\n    the optimizer (NLMINB) claimed the model converged, but not all\n    elements of the gradient are (near) zero; the optimizer may not\n    have found a local solution use check.gradient = FALSE to skip\n    this check.\n\nsummary(cfa_easy, fit.measures = TRUE)\n\nWarning in lav_object_summary(object = object, header = header, fit.measures = fit.measures, : lavaan WARNING: fit measures not available if model did not converge\n\n\nlavaan 0.6.15 did NOT end normally after 2116 iterations\n** WARNING ** Estimates below are most likely unreliable\n\n  Estimator                                         ML\n  Optimization method                           NLMINB\n  Number of model parameters                        42\n\n                                                  Used       Total\n  Number of observations                            73          78\n\n\nParameter Estimates:\n\n  Standard errors                             Standard\n  Information                                 Expected\n  Information saturated (h1) model          Structured\n\nLatent Variables:\n                   Estimate  Std.Err  z-value  P(&gt;|z|)\n  PE =~                                               \n    pe_mr_E           1.000                           \n    pe_ms_E           1.419       NA                  \n    pe_st_E           1.209       NA                  \n  PH =~                                               \n    ph_mr_E           1.000                           \n    ph_ms_E           0.771       NA                  \n    ph_st_E           0.553       NA                  \n  ME =~                                               \n    me_mr_E           1.000                           \n    me_ms_E           1.332       NA                  \n    me_st_E           0.970       NA                  \n  EF =~                                               \n    ef_mr_E           1.000                           \n    ef_ms_E         615.563       NA                  \n    ef_st_E         450.263       NA                  \n  TI =~                                               \n    ti_mr_E           1.000                           \n    ti_ms_E           0.897       NA                  \n    ti_st_E           0.658       NA                  \n  FR =~                                               \n    fr_mr_E           1.000                           \n    fr_ms_E           1.621       NA                  \n    fr_st_E           0.981       NA                  \n  OW =~                                               \n    PE                1.000                           \n    ME               77.820       NA                  \n    PH               35.580       NA                  \n    EF              -27.319       NA                  \n    TI              -16.505       NA                  \n    FR               32.616       NA                  \n\nVariances:\n                   Estimate  Std.Err  z-value  P(&gt;|z|)\n   .pe_mr_E         467.637       NA                  \n   .pe_ms_E          78.043       NA                  \n   .pe_st_E          69.064       NA                  \n   .ph_mr_E          81.950       NA                  \n   .ph_ms_E          90.557       NA                  \n   .ph_st_E          55.096       NA                  \n   .me_mr_E         501.362       NA                  \n   .me_ms_E         112.752       NA                  \n   .me_st_E         226.683       NA                  \n   .ef_mr_E         653.026       NA                  \n   .ef_ms_E          52.514       NA                  \n   .ef_st_E         212.342       NA                  \n   .ti_mr_E         127.553       NA                  \n   .ti_ms_E         233.108       NA                  \n   .ti_st_E         329.558       NA                  \n   .fr_mr_E         607.300       NA                  \n   .fr_ms_E         245.992       NA                  \n   .fr_st_E         229.707       NA                  \n   .PE               47.895       NA                  \n   .PH              405.813       NA                  \n   .ME              162.755       NA                  \n   .EF                0.119       NA                  \n   .TI              223.000       NA                  \n   .FR              142.155       NA                  \n    OW               -0.000       NA                  \n\nfitmeasures(cfa_easy, fit.measures = c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"tli\", \"rmsea\", \"srmr\"))\n\nError in lav_fit_measures(object = object, fit.measures = fit.measures, : lavaan ERROR: fit measures not available if model did not converge\n\n\n\nmodel_medium &lt;- \"PE =~ pe_mr_M + pe_ms_M + pe_st_M\nPH =~ ph_mr_M + ph_ms_M + ph_st_M\nME =~ me_mr_M + me_ms_M + me_st_M\nEF =~ ef_mr_M + ef_ms_M + ef_st_M\nTI =~ ti_mr_M + ti_ms_M + ti_st_M\nFR =~ fr_mr_M + fr_ms_M + fr_st_M\nOW =~ PE + ME + PH + EF + TI + FR\"\n\ncfa_medium &lt;- cfa(model_medium, NASATLX_cfa,)\n\nWarning in lav_object_post_check(object): lavaan WARNING: some estimated lv\nvariances are negative\n\nsummary(cfa_medium, fit.measures = TRUE)\n\nlavaan 0.6.15 ended normally after 595 iterations\n\n  Estimator                                         ML\n  Optimization method                           NLMINB\n  Number of model parameters                        42\n\n                                                  Used       Total\n  Number of observations                            74          78\n\nModel Test User Model:\n                                                      \n  Test statistic                               414.006\n  Degrees of freedom                               129\n  P-value (Chi-square)                           0.000\n\nModel Test Baseline Model:\n\n  Test statistic                               937.686\n  Degrees of freedom                               153\n  P-value                                        0.000\n\nUser Model versus Baseline Model:\n\n  Comparative Fit Index (CFI)                    0.637\n  Tucker-Lewis Index (TLI)                       0.569\n\nLoglikelihood and Information Criteria:\n\n  Loglikelihood user model (H0)              -5875.695\n  Loglikelihood unrestricted model (H1)      -5668.692\n                                                      \n  Akaike (AIC)                               11835.391\n  Bayesian (BIC)                             11932.162\n  Sample-size adjusted Bayesian (SABIC)      11799.804\n\nRoot Mean Square Error of Approximation:\n\n  RMSEA                                          0.173\n  90 Percent confidence interval - lower         0.154\n  90 Percent confidence interval - upper         0.192\n  P-value H_0: RMSEA &lt;= 0.050                    0.000\n  P-value H_0: RMSEA &gt;= 0.080                    1.000\n\nStandardized Root Mean Square Residual:\n\n  SRMR                                           0.141\n\nParameter Estimates:\n\n  Standard errors                             Standard\n  Information                                 Expected\n  Information saturated (h1) model          Structured\n\nLatent Variables:\n                   Estimate  Std.Err  z-value  P(&gt;|z|)\n  PE =~                                               \n    pe_mr_M           1.000                           \n    pe_ms_M           0.692    0.404    1.713    0.087\n    pe_st_M           1.111    0.795    1.398    0.162\n  PH =~                                               \n    ph_mr_M           1.000                           \n    ph_ms_M           1.175    0.114   10.302    0.000\n    ph_st_M           1.136    0.115    9.853    0.000\n  ME =~                                               \n    me_mr_M           1.000                           \n    me_ms_M           1.700    0.462    3.682    0.000\n    me_st_M           1.056    0.344    3.070    0.002\n  EF =~                                               \n    ef_mr_M           1.000                           \n    ef_ms_M           1.507    0.289    5.217    0.000\n    ef_st_M           1.087    0.248    4.376    0.000\n  TI =~                                               \n    ti_mr_M           1.000                           \n    ti_ms_M           5.636    2.758    2.044    0.041\n    ti_st_M           3.908    2.030    1.925    0.054\n  FR =~                                               \n    fr_mr_M           1.000                           \n    fr_ms_M           1.321    0.267    4.951    0.000\n    fr_st_M           1.088    0.242    4.498    0.000\n  OW =~                                               \n    PE                1.000                           \n    ME               77.337 1225.523    0.063    0.950\n    PH               88.722 1405.879    0.063    0.950\n    EF              114.555 1815.199    0.063    0.950\n    TI               31.359  497.099    0.063    0.950\n    FR              119.009 1885.795    0.063    0.950\n\nVariances:\n                   Estimate  Std.Err  z-value  P(&gt;|z|)\n   .pe_mr_M         459.659  129.163    3.559    0.000\n   .pe_ms_M         515.945   98.551    5.235    0.000\n   .pe_st_M         254.842  135.912    1.875    0.061\n   .ph_mr_M         140.360   31.040    4.522    0.000\n   .ph_ms_M         105.049   32.821    3.201    0.001\n   .ph_st_M         142.392   35.293    4.035    0.000\n   .me_mr_M         400.687   68.640    5.837    0.000\n   .me_ms_M         235.436   58.752    4.007    0.000\n   .me_st_M         333.738   58.257    5.729    0.000\n   .ef_mr_M         437.248   74.274    5.887    0.000\n   .ef_ms_M         105.610   33.510    3.152    0.002\n   .ef_st_M         304.507   53.091    5.736    0.000\n   .ti_mr_M         242.729   39.965    6.073    0.000\n   .ti_ms_M         310.719   84.981    3.656    0.000\n   .ti_st_M         637.750  109.822    5.807    0.000\n   .fr_mr_M         631.586  114.143    5.533    0.000\n   .fr_ms_M         210.454   68.924    3.053    0.002\n   .fr_st_M         405.789   80.574    5.036    0.000\n   .PE              146.638  123.264    1.190    0.234\n   .PH              264.745   61.527    4.303    0.000\n   .ME                7.078   15.473    0.457    0.647\n   .EF              -12.849   15.063   -0.853    0.394\n   .TI               -1.161    2.451   -0.474    0.636\n   .FR              102.947   48.504    2.122    0.034\n    OW                0.016    0.498    0.032    0.975\n\nfitmeasures(cfa_medium, fit.measures = c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"tli\", \"rmsea\", \"srmr\"))\n\n  chisq      df  pvalue     cfi     tli   rmsea    srmr \n414.006 129.000   0.000   0.637   0.569   0.173   0.141 \n\n\n\nmodel_hard &lt;- \"PE =~ pe_mr_H + pe_ms_H + pe_st_H\nPH =~ ph_mr_H + ph_ms_H + ph_st_H\nME =~ me_mr_H + me_ms_H + me_st_H\nEF =~ ef_mr_H + ef_ms_H + ef_st_H\nTI =~ ti_mr_H + ti_ms_H + ti_st_H\nFR =~ fr_mr_H + fr_ms_H + fr_st_H\nOW =~ PE + ME + PH + EF + TI + FR\"\n\ncfa_hard &lt;- cfa(model_hard, NASATLX_cfa,)\n\nWarning in lav_object_post_check(object): lavaan WARNING: some estimated lv\nvariances are negative\n\nsummary(cfa_medium, fit.measures = TRUE)\n\nlavaan 0.6.15 ended normally after 595 iterations\n\n  Estimator                                         ML\n  Optimization method                           NLMINB\n  Number of model parameters                        42\n\n                                                  Used       Total\n  Number of observations                            74          78\n\nModel Test User Model:\n                                                      \n  Test statistic                               414.006\n  Degrees of freedom                               129\n  P-value (Chi-square)                           0.000\n\nModel Test Baseline Model:\n\n  Test statistic                               937.686\n  Degrees of freedom                               153\n  P-value                                        0.000\n\nUser Model versus Baseline Model:\n\n  Comparative Fit Index (CFI)                    0.637\n  Tucker-Lewis Index (TLI)                       0.569\n\nLoglikelihood and Information Criteria:\n\n  Loglikelihood user model (H0)              -5875.695\n  Loglikelihood unrestricted model (H1)      -5668.692\n                                                      \n  Akaike (AIC)                               11835.391\n  Bayesian (BIC)                             11932.162\n  Sample-size adjusted Bayesian (SABIC)      11799.804\n\nRoot Mean Square Error of Approximation:\n\n  RMSEA                                          0.173\n  90 Percent confidence interval - lower         0.154\n  90 Percent confidence interval - upper         0.192\n  P-value H_0: RMSEA &lt;= 0.050                    0.000\n  P-value H_0: RMSEA &gt;= 0.080                    1.000\n\nStandardized Root Mean Square Residual:\n\n  SRMR                                           0.141\n\nParameter Estimates:\n\n  Standard errors                             Standard\n  Information                                 Expected\n  Information saturated (h1) model          Structured\n\nLatent Variables:\n                   Estimate  Std.Err  z-value  P(&gt;|z|)\n  PE =~                                               \n    pe_mr_M           1.000                           \n    pe_ms_M           0.692    0.404    1.713    0.087\n    pe_st_M           1.111    0.795    1.398    0.162\n  PH =~                                               \n    ph_mr_M           1.000                           \n    ph_ms_M           1.175    0.114   10.302    0.000\n    ph_st_M           1.136    0.115    9.853    0.000\n  ME =~                                               \n    me_mr_M           1.000                           \n    me_ms_M           1.700    0.462    3.682    0.000\n    me_st_M           1.056    0.344    3.070    0.002\n  EF =~                                               \n    ef_mr_M           1.000                           \n    ef_ms_M           1.507    0.289    5.217    0.000\n    ef_st_M           1.087    0.248    4.376    0.000\n  TI =~                                               \n    ti_mr_M           1.000                           \n    ti_ms_M           5.636    2.758    2.044    0.041\n    ti_st_M           3.908    2.030    1.925    0.054\n  FR =~                                               \n    fr_mr_M           1.000                           \n    fr_ms_M           1.321    0.267    4.951    0.000\n    fr_st_M           1.088    0.242    4.498    0.000\n  OW =~                                               \n    PE                1.000                           \n    ME               77.337 1225.523    0.063    0.950\n    PH               88.722 1405.879    0.063    0.950\n    EF              114.555 1815.199    0.063    0.950\n    TI               31.359  497.099    0.063    0.950\n    FR              119.009 1885.795    0.063    0.950\n\nVariances:\n                   Estimate  Std.Err  z-value  P(&gt;|z|)\n   .pe_mr_M         459.659  129.163    3.559    0.000\n   .pe_ms_M         515.945   98.551    5.235    0.000\n   .pe_st_M         254.842  135.912    1.875    0.061\n   .ph_mr_M         140.360   31.040    4.522    0.000\n   .ph_ms_M         105.049   32.821    3.201    0.001\n   .ph_st_M         142.392   35.293    4.035    0.000\n   .me_mr_M         400.687   68.640    5.837    0.000\n   .me_ms_M         235.436   58.752    4.007    0.000\n   .me_st_M         333.738   58.257    5.729    0.000\n   .ef_mr_M         437.248   74.274    5.887    0.000\n   .ef_ms_M         105.610   33.510    3.152    0.002\n   .ef_st_M         304.507   53.091    5.736    0.000\n   .ti_mr_M         242.729   39.965    6.073    0.000\n   .ti_ms_M         310.719   84.981    3.656    0.000\n   .ti_st_M         637.750  109.822    5.807    0.000\n   .fr_mr_M         631.586  114.143    5.533    0.000\n   .fr_ms_M         210.454   68.924    3.053    0.002\n   .fr_st_M         405.789   80.574    5.036    0.000\n   .PE              146.638  123.264    1.190    0.234\n   .PH              264.745   61.527    4.303    0.000\n   .ME                7.078   15.473    0.457    0.647\n   .EF              -12.849   15.063   -0.853    0.394\n   .TI               -1.161    2.451   -0.474    0.636\n   .FR              102.947   48.504    2.122    0.034\n    OW                0.016    0.498    0.032    0.975\n\nfitmeasures(cfa_hard, fit.measures = c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"tli\", \"rmsea\", \"srmr\"))\n\n  chisq      df  pvalue     cfi     tli   rmsea    srmr \n366.213 129.000   0.000   0.664   0.601   0.159   0.115"
  },
  {
    "objectID": "analysis.html#packages",
    "href": "analysis.html#packages",
    "title": "First banch. Analysis workflow",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\ntheme_set(theme_bw()) # set black and white theme\nlibrary(lavaan)\n\nThis is lavaan 0.6-15\nlavaan is FREE software! Please report any bugs.\n\nlibrary(tidySEM)\n\nLoading required package: OpenMx\nOpenMx may run faster if it is compiled to take advantage of multiple cores.\nRegistered S3 method overwritten by 'tidySEM':\n  method          from  \n  predict.MxModel OpenMx\n\nlibrary(semPower)\n\n\n### Welcome to semPower 2.0.1 ###\n\nSee https://github.com/moshagen/semPower for quick examples.\nSee https://moshagen.github.io/semPower/ for a detailed manual.\n\nPlease cite as:\nMoshagen, M., & Erdfelder, E. (2016). A new strategy for testing structural equation models.\nStructural Equation Modeling, 23, 54-60. doi: 10.1080/10705511.2014.950896\n\nlibrary(lme4)\n\nLoading required package: Matrix\n\nAttaching package: 'Matrix'\n\nThe following objects are masked from 'package:OpenMx':\n\n    %&%, expm\n\nThe following objects are masked from 'package:tidyr':\n\n    expand, pack, unpack\n\nlibrary(lmerTest)\n\n\nAttaching package: 'lmerTest'\n\nThe following object is masked from 'package:lme4':\n\n    lmer\n\nThe following object is masked from 'package:stats':\n\n    step\n\nlibrary(MuMIn)\nlibrary(pwr)\n\n\nrm(list = ls())"
  },
  {
    "objectID": "analysis.html#reading-data",
    "href": "analysis.html#reading-data",
    "title": "First banch. Analysis workflow",
    "section": "",
    "text": "MR_data &lt;- read_csv(\"MR_firstbanch_data.csv\")\n\nRows: 3744 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (7): correctAns, base_pic, rotated_pic, key, task, level, id\ndbl (3): is_correct, rt, trial\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nST_data &lt;- read_csv(\"ST_firstbanch_data.csv\")\n\nRows: 3744 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): key, task, level, id\ndbl (4): target_present, is_correct, rt, trial\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nMS_data &lt;- read_csv(\"MS_firstbanch_data.csv\")\n\nRows: 3744 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): task, level, id\ndbl (4): trials, n, rt, acc\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nNASATLX_data &lt;- read_csv(\"NASATLX_firstbanch_data.csv\")\n\nRows: 4212 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): scale, task, level, id\ndbl (1): score\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nSEQUENCE_data &lt;- read_csv(\"SEQ_firstbanch_data.csv\")\n\nRows: 702 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): level, task, id\ndbl (1): order\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nEXPTIME &lt;- read_csv(\"EXPTIME_firstbanch_data.csv\")\n\nRows: 78 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): id\ndbl  (1): dur\ndttm (2): start, end\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "analysis.html#behavioral-data",
    "href": "analysis.html#behavioral-data",
    "title": "First banch. Analysis workflow",
    "section": "",
    "text": "MR_data |&gt; \n  group_by(id, level, task) |&gt; \n  summarise(rt = mean(rt),\n            acc = mean(is_correct)) -&gt; MR_data_agg\n\n`summarise()` has grouped output by 'id', 'level'. You can override using the\n`.groups` argument.\n\n\n\nMR_data_agg |&gt; write_csv(\"MR_firstbanch_data_agg.csv\")\n\n\nMR_data_agg |&gt; \n  group_by(level, task) |&gt; \n  summarise(n = unique(id) |&gt; length(),\n            mean = mean(rt),\n            sd = sd(rt),\n            min = min(rt),\n            max = max(rt),\n            CI_lower = mean - 1.96 * sd / sqrt(n),\n            CI_upper = mean + 1.96 * sd / sqrt(n))\n\n`summarise()` has grouped output by 'level'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 3 × 9\n# Groups:   level [3]\n  level  task      n  mean    sd   min   max CI_lower CI_upper\n  &lt;chr&gt;  &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 easy   MR       78  7.11  4.56  1.43  25.5     6.10     8.12\n2 hard   MR       78 12.0  10.3   1.60  69.1     9.67    14.2 \n3 medium MR       78  8.79  5.88  1.10  37.1     7.49    10.1 \n\n\n\nMR_data_agg |&gt; \n  mutate(level = factor(level, \n                        ordered = TRUE, \n                        levels = c(\"easy\", \"medium\", \"hard\"))) |&gt; \n  ggplot(aes(level, rt)) +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"MR\")\n\n\n\n\n\nMR_data_agg |&gt; \n  group_by(level, task) |&gt; \n  summarise(n = unique(id) |&gt; length(),\n            mean = mean(acc),\n            sd = sd(acc),\n            min = min(acc),\n            max = max(acc),\n            CI_lower = mean - 1.96 * sd / sqrt(n),\n            CI_upper = mean + 1.96 * sd / sqrt(n))\n\n`summarise()` has grouped output by 'level'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 3 × 9\n# Groups:   level [3]\n  level  task      n  mean    sd   min   max CI_lower CI_upper\n  &lt;chr&gt;  &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 easy   MR       78 0.850 0.174 0.312     1    0.812    0.889\n2 hard   MR       78 0.721 0.178 0.312     1    0.682    0.761\n3 medium MR       78 0.755 0.178 0.25      1    0.715    0.794\n\n\n\nMR_data_agg |&gt; \n  mutate(level = factor(level, \n                        ordered = TRUE, \n                        levels = c(\"easy\", \"medium\", \"hard\"))) |&gt; \n  ggplot(aes(level, acc)) +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"MR\")\n\n\n\n\n\n\n\n\nMS_data |&gt; \n  group_by(id, level, task) |&gt; \n  summarise(rt = mean(rt),\n            acc = mean(acc)) -&gt; MS_data_agg\n\n`summarise()` has grouped output by 'id', 'level'. You can override using the\n`.groups` argument.\n\n\n\nMS_data_agg |&gt; write_csv(\"MS_firstbanch_data_agg.csv\")\n\n\nMS_data_agg |&gt; \n  group_by(level, task) |&gt; \n  summarise(n = unique(id) |&gt; length(),\n            mean = mean(rt, na.rm = TRUE),\n            sd = sd(rt, na.rm = TRUE),\n            min = min(rt, na.rm = TRUE),\n            max = max(rt, na.rm = TRUE),\n            CI_lower = mean - 1.96 * sd / sqrt(n),\n            CI_upper = mean + 1.96 * sd / sqrt(n))\n\n`summarise()` has grouped output by 'level'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 3 × 9\n# Groups:   level [3]\n  level  task      n  mean    sd   min   max CI_lower CI_upper\n  &lt;chr&gt;  &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 easy   MS       78  11.7  5.72  5.47  46.8     10.4     13.0\n2 hard   MS       78  22.7 11.8  11.2   91.0     20.1     25.4\n3 medium MS       78  19.1  5.79 10.1   39.9     17.8     20.4\n\n\n\nMS_data_agg |&gt; \n  mutate(level = factor(level, \n                        ordered = TRUE, \n                        levels = c(\"easy\", \"medium\", \"hard\"))) |&gt; \n  ggplot(aes(level, rt)) +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"MS\")\n\nWarning: Removed 72 rows containing non-finite values (`stat_summary()`).\n\n\n\n\n\n\nMS_data_agg |&gt; \n  group_by(level, task) |&gt; \n  summarise(n = unique(id) |&gt; length(),\n            mean = mean(acc),\n            sd = sd(acc),\n            min = min(acc),\n            max = max(acc),\n            CI_lower = mean - 1.96 * sd / sqrt(n),\n            CI_upper = mean + 1.96 * sd / sqrt(n))\n\n`summarise()` has grouped output by 'level'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 3 × 9\n# Groups:   level [3]\n  level  task      n  mean    sd   min   max CI_lower CI_upper\n  &lt;chr&gt;  &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 easy   MS       78 0.949 0.165     0 1        0.913    0.986\n2 hard   MS       78 0.635 0.168     0 0.973    0.597    0.672\n3 medium MS       78 0.878 0.172     0 1        0.839    0.916\n\n\n\nMS_data_agg |&gt; \n  mutate(level = factor(level, \n                        ordered = TRUE, \n                        levels = c(\"easy\", \"medium\", \"hard\"))) |&gt; \n  ggplot(aes(level, acc)) +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"MS\")\n\n\n\n\n\n\n\n\nST_data |&gt; \n  group_by(id, level, task) |&gt; \n  summarise(rt = mean(rt),\n            acc = mean(is_correct)) -&gt; ST_data_agg\n\n`summarise()` has grouped output by 'id', 'level'. You can override using the\n`.groups` argument.\n\n\n\nST_data_agg |&gt; write_csv(\"ST_firstbanch_data_agg.csv\")\n\n\nST_data_agg |&gt; \n  group_by(level, task) |&gt; \n  summarise(n = unique(id) |&gt; length(),\n            mean = mean(rt),\n            sd = sd(rt),\n            min = min(rt),\n            max = max(rt),\n            CI_lower = mean - 1.96 * sd / sqrt(n),\n            CI_upper = mean + 1.96 * sd / sqrt(n))\n\n`summarise()` has grouped output by 'level'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 3 × 9\n# Groups:   level [3]\n  level  task      n  mean    sd   min   max CI_lower CI_upper\n  &lt;chr&gt;  &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 easy   ST       78  1.12 0.325 0.627  2.47     1.05     1.19\n2 hard   ST       78  1.44 0.441 0.737  3.52     1.34     1.54\n3 medium ST       78  1.39 0.470 0.692  3.45     1.28     1.49\n\n\n\nST_data_agg |&gt; \n  mutate(level = factor(level, \n                        ordered = TRUE, \n                        levels = c(\"easy\", \"medium\", \"hard\"))) |&gt; \n  ggplot(aes(level, rt)) +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"ST\")\n\n\n\n\n\nST_data_agg |&gt; \n  group_by(level, task) |&gt; \n  summarise(n = unique(id) |&gt; length(),\n            mean = mean(acc),\n            sd = sd(acc),\n            min = min(acc),\n            max = max(acc),\n            CI_lower = mean - 1.96 * sd / sqrt(n),\n            CI_upper = mean + 1.96 * sd / sqrt(n))\n\n`summarise()` has grouped output by 'level'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 3 × 9\n# Groups:   level [3]\n  level  task      n  mean     sd   min   max CI_lower CI_upper\n  &lt;chr&gt;  &lt;chr&gt; &lt;int&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 easy   ST       78 0.979 0.0358 0.875 1        0.971    0.987\n2 hard   ST       78 0.686 0.127  0.312 0.875    0.658    0.714\n3 medium ST       78 0.836 0.114  0.562 1        0.811    0.861\n\n\n\nST_data_agg |&gt; \n  mutate(level = factor(level, \n                        ordered = TRUE, \n                        levels = c(\"easy\", \"medium\", \"hard\"))) |&gt; \n  ggplot(aes(level, acc)) +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"ST\")\n\n\n\n\n\n\n\n\nMR_data_agg |&gt; \n  bind_rows(MS_data_agg, ST_data_agg) |&gt;\n  mutate(level = factor(level, \n                        ordered = TRUE, \n                        levels = c(\"easy\", \"medium\", \"hard\"))) |&gt; \n  ggplot(aes(level, rt)) +\n  facet_wrap(~ task, scales = \"free_y\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"Reaction Time\")\n\nWarning: Removed 72 rows containing non-finite values (`stat_summary()`).\n\n\n\n\n\n\nMR_data_agg |&gt; \n  bind_rows(MS_data_agg, ST_data_agg) |&gt;\n  mutate(level = factor(level, \n                        ordered = TRUE, \n                        levels = c(\"easy\", \"medium\", \"hard\"))) |&gt; \n  ggplot(aes(level, acc)) +\n  facet_wrap(~ task, scales = \"free_y\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"Accuracy\")"
  },
  {
    "objectID": "analysis.html#experimental-time",
    "href": "analysis.html#experimental-time",
    "title": "First banch. Analysis workflow",
    "section": "",
    "text": "EXPTIME |&gt; ggplot(aes(dur)) +\n  geom_density()\n\nWarning: Removed 1 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\n\nEXPTIME |&gt; \n  filter(dur &lt; 250) |&gt; \n  ggplot(aes(dur)) +\n  # geom_density() +\n  geom_histogram() +\n  geom_vline(xintercept = 70) +\n  geom_vline(xintercept = 75) +\n  geom_vline(xintercept = 100)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nEXPTIME |&gt; \n  filter(dur &lt; 250) |&gt; \n  ggplot(aes(dur)) +\n  geom_boxplot() \n\n\n\n  #geom_vline(xintercept = 93, linetype = \"dashed\")\n\n\nEXPTIME$dur |&gt; min(na.rm = TRUE)\n\n[1] 28.23333\n\nquantile(EXPTIME$dur[EXPTIME$dur&lt;250], .75, na.rm = TRUE) + 1.5 * IQR(EXPTIME$dur[EXPTIME$dur&lt;250], na.rm = TRUE)\n\n   75% \n82.375"
  },
  {
    "objectID": "analysis.html#nasa-tlx",
    "href": "analysis.html#nasa-tlx",
    "title": "First banch. Analysis workflow",
    "section": "",
    "text": "NASATLX_data |&gt; \n  # fix factor\n  mutate(\n    level = factor(\n      level,\n      levels = c(\"easy\", \"medium\", \"hard\"),\n      ordered = TRUE\n    ),\n    # modify vars to match with previously created encoding\n    scl = str_to_lower(scale),\n    tsk = str_to_lower(task),\n    lvl = str_sub(level, start = 1, end = 1) |&gt; str_to_upper(),\n    score = score * 5\n  ) |&gt;\n  # create a new var for CFA\n  unite(item, scl, tsk, lvl) -&gt; NASATLX_data\n\n\nlevel_colors &lt;- c(\"#4bd752\", \"#d7984b\", \"#d7524b\")\ntask_colors &lt;- c(\"red4\", \"green4\", \"blue4\")\nback_histogram_color &lt;- \"gray60\"\n\n\nNASATLX_data |&gt;\n  ggplot(aes(scale, score, fill = level)) +\n  geom_boxplot() +\n  facet_grid(task ~ .) +\n  theme(legend.position = \"bottom\") +\n  labs(x = \"NASA-TLX Scale\",\n       y = \"NASA-TLX Score (raw)\",\n       fill = \"Difficulty Level\") +\n  scale_fill_manual(values = level_colors)\n\nWarning: Removed 17 rows containing non-finite values (`stat_boxplot()`).\n\n\n\n\n\n\npd &lt;- position_dodge(0.3)\nNASATLX_data |&gt;\n  ggplot(aes(scale, score, color = level)) +\n  stat_summary(fun.data = mean_cl_boot, geom = \"errorbar\",\n               position = pd, width = .3) +\n  stat_summary(fun = mean, geom = \"point\",\n               position = pd) +\n  facet_grid(task ~ .) +\n  theme(legend.position = \"bottom\") +\n  labs(x = \"NASA-TLX Scale\",\n       y = \"NASA-TLX Score (raw)\",\n       fill = \"Difficulty Level\") +\n  scale_color_manual(values = level_colors)\n\nWarning: Removed 17 rows containing non-finite values (`stat_summary()`).\nRemoved 17 rows containing non-finite values (`stat_summary()`).\n\n\n\n\n\n\n\n\nNASATLX_data |&gt; \n  select(-item) |&gt; \n  # mutate(row_nubmer = row_number()) |&gt; \n  pivot_wider(values_from = score, names_from = scale) -&gt; nasa_tlx_wide\n# NASA_TLX |&gt; group_by(task, level) |&gt; summarise(n=n())\n# nasa_tlx_wide |&gt; group_by(task, level) |&gt; summarise(n=n())\n\n\nr2tof2 &lt;- function(r2) r2 / (1 - r2)\n\n\n\n\nmix_ME &lt;- lmer(ME ~ task * level + (1|id), \n               nasa_tlx_wide,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_ME)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: ME ~ task * level + (1 | id)\n   Data: nasa_tlx_wide\n\nREML criterion at convergence: 6090.6\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.1846 -0.5810  0.0514  0.6403  3.1496 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept) 172.8    13.14   \n Residual             300.2    17.33   \nNumber of obs: 701, groups:  id, 78\n\nFixed effects:\n                   Estimate Std. Error      df t value Pr(&gt;|t|)    \n(Intercept)          46.445      2.463 335.008  18.861  &lt; 2e-16 ***\ntaskMS              -16.813      2.774 615.020  -6.060 2.37e-09 ***\ntaskST              -18.655      2.774 615.020  -6.724 4.05e-11 ***\nlevelmedium          10.951      2.774 615.020   3.947 8.82e-05 ***\nlevelhard            19.777      2.774 615.020   7.128 2.86e-12 ***\ntaskMS:levelmedium   20.000      3.924 615.020   5.097 4.59e-07 ***\ntaskST:levelmedium   14.677      3.924 615.020   3.741 0.000201 ***\ntaskMS:levelhard     27.488      3.924 615.020   7.006 6.47e-12 ***\ntaskST:levelhard     20.282      3.931 615.107   5.160 3.34e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) taskMS taskST lvlmdm lvlhrd tskMS:lvlm tskST:lvlm tskMS:lvlh\ntaskMS      -0.563                                                             \ntaskST      -0.563  0.500                                                      \nlevelmedium -0.563  0.500  0.500                                               \nlevelhard   -0.563  0.500  0.500  0.500                                        \ntskMS:lvlmd  0.398 -0.707 -0.354 -0.707 -0.354                                 \ntskST:lvlmd  0.398 -0.354 -0.707 -0.707 -0.354  0.500                          \ntskMS:lvlhr  0.398 -0.707 -0.354 -0.354 -0.707  0.500      0.250               \ntskST:lvlhr  0.398 -0.353 -0.706 -0.353 -0.706  0.250      0.499      0.499    \n\nanova(mix_ME)\n\nType III Analysis of Variance Table with Satterthwaite's method\n           Sum Sq Mean Sq NumDF  DenDF F value    Pr(&gt;F)    \ntask         6703    3352     2 615.06  11.165 1.727e-05 ***\nlevel      152214   76107     2 615.06 253.516 &lt; 2.2e-16 ***\ntask:level  16928    4232     4 615.06  14.097 5.168e-11 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_ME)[1]\n\nWarning: 'r.squaredGLMM' now calculates a revised statistic. See the help page.\n\n\n[1] 0.3470414\n\nr2tof2(r.squaredGLMM(mix_ME)[1])\n\n[1] 0.5314908\n\npwr.f2.test(f2 = r2tof2(r.squaredGLMM(mix_ME)[1]),\n            u = 7,\n            sig.level = .05,\n            power = .8)\n\n\n     Multiple regression power calculation \n\n              u = 7\n              v = 26.69644\n             f2 = 0.5314908\n      sig.level = 0.05\n          power = 0.8\n\n\n\n\n\n\nmix_PH &lt;- lmer(PH ~ task * level + (1|id), \n               nasa_tlx_wide,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_PH)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: PH ~ task * level + (1 | id)\n   Data: nasa_tlx_wide\n\nREML criterion at convergence: 5661\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.5884 -0.5011 -0.0854  0.4111  5.0325 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept) 434.9    20.85   \n Residual             148.2    12.17   \nNumber of obs: 694, groups:  id, 78\n\nFixed effects:\n                   Estimate Std. Error       df t value Pr(&gt;|t|)    \n(Intercept)         17.0474     2.7392 127.9525   6.224 6.41e-09 ***\ntaskMS              -3.0090     1.9782 608.2281  -1.521  0.12875    \ntaskST              -5.6698     1.9562 608.0818  -2.898  0.00389 ** \nlevelmedium          0.8142     1.9562 608.0818   0.416  0.67740    \nlevelhard            5.5848     1.9562 608.0818   2.855  0.00445 ** \ntaskMS:levelmedium   8.9361     2.7821 608.1575   3.212  0.00139 ** \ntaskST:levelmedium   8.8358     2.7666 608.0868   3.194  0.00148 ** \ntaskMS:levelhard     7.8940     2.7860 608.1309   2.833  0.00476 ** \ntaskST:levelhard     7.7832     2.7615 608.0620   2.818  0.00498 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) taskMS taskST lvlmdm lvlhrd tskMS:lvlm tskST:lvlm tskMS:lvlh\ntaskMS      -0.356                                                             \ntaskST      -0.360  0.498                                                      \nlevelmedium -0.360  0.498  0.504                                               \nlevelhard   -0.360  0.498  0.504  0.504                                        \ntskMS:lvlmd  0.253 -0.711 -0.354 -0.703 -0.354                                 \ntskST:lvlmd  0.254 -0.352 -0.707 -0.707 -0.356  0.497                          \ntskMS:lvlhr  0.253 -0.709 -0.354 -0.354 -0.702  0.504      0.250               \ntskST:lvlhr  0.255 -0.353 -0.708 -0.357 -0.708  0.251      0.501      0.497    \n\nanova(mix_PH)\n\nType III Analysis of Variance Table with Satterthwaite's method\n            Sum Sq Mean Sq NumDF  DenDF F value    Pr(&gt;F)    \ntask        1087.1   543.6     2 608.13  3.6685  0.026080 *  \nlevel      13744.9  6872.5     2 608.10 46.3819 &lt; 2.2e-16 ***\ntask:level  2422.0   605.5     4 608.12  4.0865  0.002816 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_PH)[1]\n\n[1] 0.04098889\n\nr2tof2(r.squaredGLMM(mix_PH)[1])\n\n[1] 0.04274079\n\npwr.f2.test(f2 = r2tof2(r.squaredGLMM(mix_PH)[1]),\n            u = 7,\n            sig.level = .05,\n            power = .8)\n\n\n     Multiple regression power calculation \n\n              u = 7\n              v = 334.8529\n             f2 = 0.04274079\n      sig.level = 0.05\n          power = 0.8\n\n\n\n\n\n\nmix_TI &lt;- lmer(TI ~ task * level + (1|id), \n               nasa_tlx_wide,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_TI)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: TI ~ task * level + (1 | id)\n   Data: nasa_tlx_wide\n\nREML criterion at convergence: 6223.8\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.0957 -0.5892 -0.0314  0.6288  2.8906 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept) 160.6    12.67   \n Residual             373.7    19.33   \nNumber of obs: 701, groups:  id, 78\n\nFixed effects:\n                   Estimate Std. Error       df t value Pr(&gt;|t|)    \n(Intercept)         15.5984     2.6173 401.8373   5.960 5.53e-09 ***\ntaskMS               3.5592     3.0955 614.9845   1.150 0.250661    \ntaskST              11.3673     3.0955 614.9845   3.672 0.000261 ***\nlevelmedium          0.7836     3.0955 614.9845   0.253 0.800248    \nlevelhard            4.1863     3.0955 614.9845   1.352 0.176739    \ntaskMS:levelmedium  32.1104     4.3776 614.9845   7.335 7.02e-13 ***\ntaskST:levelmedium  33.6197     4.3854 615.0938   7.666 6.94e-14 ***\ntaskMS:levelhard    51.4924     4.3776 614.9845  11.763  &lt; 2e-16 ***\ntaskST:levelhard    50.8953     4.3776 614.9845  11.626  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) taskMS taskST lvlmdm lvlhrd tskMS:lvlm tskST:lvlm tskMS:lvlh\ntaskMS      -0.591                                                             \ntaskST      -0.591  0.500                                                      \nlevelmedium -0.591  0.500  0.500                                               \nlevelhard   -0.591  0.500  0.500  0.500                                        \ntskMS:lvlmd  0.418 -0.707 -0.354 -0.707 -0.354                                 \ntskST:lvlmd  0.417 -0.353 -0.706 -0.706 -0.353  0.499                          \ntskMS:lvlhr  0.418 -0.707 -0.354 -0.354 -0.707  0.500      0.250               \ntskST:lvlhr  0.418 -0.354 -0.707 -0.354 -0.707  0.250      0.499      0.500    \n\nanova(mix_TI)\n\nType III Analysis of Variance Table with Satterthwaite's method\n           Sum Sq Mean Sq NumDF  DenDF F value    Pr(&gt;F)    \ntask       203830  101915     2 615.03 272.724 &lt; 2.2e-16 ***\nlevel      173710   86855     2 615.03 232.424 &lt; 2.2e-16 ***\ntask:level  70059   17515     4 615.03  46.869 &lt; 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_TI)[1]\n\n[1] 0.5446988\n\nr2tof2(r.squaredGLMM(mix_TI)[1])\n\n[1] 1.196348\n\npwr.f2.test(f2 = r2tof2(r.squaredGLMM(mix_TI)[1]),\n            u = 7,\n            sig.level = .05,\n            power = .8)\n\n\n     Multiple regression power calculation \n\n              u = 7\n              v = 12.23247\n             f2 = 1.196348\n      sig.level = 0.05\n          power = 0.8\n\n\n\n\n\n\nmix_PE &lt;- lmer(PE ~ task * level + (1|id), \n               nasa_tlx_wide,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_PE)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: PE ~ task * level + (1 | id)\n   Data: nasa_tlx_wide\n\nREML criterion at convergence: 6076.8\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.3961 -0.6412  0.0325  0.6477  2.5583 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept) 113.9    10.67   \n Residual             306.0    17.49   \nNumber of obs: 701, groups:  id, 78\n\nFixed effects:\n                   Estimate Std. Error      df t value Pr(&gt;|t|)    \n(Intercept)          66.615      2.320 435.796  28.711  &lt; 2e-16 ***\ntaskMS               25.479      2.801 615.017   9.096  &lt; 2e-16 ***\ntaskST               23.503      2.801 615.017   8.391 3.31e-16 ***\nlevelmedium          -8.781      2.801 615.017  -3.135   0.0018 ** \nlevelhard           -16.480      2.801 615.017  -5.884 6.60e-09 ***\ntaskMS:levelmedium  -17.419      3.961 615.017  -4.397 1.29e-05 ***\ntaskST:levelmedium  -28.291      3.961 615.017  -7.142 2.61e-12 ***\ntaskMS:levelhard    -39.938      3.961 615.017 -10.082  &lt; 2e-16 ***\ntaskST:levelhard    -44.857      3.968 615.138 -11.304  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) taskMS taskST lvlmdm lvlhrd tskMS:lvlm tskST:lvlm tskMS:lvlh\ntaskMS      -0.604                                                             \ntaskST      -0.604  0.500                                                      \nlevelmedium -0.604  0.500  0.500                                               \nlevelhard   -0.604  0.500  0.500  0.500                                        \ntskMS:lvlmd  0.427 -0.707 -0.354 -0.707 -0.354                                 \ntskST:lvlmd  0.427 -0.354 -0.707 -0.707 -0.354  0.500                          \ntskMS:lvlhr  0.427 -0.707 -0.354 -0.354 -0.707  0.500      0.250               \ntskST:lvlhr  0.426 -0.353 -0.706 -0.353 -0.706  0.250      0.499      0.499    \n\nanova(mix_PE)\n\nType III Analysis of Variance Table with Satterthwaite's method\n           Sum Sq Mean Sq NumDF  DenDF F value    Pr(&gt;F)    \ntask         7295    3647     2 615.07  11.921  8.33e-06 ***\nlevel      234141  117070     2 615.07 382.616 &lt; 2.2e-16 ***\ntask:level  49094   12273     4 615.07  40.113 &lt; 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_PE)[1]\n\n[1] 0.4967487\n\nr2tof2(r.squaredGLMM(mix_PE)[1])\n\n[1] 0.9870788\n\npwr.f2.test(f2 = r2tof2(r.squaredGLMM(mix_PE)[1]),\n            u = 7,\n            sig.level = .05,\n            power = .8)\n\n\n     Multiple regression power calculation \n\n              u = 7\n              v = 14.63282\n             f2 = 0.9870788\n      sig.level = 0.05\n          power = 0.8\n\n\n\n\n\n\nmix_EF &lt;- lmer(EF ~ task * level + (1|id), \n               nasa_tlx_wide,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_EF)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: EF ~ task * level + (1 | id)\n   Data: nasa_tlx_wide\n\nREML criterion at convergence: 6055.8\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.1279 -0.6094  0.0357  0.6249  3.5591 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept) 249.8    15.81   \n Residual             276.8    16.64   \nNumber of obs: 700, groups:  id, 78\n\nFixed effects:\n                   Estimate Std. Error      df t value Pr(&gt;|t|)    \n(Intercept)          44.381      2.598 247.283  17.080  &lt; 2e-16 ***\ntaskMS              -12.862      2.664 614.020  -4.828 1.74e-06 ***\ntaskST              -11.609      2.664 614.020  -4.358 1.54e-05 ***\nlevelmedium           9.006      2.664 614.020   3.381 0.000769 ***\nlevelhard            17.584      2.664 614.020   6.601 8.86e-11 ***\ntaskMS:levelmedium   17.979      3.774 614.080   4.764 2.38e-06 ***\ntaskST:levelmedium   13.621      3.774 614.080   3.609 0.000333 ***\ntaskMS:levelhard     25.250      3.767 614.020   6.702 4.65e-11 ***\ntaskST:levelhard     14.255      3.767 614.020   3.784 0.000170 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) taskMS taskST lvlmdm lvlhrd tskMS:lvlm tskST:lvlm tskMS:lvlh\ntaskMS      -0.513                                                             \ntaskST      -0.513  0.500                                                      \nlevelmedium -0.513  0.500  0.500                                               \nlevelhard   -0.513  0.500  0.500  0.500                                        \ntskMS:lvlmd  0.362 -0.706 -0.353 -0.706 -0.353                                 \ntskST:lvlmd  0.362 -0.353 -0.706 -0.706 -0.353  0.498                          \ntskMS:lvlhr  0.362 -0.707 -0.354 -0.354 -0.707  0.499      0.250               \ntskST:lvlhr  0.362 -0.354 -0.707 -0.354 -0.707  0.250      0.499      0.500    \n\nanova(mix_EF)\n\nType III Analysis of Variance Table with Satterthwaite's method\n           Sum Sq Mean Sq NumDF  DenDF  F value    Pr(&gt;F)    \ntask         1763     881     2 614.07   3.1842    0.0421 *  \nlevel      113335   56667     2 614.07 204.7413 &lt; 2.2e-16 ***\ntask:level  13748    3437     4 614.07  12.4179 1.018e-09 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_EF)[1]\n\n[1] 0.2592648\n\nr2tof2(r.squaredGLMM(mix_EF)[1])\n\n[1] 0.3500102\n\npwr.f2.test(f2 = r2tof2(r.squaredGLMM(mix_EF)[1]),\n            u = 7,\n            sig.level = .05,\n            power = .8)\n\n\n     Multiple regression power calculation \n\n              u = 7\n              v = 40.49648\n             f2 = 0.3500102\n      sig.level = 0.05\n          power = 0.8\n\n\n\n\n\n\nmix_FR &lt;- lmer(FR ~ task * level + (1|id), \n               nasa_tlx_wide,\n               contrasts = list(level=\"contr.treatment\"))\nsummary(mix_FR)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: FR ~ task * level + (1 | id)\n   Data: nasa_tlx_wide\n\nREML criterion at convergence: 6292.3\n\nScaled residuals: \n     Min       1Q   Median       3Q      Max \n-2.92494 -0.67440 -0.04275  0.63993  2.97611 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n id       (Intercept) 343.0    18.52   \n Residual             402.2    20.05   \nNumber of obs: 698, groups:  id, 78\n\nFixed effects:\n                   Estimate Std. Error      df t value Pr(&gt;|t|)    \n(Intercept)          35.058      3.091 256.301  11.342  &lt; 2e-16 ***\ntaskMS              -11.619      3.235 612.136  -3.592 0.000355 ***\ntaskST              -13.828      3.211 611.853  -4.306 1.94e-05 ***\nlevelmedium           6.322      3.211 611.853   1.969 0.049432 *  \nlevelhard            12.950      3.223 611.978   4.018 6.59e-05 ***\ntaskMS:levelmedium   13.354      4.558 611.995   2.930 0.003518 ** \ntaskST:levelmedium   20.118      4.541 611.853   4.430 1.12e-05 ***\ntaskMS:levelhard     23.420      4.566 612.053   5.129 3.92e-07 ***\ntaskST:levelhard     30.659      4.558 611.996   6.727 4.00e-11 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) taskMS taskST lvlmdm lvlhrd tskMS:lvlm tskST:lvlm tskMS:lvlh\ntaskMS      -0.516                                                             \ntaskST      -0.519  0.496                                                      \nlevelmedium -0.519  0.496  0.500                                               \nlevelhard   -0.518  0.495  0.498  0.498                                        \ntskMS:lvlmd  0.366 -0.710 -0.352 -0.705 -0.351                                 \ntskST:lvlmd  0.367 -0.351 -0.707 -0.707 -0.352  0.498                          \ntskMS:lvlhr  0.365 -0.708 -0.352 -0.352 -0.706  0.503      0.249               \ntskST:lvlhr  0.366 -0.349 -0.705 -0.352 -0.707  0.248      0.498      0.499    \n\nanova(mix_FR)\n\nType III Analysis of Variance Table with Satterthwaite's method\n           Sum Sq Mean Sq NumDF  DenDF  F value    Pr(&gt;F)    \ntask         1246     623     2 611.95   1.5486    0.2134    \nlevel      111859   55929     2 611.94 139.0640 &lt; 2.2e-16 ***\ntask:level  20526    5131     4 612.00  12.7589 5.569e-10 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nr.squaredGLMM(mix_FR)[1]\n\n[1] 0.204493\n\nr2tof2(r.squaredGLMM(mix_FR)[1])\n\n[1] 0.2570599\n\npwr.f2.test(f2 = r2tof2(r.squaredGLMM(mix_FR)[1]),\n            u = 7,\n            sig.level = .05,\n            power = .8)\n\n\n     Multiple regression power calculation \n\n              u = 7\n              v = 55.20916\n             f2 = 0.2570599\n      sig.level = 0.05\n          power = 0.8\n\n\n\n\n\n\n\nlavmodel &lt;- \"\nPE =~ PE_mr + PE_ms + PE_st\nME =~ ME_mr + ME_ms + ME_st\nPH =~ PH_mr + PH_ms + PH_st\nEF =~ EF_mr + EF_ms + EF_st\nTI =~ TI_mr + TI_ms + TI_st\nFR =~ FR_mr + FR_ms + FR_st\nOW =~ PE + ME + PH + EF + TI + FR\"\n\n\nsemPower.getDf(lavmodel)\n\n[1] 129\n\n\n\nap &lt;- semPower.aPriori(effect = .05, effect.measure = 'RMSEA',\n                       alpha = .05, power = .80, df = semPower.getDf(lavmodel))\nsummary(ap)\n\n\n semPower: A priori power analysis\n                                   \n F0                        0.322500\n RMSEA                     0.050000\n Mc                        0.851079\n                                   \n df                        129     \n Required Num Observations 142     \n                                   \n Critical Chi-Square       156.5075\n NCP                       45.47250\n Alpha                     0.050000\n Beta                      0.198348\n Power (1 - Beta)          0.801652\n Implied Alpha/Beta Ratio  0.252082\n\n\n\n\n\n\n\n\n\nNASATLX_data |&gt; \n  pivot_wider(id_cols = id, \n              names_from = item, \n              values_from = score,\n              values_fn = unlist) -&gt; NASATLX_cfa\n\n\nmodel_easy &lt;- \"PE =~ pe_mr_E + pe_ms_E + pe_st_E\nPH =~ ph_mr_E + ph_ms_E + ph_st_E\nME =~ me_mr_E + me_ms_E + me_st_E\nEF =~ ef_mr_E + ef_ms_E + ef_st_E\nTI =~ ti_mr_E + ti_ms_E + ti_st_E\nFR =~ fr_mr_E + fr_ms_E + fr_st_E\nOW =~ PE + ME + PH + EF + TI + FR\"\n\ncfa_easy &lt;- cfa(model_easy, NASATLX_cfa,)\n\nWarning in lavaan::lavaan(model = model_easy, data = NASATLX_cfa, model.type = \"cfa\", : lavaan WARNING:\n    the optimizer (NLMINB) claimed the model converged, but not all\n    elements of the gradient are (near) zero; the optimizer may not\n    have found a local solution use check.gradient = FALSE to skip\n    this check.\n\nsummary(cfa_easy, fit.measures = TRUE)\n\nWarning in lav_object_summary(object = object, header = header, fit.measures = fit.measures, : lavaan WARNING: fit measures not available if model did not converge\n\n\nlavaan 0.6.15 did NOT end normally after 2116 iterations\n** WARNING ** Estimates below are most likely unreliable\n\n  Estimator                                         ML\n  Optimization method                           NLMINB\n  Number of model parameters                        42\n\n                                                  Used       Total\n  Number of observations                            73          78\n\n\nParameter Estimates:\n\n  Standard errors                             Standard\n  Information                                 Expected\n  Information saturated (h1) model          Structured\n\nLatent Variables:\n                   Estimate  Std.Err  z-value  P(&gt;|z|)\n  PE =~                                               \n    pe_mr_E           1.000                           \n    pe_ms_E           1.419       NA                  \n    pe_st_E           1.209       NA                  \n  PH =~                                               \n    ph_mr_E           1.000                           \n    ph_ms_E           0.771       NA                  \n    ph_st_E           0.553       NA                  \n  ME =~                                               \n    me_mr_E           1.000                           \n    me_ms_E           1.332       NA                  \n    me_st_E           0.970       NA                  \n  EF =~                                               \n    ef_mr_E           1.000                           \n    ef_ms_E         615.563       NA                  \n    ef_st_E         450.263       NA                  \n  TI =~                                               \n    ti_mr_E           1.000                           \n    ti_ms_E           0.897       NA                  \n    ti_st_E           0.658       NA                  \n  FR =~                                               \n    fr_mr_E           1.000                           \n    fr_ms_E           1.621       NA                  \n    fr_st_E           0.981       NA                  \n  OW =~                                               \n    PE                1.000                           \n    ME               77.820       NA                  \n    PH               35.580       NA                  \n    EF              -27.319       NA                  \n    TI              -16.505       NA                  \n    FR               32.616       NA                  \n\nVariances:\n                   Estimate  Std.Err  z-value  P(&gt;|z|)\n   .pe_mr_E         467.637       NA                  \n   .pe_ms_E          78.043       NA                  \n   .pe_st_E          69.064       NA                  \n   .ph_mr_E          81.950       NA                  \n   .ph_ms_E          90.557       NA                  \n   .ph_st_E          55.096       NA                  \n   .me_mr_E         501.362       NA                  \n   .me_ms_E         112.752       NA                  \n   .me_st_E         226.683       NA                  \n   .ef_mr_E         653.026       NA                  \n   .ef_ms_E          52.514       NA                  \n   .ef_st_E         212.342       NA                  \n   .ti_mr_E         127.553       NA                  \n   .ti_ms_E         233.108       NA                  \n   .ti_st_E         329.558       NA                  \n   .fr_mr_E         607.300       NA                  \n   .fr_ms_E         245.992       NA                  \n   .fr_st_E         229.707       NA                  \n   .PE               47.895       NA                  \n   .PH              405.813       NA                  \n   .ME              162.755       NA                  \n   .EF                0.119       NA                  \n   .TI              223.000       NA                  \n   .FR              142.155       NA                  \n    OW               -0.000       NA                  \n\nfitmeasures(cfa_easy, fit.measures = c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"tli\", \"rmsea\", \"srmr\"))\n\nError in lav_fit_measures(object = object, fit.measures = fit.measures, : lavaan ERROR: fit measures not available if model did not converge\n\n\n\nmodel_medium &lt;- \"PE =~ pe_mr_M + pe_ms_M + pe_st_M\nPH =~ ph_mr_M + ph_ms_M + ph_st_M\nME =~ me_mr_M + me_ms_M + me_st_M\nEF =~ ef_mr_M + ef_ms_M + ef_st_M\nTI =~ ti_mr_M + ti_ms_M + ti_st_M\nFR =~ fr_mr_M + fr_ms_M + fr_st_M\nOW =~ PE + ME + PH + EF + TI + FR\"\n\ncfa_medium &lt;- cfa(model_medium, NASATLX_cfa,)\n\nWarning in lav_object_post_check(object): lavaan WARNING: some estimated lv\nvariances are negative\n\nsummary(cfa_medium, fit.measures = TRUE)\n\nlavaan 0.6.15 ended normally after 595 iterations\n\n  Estimator                                         ML\n  Optimization method                           NLMINB\n  Number of model parameters                        42\n\n                                                  Used       Total\n  Number of observations                            74          78\n\nModel Test User Model:\n                                                      \n  Test statistic                               414.006\n  Degrees of freedom                               129\n  P-value (Chi-square)                           0.000\n\nModel Test Baseline Model:\n\n  Test statistic                               937.686\n  Degrees of freedom                               153\n  P-value                                        0.000\n\nUser Model versus Baseline Model:\n\n  Comparative Fit Index (CFI)                    0.637\n  Tucker-Lewis Index (TLI)                       0.569\n\nLoglikelihood and Information Criteria:\n\n  Loglikelihood user model (H0)              -5875.695\n  Loglikelihood unrestricted model (H1)      -5668.692\n                                                      \n  Akaike (AIC)                               11835.391\n  Bayesian (BIC)                             11932.162\n  Sample-size adjusted Bayesian (SABIC)      11799.804\n\nRoot Mean Square Error of Approximation:\n\n  RMSEA                                          0.173\n  90 Percent confidence interval - lower         0.154\n  90 Percent confidence interval - upper         0.192\n  P-value H_0: RMSEA &lt;= 0.050                    0.000\n  P-value H_0: RMSEA &gt;= 0.080                    1.000\n\nStandardized Root Mean Square Residual:\n\n  SRMR                                           0.141\n\nParameter Estimates:\n\n  Standard errors                             Standard\n  Information                                 Expected\n  Information saturated (h1) model          Structured\n\nLatent Variables:\n                   Estimate  Std.Err  z-value  P(&gt;|z|)\n  PE =~                                               \n    pe_mr_M           1.000                           \n    pe_ms_M           0.692    0.404    1.713    0.087\n    pe_st_M           1.111    0.795    1.398    0.162\n  PH =~                                               \n    ph_mr_M           1.000                           \n    ph_ms_M           1.175    0.114   10.302    0.000\n    ph_st_M           1.136    0.115    9.853    0.000\n  ME =~                                               \n    me_mr_M           1.000                           \n    me_ms_M           1.700    0.462    3.682    0.000\n    me_st_M           1.056    0.344    3.070    0.002\n  EF =~                                               \n    ef_mr_M           1.000                           \n    ef_ms_M           1.507    0.289    5.217    0.000\n    ef_st_M           1.087    0.248    4.376    0.000\n  TI =~                                               \n    ti_mr_M           1.000                           \n    ti_ms_M           5.636    2.758    2.044    0.041\n    ti_st_M           3.908    2.030    1.925    0.054\n  FR =~                                               \n    fr_mr_M           1.000                           \n    fr_ms_M           1.321    0.267    4.951    0.000\n    fr_st_M           1.088    0.242    4.498    0.000\n  OW =~                                               \n    PE                1.000                           \n    ME               77.337 1225.523    0.063    0.950\n    PH               88.722 1405.879    0.063    0.950\n    EF              114.555 1815.199    0.063    0.950\n    TI               31.359  497.099    0.063    0.950\n    FR              119.009 1885.795    0.063    0.950\n\nVariances:\n                   Estimate  Std.Err  z-value  P(&gt;|z|)\n   .pe_mr_M         459.659  129.163    3.559    0.000\n   .pe_ms_M         515.945   98.551    5.235    0.000\n   .pe_st_M         254.842  135.912    1.875    0.061\n   .ph_mr_M         140.360   31.040    4.522    0.000\n   .ph_ms_M         105.049   32.821    3.201    0.001\n   .ph_st_M         142.392   35.293    4.035    0.000\n   .me_mr_M         400.687   68.640    5.837    0.000\n   .me_ms_M         235.436   58.752    4.007    0.000\n   .me_st_M         333.738   58.257    5.729    0.000\n   .ef_mr_M         437.248   74.274    5.887    0.000\n   .ef_ms_M         105.610   33.510    3.152    0.002\n   .ef_st_M         304.507   53.091    5.736    0.000\n   .ti_mr_M         242.729   39.965    6.073    0.000\n   .ti_ms_M         310.719   84.981    3.656    0.000\n   .ti_st_M         637.750  109.822    5.807    0.000\n   .fr_mr_M         631.586  114.143    5.533    0.000\n   .fr_ms_M         210.454   68.924    3.053    0.002\n   .fr_st_M         405.789   80.574    5.036    0.000\n   .PE              146.638  123.264    1.190    0.234\n   .PH              264.745   61.527    4.303    0.000\n   .ME                7.078   15.473    0.457    0.647\n   .EF              -12.849   15.063   -0.853    0.394\n   .TI               -1.161    2.451   -0.474    0.636\n   .FR              102.947   48.504    2.122    0.034\n    OW                0.016    0.498    0.032    0.975\n\nfitmeasures(cfa_medium, fit.measures = c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"tli\", \"rmsea\", \"srmr\"))\n\n  chisq      df  pvalue     cfi     tli   rmsea    srmr \n414.006 129.000   0.000   0.637   0.569   0.173   0.141 \n\n\n\nmodel_hard &lt;- \"PE =~ pe_mr_H + pe_ms_H + pe_st_H\nPH =~ ph_mr_H + ph_ms_H + ph_st_H\nME =~ me_mr_H + me_ms_H + me_st_H\nEF =~ ef_mr_H + ef_ms_H + ef_st_H\nTI =~ ti_mr_H + ti_ms_H + ti_st_H\nFR =~ fr_mr_H + fr_ms_H + fr_st_H\nOW =~ PE + ME + PH + EF + TI + FR\"\n\ncfa_hard &lt;- cfa(model_hard, NASATLX_cfa,)\n\nWarning in lav_object_post_check(object): lavaan WARNING: some estimated lv\nvariances are negative\n\nsummary(cfa_medium, fit.measures = TRUE)\n\nlavaan 0.6.15 ended normally after 595 iterations\n\n  Estimator                                         ML\n  Optimization method                           NLMINB\n  Number of model parameters                        42\n\n                                                  Used       Total\n  Number of observations                            74          78\n\nModel Test User Model:\n                                                      \n  Test statistic                               414.006\n  Degrees of freedom                               129\n  P-value (Chi-square)                           0.000\n\nModel Test Baseline Model:\n\n  Test statistic                               937.686\n  Degrees of freedom                               153\n  P-value                                        0.000\n\nUser Model versus Baseline Model:\n\n  Comparative Fit Index (CFI)                    0.637\n  Tucker-Lewis Index (TLI)                       0.569\n\nLoglikelihood and Information Criteria:\n\n  Loglikelihood user model (H0)              -5875.695\n  Loglikelihood unrestricted model (H1)      -5668.692\n                                                      \n  Akaike (AIC)                               11835.391\n  Bayesian (BIC)                             11932.162\n  Sample-size adjusted Bayesian (SABIC)      11799.804\n\nRoot Mean Square Error of Approximation:\n\n  RMSEA                                          0.173\n  90 Percent confidence interval - lower         0.154\n  90 Percent confidence interval - upper         0.192\n  P-value H_0: RMSEA &lt;= 0.050                    0.000\n  P-value H_0: RMSEA &gt;= 0.080                    1.000\n\nStandardized Root Mean Square Residual:\n\n  SRMR                                           0.141\n\nParameter Estimates:\n\n  Standard errors                             Standard\n  Information                                 Expected\n  Information saturated (h1) model          Structured\n\nLatent Variables:\n                   Estimate  Std.Err  z-value  P(&gt;|z|)\n  PE =~                                               \n    pe_mr_M           1.000                           \n    pe_ms_M           0.692    0.404    1.713    0.087\n    pe_st_M           1.111    0.795    1.398    0.162\n  PH =~                                               \n    ph_mr_M           1.000                           \n    ph_ms_M           1.175    0.114   10.302    0.000\n    ph_st_M           1.136    0.115    9.853    0.000\n  ME =~                                               \n    me_mr_M           1.000                           \n    me_ms_M           1.700    0.462    3.682    0.000\n    me_st_M           1.056    0.344    3.070    0.002\n  EF =~                                               \n    ef_mr_M           1.000                           \n    ef_ms_M           1.507    0.289    5.217    0.000\n    ef_st_M           1.087    0.248    4.376    0.000\n  TI =~                                               \n    ti_mr_M           1.000                           \n    ti_ms_M           5.636    2.758    2.044    0.041\n    ti_st_M           3.908    2.030    1.925    0.054\n  FR =~                                               \n    fr_mr_M           1.000                           \n    fr_ms_M           1.321    0.267    4.951    0.000\n    fr_st_M           1.088    0.242    4.498    0.000\n  OW =~                                               \n    PE                1.000                           \n    ME               77.337 1225.523    0.063    0.950\n    PH               88.722 1405.879    0.063    0.950\n    EF              114.555 1815.199    0.063    0.950\n    TI               31.359  497.099    0.063    0.950\n    FR              119.009 1885.795    0.063    0.950\n\nVariances:\n                   Estimate  Std.Err  z-value  P(&gt;|z|)\n   .pe_mr_M         459.659  129.163    3.559    0.000\n   .pe_ms_M         515.945   98.551    5.235    0.000\n   .pe_st_M         254.842  135.912    1.875    0.061\n   .ph_mr_M         140.360   31.040    4.522    0.000\n   .ph_ms_M         105.049   32.821    3.201    0.001\n   .ph_st_M         142.392   35.293    4.035    0.000\n   .me_mr_M         400.687   68.640    5.837    0.000\n   .me_ms_M         235.436   58.752    4.007    0.000\n   .me_st_M         333.738   58.257    5.729    0.000\n   .ef_mr_M         437.248   74.274    5.887    0.000\n   .ef_ms_M         105.610   33.510    3.152    0.002\n   .ef_st_M         304.507   53.091    5.736    0.000\n   .ti_mr_M         242.729   39.965    6.073    0.000\n   .ti_ms_M         310.719   84.981    3.656    0.000\n   .ti_st_M         637.750  109.822    5.807    0.000\n   .fr_mr_M         631.586  114.143    5.533    0.000\n   .fr_ms_M         210.454   68.924    3.053    0.002\n   .fr_st_M         405.789   80.574    5.036    0.000\n   .PE              146.638  123.264    1.190    0.234\n   .PH              264.745   61.527    4.303    0.000\n   .ME                7.078   15.473    0.457    0.647\n   .EF              -12.849   15.063   -0.853    0.394\n   .TI               -1.161    2.451   -0.474    0.636\n   .FR              102.947   48.504    2.122    0.034\n    OW                0.016    0.498    0.032    0.975\n\nfitmeasures(cfa_hard, fit.measures = c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"tli\", \"rmsea\", \"srmr\"))\n\n  chisq      df  pvalue     cfi     tli   rmsea    srmr \n366.213 129.000   0.000   0.664   0.601   0.159   0.115"
  },
  {
    "objectID": "toloka-explore.html",
    "href": "toloka-explore.html",
    "title": "Yandex.Toloka Data Exploration",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\ntheme_set(theme_bw())\n\n\nrm(list=ls())\n\n\nmr_preproc &lt;- function(d) {\n  \n  require(tidyverse)\n  \n  d |&gt; select(\n    # select columns we need\n    correctAns,\n    base_pic,\n    rotated_pic,\n    resp_MR_easy.keys,\n    resp_MR_easy.corr,\n    resp_MR_easy.rt\n  ) |&gt;\n    drop_na() |&gt; # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"MR\",\n           # add task name (mental rotation)\n           level = \"easy\",\n           # add difficulty level\n           trial = 1:16) |&gt; # number trials\n    rename(\n      # rename columns for handy usage\n      \"key\" = resp_MR_easy.keys,\n      \"is_correct\" = resp_MR_easy.corr,\n      \"rt\" = resp_MR_easy.rt\n    ) -&gt; MR_easy # ready to use\n  \n  \n  d |&gt; select(\n    # select columns we need\n    correctAns,\n    base_pic,\n    rotated_pic,\n    resp_MR_medium.keys,\n    resp_MR_medium.corr,\n    resp_MR_medium.rt\n  ) |&gt;\n    drop_na() |&gt; # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"MR\",\n           # add task name (mental rotation)\n           level = \"medium\",\n           # add difficulty level\n           trial = 1:16) |&gt;  # number trials\n    rename(\n      # rename columns for handy usage\n      \"key\" = resp_MR_medium.keys,\n      \"is_correct\" = resp_MR_medium.corr,\n      \"rt\" = resp_MR_medium.rt\n    ) -&gt; MR_medium # ready to use\n  \n  \n  \n  d |&gt; select(\n    # select columns we need\n    correctAns,\n    base_pic,\n    rotated_pic,\n    resp_MR_hard.keys,\n    resp_MR_hard.corr,\n    resp_MR_hard.rt\n  ) |&gt;\n    drop_na() |&gt; # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"MR\",\n           # add task name (mental rotation)\n           level = \"hard\",\n           # add difficulty level\n           trial = 1:16) |&gt; # number trials\n    rename(\n      # rename columns for handy usage\n      \"key\" = resp_MR_hard.keys,\n      \"is_correct\" = resp_MR_hard.corr,\n      \"rt\" = resp_MR_hard.rt\n    ) -&gt; MR_hard # ready to use\n  \n  # bind all conditions of mental rotation task to one tibble\n  \n  bind_rows(MR_easy, MR_medium, MR_hard) -&gt; MR\n  \n  return(MR)\n  \n}\n\nst_preproc &lt;- function(d) {\n  \n  require(tidyverse)\n  \n  d |&gt; select(\n    # select columns we need\n    target_present,\n    key_resp_SE.keys,\n    key_resp_SE.corr,\n    key_resp_SE.rt\n  ) |&gt;\n    drop_na() |&gt; # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"ST\",\n           # add task name (Sternberg task)\n           level = \"easy\",\n           # add difficulty level\n           trial = 1:16) |&gt; # number trials\n    rename(\n      # rename columns for handy usage\n      \"key\" = key_resp_SE.keys,\n      \"is_correct\" = key_resp_SE.corr,\n      \"rt\" = key_resp_SE.rt\n    ) -&gt; ST_easy # ready to use\n  \n  d |&gt; select(\n    # select columns we need\n    target_present,\n    key_resp_SM.keys,\n    key_resp_SM.corr,\n    key_resp_SM.rt\n  ) |&gt;\n    drop_na() |&gt; # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"ST\",\n           # add task name (Sternberg task)\n           level = \"medium\",\n           # add difficulty level\n           trial = 1:16) |&gt; # number trials\n    rename(\n      # rename columns for handy usage\n      \"key\" = key_resp_SM.keys,\n      \"is_correct\" = key_resp_SM.corr,\n      \"rt\" = key_resp_SM.rt\n    ) -&gt; ST_medium # ready to use\n  \n  \n  d |&gt; select(\n    # select columns we need\n    target_present,\n    resp_S_H_trials.keys,\n    resp_S_H_trials.corr,\n    resp_S_H_trials.rt\n  ) |&gt;\n    drop_na() |&gt; # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"ST\",\n           # add task name (Sternberg task)\n           level = \"hard\",\n           # add difficulty level\n           trial = 1:16) |&gt; # number trials\n    rename(\n      # rename columns for handy usage\n      \"key\" = resp_S_H_trials.keys,\n      \"is_correct\" = resp_S_H_trials.corr,\n      \"rt\" = resp_S_H_trials.rt\n    ) -&gt; ST_hard # ready to use\n  \n  # bind all conditions of sternberg task to one tibble\n  bind_rows(ST_easy, ST_hard, ST_medium) -&gt; ST\n  \n  return(ST)\n  \n}\n\nms_preproc &lt;- function(d) {\n  \n  # Since we our participants could fill the fields in any order, \n  # here is a function which allows us to count correct inputs \n  # our subjects made.\n  \n  n_count &lt;- function(df) {\n    df |&gt; select(matches(\"^noun\")) |&gt; as.matrix() -&gt; s\n    df |&gt; select(matches(\"^resp\")) |&gt; as.matrix() -&gt; r\n    a &lt;- vector(mode = \"numeric\", length = 16L)\n    for (i in 1:16) {\n      a[i] &lt;- sum(r[i, ] %in% s[i, ])\n    }\n    return(a)\n  }\n  \n  if (\"mouse_MSe.time\" %in% colnames(d)) {\n    \n    d |&gt; select(\n      matches(\"^noun\"),\n      matches(\"resp\\\\d\\\\.text$\"),\n      \"mouse_MSe.time\"\n    ) |&gt;\n      filter_at(vars(paste0(\"noun\", 1:3)), all_vars(!is.na(.))) |&gt;\n      filter_at(vars(paste0(\"noun\", 4:7)), all_vars(is.na(.))) |&gt;\n      mutate(task = \"MS\",\n             level = \"easy\") |&gt;\n      rename(\n        \"resp1\" = resp1.text,\n        \"resp2\" = resp2.text,\n        \"resp3\" = resp3.text,\n        \"rt\" = \"mouse_MSe.time\"\n      ) |&gt;\n      select(-c(paste0(\"noun\", 4:7))) -&gt; MS_easy\n    \n    d |&gt; select(\n      matches(\"^noun\"),\n      matches(\"MSm.text$\"),\n      \"mouse_MSm.time\"\n    ) |&gt;\n      filter_at(vars(paste0(\"noun\", 4:5)), all_vars(!is.na(.))) |&gt;\n      filter_at(vars(paste0(\"noun\", 6:7)), all_vars(is.na(.))) |&gt;\n      mutate(task = \"MS\",\n             level = \"medium\") |&gt; \n      rename(\"rt\" = \"mouse_MSm.time\") |&gt;\n      rename_with(.fn = str_replace_all, \n                  pattern = \"_MSm\\\\.text\", \n                  replacement = \"\") |&gt; \n      select(-noun6, -noun7) -&gt; MS_medium\n    \n    \n    d |&gt; select(\n      matches(\"^noun\"),\n      matches(\"MSh.text$\"),\n      \"mouse_MSh.time\"\n    ) |&gt;\n      filter_at(vars(paste0(\"noun\", 1:7)), all_vars(!is.na(.))) |&gt;\n      mutate(task = \"MS\",\n             level = \"hard\") |&gt;\n      rename(\"rt\" = \"mouse_MSh.time\") |&gt; \n      rename_with(.fn = str_replace_all,\n                  pattern = \"_MSh\\\\.text\",\n                  replacement = \"\") -&gt; MS_hard\n    \n  } else {\n    \n    d |&gt; select(matches(\"^noun\"),\n                matches(\"resp\\\\d\\\\.text$\")) |&gt;\n      filter_at(vars(paste0(\"noun\", 1:3)), all_vars(!is.na(.))) |&gt;\n      filter_at(vars(paste0(\"noun\", 4:7)), all_vars(is.na(.))) |&gt;\n      mutate(task = \"MS\",\n             level = \"easy\",\n             rt = NA) |&gt;\n      rename(\n        \"resp1\" = resp1.text,\n        \"resp2\" = resp2.text,\n        \"resp3\" = resp3.text\n      ) |&gt;\n      select(-c(paste0(\"noun\", 4:7))) -&gt; MS_easy\n    \n    d |&gt; select(matches(\"^noun\"),\n                matches(\"MSm.text$\")) |&gt;\n      filter_at(vars(paste0(\"noun\", 4:5)), all_vars(!is.na(.))) |&gt;\n      filter_at(vars(paste0(\"noun\", 6:7)), all_vars(is.na(.))) |&gt;\n      mutate(task = \"MS\",\n             level = \"medium\",\n             rt = NA) |&gt;\n      rename_with(.fn = str_replace_all,\n                  pattern = \"_MSm\\\\.text\",\n                  replacement = \"\") |&gt; \n      select(-noun6, -noun7) -&gt; MS_medium\n    \n    \n    d |&gt; select(matches(\"^noun\"),\n                matches(\"MSh.text$\")) |&gt;\n      filter_at(vars(paste0(\"noun\", 1:7)), all_vars(!is.na(.))) |&gt;\n      mutate(task = \"MS\",\n             level = \"hard\",\n             rt = NA) |&gt;\n      rename_with(.fn = str_replace_all,\n                  pattern = \"_MSh\\\\.text\", \n                  replacement = \"\") -&gt; MS_hard\n  }\n  \n  tibble(\n    #id = MS_easy$id[1],\n    trials = 1:16,\n    MS_easy_n = n_count(MS_easy),\n    MS_easy_rt = MS_easy$rt,\n    MS_medium_n = n_count(MS_medium),\n    MS_medium_rt = MS_medium$rt,\n    MS_hard_n = n_count(MS_hard),\n    MS_hard_rt = MS_hard$rt\n  ) |&gt;\n    pivot_longer(cols = -c(\"trials\"), values_to = \"value\") |&gt;\n    separate(name, c(\"task\", \"level\", \"name\")) |&gt;\n    pivot_wider(values_from = value, names_from = name) |&gt;\n    mutate(acc = ifelse(level == \"easy\", n / 3,\n                        ifelse(\n                          level == \"medium\", n / 5,\n                          ifelse(level == \"hard\", n / 7, NA)\n                        ))) -&gt; MS\n  \n  return(MS)\n  \n}\n\nnasatlx_preproc &lt;- function(d) {\n  d |&gt; select(slider.response,\n              head,\n              task_type,\n              task_level) |&gt;\n    filter_at(vars(head, task_type, task_level), all_vars(!is.na(.))) |&gt;\n    rename(\"score\" = slider.response) |&gt;\n    mutate(\n      scale = recode(\n        head,\n        \"Умственная нагрузка\" = \"ME\",\n        \"Физическая нагрузка\" = \"PH\",\n        \"Давление времени\" = \"TI\",\n        \"Успешность выполнения\" = \"PE\",\n        \"Усилия\" = \"EF\",\n        \"Уровень фрустрации\" = \"FR\"\n      ),\n      task = recode(\n        task_type,\n        \"mental_rotation\" = \"MR\",\n        \"sternberg\" = \"ST\",\n        \"mental_span\" = \"MS\"\n      ),\n      level = recode(\n        task_level,\n        \"1\" = \"easy\",\n        \"2\" = \"medium\",\n        \"3\" = \"hard\"\n      )\n    ) |&gt;\n    select(scale, score, task, level) -&gt; NASATLX\n  \n  return(NASATLX)\n}\n\n# sequence_preproc &lt;- function(d) {\n#   \n#   d |&gt; select(\n#     E_rotation,\n#     M_rotation,\n#     H_rotation,\n#     E_Sternberg,\n#     M_Sternberg,\n#     H_Sternberg,\n#     E_span,\n#     M_span,\n#     H_span\n#   ) |&gt;\n#     drop_na() |&gt;\n#     sapply(function(x) which(x == 1)) -&gt; v \n#   \n#   tibble(name = names(v),\n#          order = v,\n#          id = d[[\"Индивидуальный_код\"]][1]) |&gt;\n#     arrange(order) |&gt;\n#     separate(name, c(\"level\", \"task\"), \"_\") |&gt;\n#     mutate(\n#       task = recode(\n#         task,\n#         \"rotation\" = \"MR\",\n#         \"Sternberg\" = \"ST\",\n#         \"span\" = \"MS\"\n#       ),\n#       level = recode(\n#         level,\n#         \"E\" = \"easy\",\n#         \"M\" = \"medium\",\n#         \"H\" = \"hard\"\n#       )\n#     ) -&gt; SEQUENCE\n#   \n#   return(SEQUENCE)\n#   \n# }\n\n\n\n\nTo compare\n\nread_csv(\"MR_firstbanch_data_agg.csv\") -&gt; MR_fb_agg\n\nRows: 234 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): id, level, task\ndbl (2): rt, acc\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nread_csv(\"MS_firstbanch_data_agg.csv\") -&gt; MS_fb_agg\n\nRows: 234 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): id, level, task\ndbl (2): rt, acc\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nread_csv(\"ST_firstbanch_data_agg.csv\") -&gt; ST_fb_agg\n\nRows: 234 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): id, level, task\ndbl (2): rt, acc\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n\n\nfiles &lt;- paste0(\"../data-toloka/banch1/\", dir(\"../data-toloka/banch1\"))\n\n\nMR_data &lt;- tibble()\nST_data &lt;- tibble()\nMS_data &lt;- tibble()\nNASATLX_data &lt;- tibble()\n#SEQUENCE_data &lt;- tibble()\n\n\nfor (i in 1:length(files)) {\n  \n  print(files[i])\n  \n  d &lt;- read_csv(files[i], show_col_types = FALSE)\n  \n  MR_data |&gt; bind_rows(mr_preproc(d) |&gt; mutate(file = files[i])) -&gt; MR_data\n  ST_data |&gt; bind_rows(st_preproc(d) |&gt; mutate(file = files[i])) -&gt; ST_data\n  MS_data |&gt; bind_rows(ms_preproc(d) |&gt; mutate(file = files[i])) -&gt; MS_data\n  NASATLX_data |&gt; bind_rows(nasatlx_preproc(d) |&gt; mutate(file = files[i])) -&gt; NASATLX_data\n  #SEQUENCE_data |&gt; bind_rows(sequence_preproc(d)) -&gt; SEQUENCE_data\n  \n}\n\n[1] \"../data-toloka/banch1/365de3d587a6051d9066b869baebe6e2_toloka_2023-07-18_16h41.40.855.csv\"\n[1] \"../data-toloka/banch1/6af6b02e8c1c6bd3a161eb57c5e15aec_toloka_2023-07-18_16h45.12.214.csv\"\n[1] \"../data-toloka/banch1/BM1907_toloka_2023-07-19_12h24.59.648.csv\"\n[1] \"../data-toloka/banch1/EK_87c83102d38e143f82f3ee0ba479365c_toloka_2023-07-19_10h44.00.598.csv\"\n[1] \"../data-toloka/banch1/ОВ1907_toloka_2023-07-19_10h50.37.778.csv\"\n\n\n\n# MR_data |&gt; write_csv(\"mentral_rotation_data_toloka.csv\")\n# ST_data |&gt; write_csv(\"sternberg_data_toloka.csv\")\n# MS_data |&gt; write_csv(\"mental_span_data_toloka.csv\")\n# NASATLX_data |&gt; write_csv(\"nasa_tlx_data_toloka.csv\")\n# SEQUENCE_data |&gt; write_csv(\"sequence_data_toloka.csv\")\n\n\nMR_data |&gt; \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  facet_wrap(~ file) +\n  labs(title = \"MR\")\n\n\n\n\n\nMR_data |&gt; \n  ggplot() +\n  stat_summary(data = MR_fb_agg,\n               aes(level, acc),\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(aes(level, is_correct), fun = mean, geom = \"point\") +\n  facet_wrap(~ file) +\n  labs(title = \"MR\")\n\n\n\n\n\nMS_data |&gt; \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MS_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  facet_wrap(~ file) +\n  labs(title = \"MS\")\n\nWarning: Removed 360 rows containing non-finite values (`stat_summary()`).\n\n\n\n\n\n\nMS_data |&gt; \n  ggplot(aes(level, acc)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun = mean, geom = \"point\") +\n  facet_wrap(~ file) +\n  labs(title = \"MS\")\n\n\n\n\n\nST_data |&gt; \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  facet_wrap(~ file) +\n  labs(title = \"ST\")\n\n\n\n\n\nST_data |&gt; \n  ggplot() +\n  stat_summary(data = MR_fb_agg,\n               aes(level, acc),\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(aes(level, is_correct),\n               fun = mean, geom = \"point\") +\n  facet_wrap(~ file) +\n  labs(title = \"ST\")\n\n\n\n\n\n\n\n\nfiles &lt;- paste0(\"../data-toloka/banch2/\", dir(\"../data-toloka/banch2\"))\n\n\nMR_data &lt;- tibble()\nST_data &lt;- tibble()\nMS_data &lt;- tibble()\nNASATLX_data &lt;- tibble()\n#SEQUENCE_data &lt;- tibble()\n\n\nfor (i in 1:length(files)) {\n  \n  print(files[i])\n  \n  d &lt;- read_csv(files[i], show_col_types = FALSE)\n  \n  MR_data |&gt; bind_rows(mr_preproc(d) |&gt; mutate(file = files[i])) -&gt; MR_data\n  ST_data |&gt; bind_rows(st_preproc(d) |&gt; mutate(file = files[i])) -&gt; ST_data\n  MS_data |&gt; bind_rows(ms_preproc(d) |&gt; mutate(file = files[i])) -&gt; MS_data\n  NASATLX_data |&gt; bind_rows(nasatlx_preproc(d) |&gt; mutate(file = files[i])) -&gt; NASATLX_data\n  #SEQUENCE_data |&gt; bind_rows(sequence_preproc(d)) -&gt; SEQUENCE_data\n  \n}\n\n[1] \"../data-toloka/banch2/22.12.1976_toloka_2023-07-20_13h46.18.948.csv\"\n[1] \"../data-toloka/banch2/AA1907_toloka_2023-07-19_18h28.35.931.csv\"\n[1] \"../data-toloka/banch2/AS1907_toloka_2023-07-19_16h28.42.052.csv\"\n[1] \"../data-toloka/banch2/AT1907_toloka_2023-07-19_21h02.24.635.csv\"\n[1] \"../data-toloka/banch2/EA19.07.2023_toloka_2023-07-19_15h45.55.420.csv\"\n[1] \"../data-toloka/banch2/ES1907_toloka_2023-07-19_23h27.32.195.csv\"\n[1] \"../data-toloka/banch2/GV1907_toloka_2023-07-19_16h56.45.263.csv\"\n[1] \"../data-toloka/banch2/MA1907_toloka_2023-07-19_16h56.11.966.csv\"\n[1] \"../data-toloka/banch2/tolkacheva_toloka_2023-07-19_17h00.04.319.csv\"\n[1] \"../data-toloka/banch2/VG1907_toloka_2023-07-19_16h28.02.926.csv\"\n[1] \"../data-toloka/banch2/VN1907_toloka_2023-07-19_16h30.33.286.csv\"\n\n\n\n# MR_data |&gt; write_csv(\"mentral_rotation_data_toloka.csv\")\n# ST_data |&gt; write_csv(\"sternberg_data_toloka.csv\")\n# MS_data |&gt; write_csv(\"mental_span_data_toloka.csv\")\n# NASATLX_data |&gt; write_csv(\"nasa_tlx_data_toloka.csv\")\n# SEQUENCE_data |&gt; write_csv(\"sequence_data_toloka.csv\")\n\n\nMR_data |&gt; \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  facet_wrap(~ file) +\n  labs(title = \"MR\")\n\n\n\n\n\nMR_data |&gt; \n  ggplot() +\n  stat_summary(data = MR_fb_agg,\n               aes(level, acc),\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(aes(level, is_correct), fun = mean, geom = \"point\") +\n  facet_wrap(~ file) +\n  labs(title = \"MR\")\n\n\n\n\n\nMS_data |&gt; \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MS_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  facet_wrap(~ file) +\n  labs(title = \"MS\")\n\nWarning: Removed 792 rows containing non-finite values (`stat_summary()`).\n\n\n\n\n\n\nMS_data |&gt; \n  ggplot(aes(level, acc)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun = mean, geom = \"point\") +\n  facet_wrap(~ file) +\n  labs(title = \"MS\")\n\n\n\n\n\nST_data |&gt; \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  facet_wrap(~ file) +\n  labs(title = \"ST\")\n\n\n\n\n\nST_data |&gt; \n  ggplot() +\n  stat_summary(data = MR_fb_agg,\n               aes(level, acc),\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(aes(level, is_correct),\n               fun = mean, geom = \"point\") +\n  facet_wrap(~ file) +\n  labs(title = \"ST\")\n\n\n\n\n\n\n\n\nfiles &lt;- c(\n  paste0(\"../data-toloka/banch1/\", dir(\"../data-toloka/banch1\")),\n  paste0(\"../data-toloka/banch2/\", dir(\"../data-toloka/banch2\"))\n)\n\n\nMR_data &lt;- tibble()\nST_data &lt;- tibble()\nMS_data &lt;- tibble()\nNASATLX_data &lt;- tibble()\n#SEQUENCE_data &lt;- tibble()\n\n\nfor (i in 1:length(files)) {\n  \n  print(files[i])\n  \n  d &lt;- read_csv(files[i], show_col_types = FALSE)\n  \n  MR_data |&gt; bind_rows(mr_preproc(d) |&gt; mutate(file = files[i])) -&gt; MR_data\n  ST_data |&gt; bind_rows(st_preproc(d) |&gt; mutate(file = files[i])) -&gt; ST_data\n  MS_data |&gt; bind_rows(ms_preproc(d) |&gt; mutate(file = files[i])) -&gt; MS_data\n  NASATLX_data |&gt; bind_rows(nasatlx_preproc(d) |&gt; mutate(file = files[i])) -&gt; NASATLX_data\n  #SEQUENCE_data |&gt; bind_rows(sequence_preproc(d)) -&gt; SEQUENCE_data\n  \n}\n\n[1] \"../data-toloka/banch1/365de3d587a6051d9066b869baebe6e2_toloka_2023-07-18_16h41.40.855.csv\"\n[1] \"../data-toloka/banch1/6af6b02e8c1c6bd3a161eb57c5e15aec_toloka_2023-07-18_16h45.12.214.csv\"\n[1] \"../data-toloka/banch1/BM1907_toloka_2023-07-19_12h24.59.648.csv\"\n[1] \"../data-toloka/banch1/EK_87c83102d38e143f82f3ee0ba479365c_toloka_2023-07-19_10h44.00.598.csv\"\n[1] \"../data-toloka/banch1/ОВ1907_toloka_2023-07-19_10h50.37.778.csv\"\n[1] \"../data-toloka/banch2/22.12.1976_toloka_2023-07-20_13h46.18.948.csv\"\n[1] \"../data-toloka/banch2/AA1907_toloka_2023-07-19_18h28.35.931.csv\"\n[1] \"../data-toloka/banch2/AS1907_toloka_2023-07-19_16h28.42.052.csv\"\n[1] \"../data-toloka/banch2/AT1907_toloka_2023-07-19_21h02.24.635.csv\"\n[1] \"../data-toloka/banch2/EA19.07.2023_toloka_2023-07-19_15h45.55.420.csv\"\n[1] \"../data-toloka/banch2/ES1907_toloka_2023-07-19_23h27.32.195.csv\"\n[1] \"../data-toloka/banch2/GV1907_toloka_2023-07-19_16h56.45.263.csv\"\n[1] \"../data-toloka/banch2/MA1907_toloka_2023-07-19_16h56.11.966.csv\"\n[1] \"../data-toloka/banch2/tolkacheva_toloka_2023-07-19_17h00.04.319.csv\"\n[1] \"../data-toloka/banch2/VG1907_toloka_2023-07-19_16h28.02.926.csv\"\n[1] \"../data-toloka/banch2/VN1907_toloka_2023-07-19_16h30.33.286.csv\"\n\n\n\n# MR_data |&gt; write_csv(\"mentral_rotation_data_toloka.csv\")\n# ST_data |&gt; write_csv(\"sternberg_data_toloka.csv\")\n# MS_data |&gt; write_csv(\"mental_span_data_toloka.csv\")\n# NASATLX_data |&gt; write_csv(\"nasa_tlx_data_toloka.csv\")\n# SEQUENCE_data |&gt; write_csv(\"sequence_data_toloka.csv\")\n\n\nMR_data |&gt; \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"MR\")\n\n\n\n\n\nMR_data |&gt; \n  ggplot() +\n  stat_summary(data = MR_fb_agg,\n               aes(level, acc),\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(aes(level, is_correct), fun = mean, geom = \"point\") +\n  labs(title = \"MR\")\n\n\n\n\n\nMS_data |&gt; \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MS_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"MS\")\n\nWarning: Removed 72 rows containing non-finite values (`stat_summary()`).\n\n\n\n\n\n\nMS_data |&gt; \n  ggplot(aes(level, acc)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun = mean, geom = \"point\") +\n  labs(title = \"MS\")\n\n\n\n\n\nST_data |&gt; \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"ST\")\n\n\n\n\n\nST_data |&gt; \n  ggplot() +\n  stat_summary(data = MR_fb_agg,\n               aes(level, acc),\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(aes(level, is_correct),\n               fun = mean, geom = \"point\") +\n  labs(title = \"ST\")"
  },
  {
    "objectID": "toloka-explore.html#packages",
    "href": "toloka-explore.html#packages",
    "title": "Yandex.Toloka Data Exploration",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\ntheme_set(theme_bw())\n\n\nrm(list=ls())\n\n\nmr_preproc &lt;- function(d) {\n  \n  require(tidyverse)\n  \n  d |&gt; select(\n    # select columns we need\n    correctAns,\n    base_pic,\n    rotated_pic,\n    resp_MR_easy.keys,\n    resp_MR_easy.corr,\n    resp_MR_easy.rt\n  ) |&gt;\n    drop_na() |&gt; # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"MR\",\n           # add task name (mental rotation)\n           level = \"easy\",\n           # add difficulty level\n           trial = 1:16) |&gt; # number trials\n    rename(\n      # rename columns for handy usage\n      \"key\" = resp_MR_easy.keys,\n      \"is_correct\" = resp_MR_easy.corr,\n      \"rt\" = resp_MR_easy.rt\n    ) -&gt; MR_easy # ready to use\n  \n  \n  d |&gt; select(\n    # select columns we need\n    correctAns,\n    base_pic,\n    rotated_pic,\n    resp_MR_medium.keys,\n    resp_MR_medium.corr,\n    resp_MR_medium.rt\n  ) |&gt;\n    drop_na() |&gt; # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"MR\",\n           # add task name (mental rotation)\n           level = \"medium\",\n           # add difficulty level\n           trial = 1:16) |&gt;  # number trials\n    rename(\n      # rename columns for handy usage\n      \"key\" = resp_MR_medium.keys,\n      \"is_correct\" = resp_MR_medium.corr,\n      \"rt\" = resp_MR_medium.rt\n    ) -&gt; MR_medium # ready to use\n  \n  \n  \n  d |&gt; select(\n    # select columns we need\n    correctAns,\n    base_pic,\n    rotated_pic,\n    resp_MR_hard.keys,\n    resp_MR_hard.corr,\n    resp_MR_hard.rt\n  ) |&gt;\n    drop_na() |&gt; # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"MR\",\n           # add task name (mental rotation)\n           level = \"hard\",\n           # add difficulty level\n           trial = 1:16) |&gt; # number trials\n    rename(\n      # rename columns for handy usage\n      \"key\" = resp_MR_hard.keys,\n      \"is_correct\" = resp_MR_hard.corr,\n      \"rt\" = resp_MR_hard.rt\n    ) -&gt; MR_hard # ready to use\n  \n  # bind all conditions of mental rotation task to one tibble\n  \n  bind_rows(MR_easy, MR_medium, MR_hard) -&gt; MR\n  \n  return(MR)\n  \n}\n\nst_preproc &lt;- function(d) {\n  \n  require(tidyverse)\n  \n  d |&gt; select(\n    # select columns we need\n    target_present,\n    key_resp_SE.keys,\n    key_resp_SE.corr,\n    key_resp_SE.rt\n  ) |&gt;\n    drop_na() |&gt; # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"ST\",\n           # add task name (Sternberg task)\n           level = \"easy\",\n           # add difficulty level\n           trial = 1:16) |&gt; # number trials\n    rename(\n      # rename columns for handy usage\n      \"key\" = key_resp_SE.keys,\n      \"is_correct\" = key_resp_SE.corr,\n      \"rt\" = key_resp_SE.rt\n    ) -&gt; ST_easy # ready to use\n  \n  d |&gt; select(\n    # select columns we need\n    target_present,\n    key_resp_SM.keys,\n    key_resp_SM.corr,\n    key_resp_SM.rt\n  ) |&gt;\n    drop_na() |&gt; # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"ST\",\n           # add task name (Sternberg task)\n           level = \"medium\",\n           # add difficulty level\n           trial = 1:16) |&gt; # number trials\n    rename(\n      # rename columns for handy usage\n      \"key\" = key_resp_SM.keys,\n      \"is_correct\" = key_resp_SM.corr,\n      \"rt\" = key_resp_SM.rt\n    ) -&gt; ST_medium # ready to use\n  \n  \n  d |&gt; select(\n    # select columns we need\n    target_present,\n    resp_S_H_trials.keys,\n    resp_S_H_trials.corr,\n    resp_S_H_trials.rt\n  ) |&gt;\n    drop_na() |&gt; # remove technical NAs (recording artefacts, not missing data)\n    mutate(task = \"ST\",\n           # add task name (Sternberg task)\n           level = \"hard\",\n           # add difficulty level\n           trial = 1:16) |&gt; # number trials\n    rename(\n      # rename columns for handy usage\n      \"key\" = resp_S_H_trials.keys,\n      \"is_correct\" = resp_S_H_trials.corr,\n      \"rt\" = resp_S_H_trials.rt\n    ) -&gt; ST_hard # ready to use\n  \n  # bind all conditions of sternberg task to one tibble\n  bind_rows(ST_easy, ST_hard, ST_medium) -&gt; ST\n  \n  return(ST)\n  \n}\n\nms_preproc &lt;- function(d) {\n  \n  # Since we our participants could fill the fields in any order, \n  # here is a function which allows us to count correct inputs \n  # our subjects made.\n  \n  n_count &lt;- function(df) {\n    df |&gt; select(matches(\"^noun\")) |&gt; as.matrix() -&gt; s\n    df |&gt; select(matches(\"^resp\")) |&gt; as.matrix() -&gt; r\n    a &lt;- vector(mode = \"numeric\", length = 16L)\n    for (i in 1:16) {\n      a[i] &lt;- sum(r[i, ] %in% s[i, ])\n    }\n    return(a)\n  }\n  \n  if (\"mouse_MSe.time\" %in% colnames(d)) {\n    \n    d |&gt; select(\n      matches(\"^noun\"),\n      matches(\"resp\\\\d\\\\.text$\"),\n      \"mouse_MSe.time\"\n    ) |&gt;\n      filter_at(vars(paste0(\"noun\", 1:3)), all_vars(!is.na(.))) |&gt;\n      filter_at(vars(paste0(\"noun\", 4:7)), all_vars(is.na(.))) |&gt;\n      mutate(task = \"MS\",\n             level = \"easy\") |&gt;\n      rename(\n        \"resp1\" = resp1.text,\n        \"resp2\" = resp2.text,\n        \"resp3\" = resp3.text,\n        \"rt\" = \"mouse_MSe.time\"\n      ) |&gt;\n      select(-c(paste0(\"noun\", 4:7))) -&gt; MS_easy\n    \n    d |&gt; select(\n      matches(\"^noun\"),\n      matches(\"MSm.text$\"),\n      \"mouse_MSm.time\"\n    ) |&gt;\n      filter_at(vars(paste0(\"noun\", 4:5)), all_vars(!is.na(.))) |&gt;\n      filter_at(vars(paste0(\"noun\", 6:7)), all_vars(is.na(.))) |&gt;\n      mutate(task = \"MS\",\n             level = \"medium\") |&gt; \n      rename(\"rt\" = \"mouse_MSm.time\") |&gt;\n      rename_with(.fn = str_replace_all, \n                  pattern = \"_MSm\\\\.text\", \n                  replacement = \"\") |&gt; \n      select(-noun6, -noun7) -&gt; MS_medium\n    \n    \n    d |&gt; select(\n      matches(\"^noun\"),\n      matches(\"MSh.text$\"),\n      \"mouse_MSh.time\"\n    ) |&gt;\n      filter_at(vars(paste0(\"noun\", 1:7)), all_vars(!is.na(.))) |&gt;\n      mutate(task = \"MS\",\n             level = \"hard\") |&gt;\n      rename(\"rt\" = \"mouse_MSh.time\") |&gt; \n      rename_with(.fn = str_replace_all,\n                  pattern = \"_MSh\\\\.text\",\n                  replacement = \"\") -&gt; MS_hard\n    \n  } else {\n    \n    d |&gt; select(matches(\"^noun\"),\n                matches(\"resp\\\\d\\\\.text$\")) |&gt;\n      filter_at(vars(paste0(\"noun\", 1:3)), all_vars(!is.na(.))) |&gt;\n      filter_at(vars(paste0(\"noun\", 4:7)), all_vars(is.na(.))) |&gt;\n      mutate(task = \"MS\",\n             level = \"easy\",\n             rt = NA) |&gt;\n      rename(\n        \"resp1\" = resp1.text,\n        \"resp2\" = resp2.text,\n        \"resp3\" = resp3.text\n      ) |&gt;\n      select(-c(paste0(\"noun\", 4:7))) -&gt; MS_easy\n    \n    d |&gt; select(matches(\"^noun\"),\n                matches(\"MSm.text$\")) |&gt;\n      filter_at(vars(paste0(\"noun\", 4:5)), all_vars(!is.na(.))) |&gt;\n      filter_at(vars(paste0(\"noun\", 6:7)), all_vars(is.na(.))) |&gt;\n      mutate(task = \"MS\",\n             level = \"medium\",\n             rt = NA) |&gt;\n      rename_with(.fn = str_replace_all,\n                  pattern = \"_MSm\\\\.text\",\n                  replacement = \"\") |&gt; \n      select(-noun6, -noun7) -&gt; MS_medium\n    \n    \n    d |&gt; select(matches(\"^noun\"),\n                matches(\"MSh.text$\")) |&gt;\n      filter_at(vars(paste0(\"noun\", 1:7)), all_vars(!is.na(.))) |&gt;\n      mutate(task = \"MS\",\n             level = \"hard\",\n             rt = NA) |&gt;\n      rename_with(.fn = str_replace_all,\n                  pattern = \"_MSh\\\\.text\", \n                  replacement = \"\") -&gt; MS_hard\n  }\n  \n  tibble(\n    #id = MS_easy$id[1],\n    trials = 1:16,\n    MS_easy_n = n_count(MS_easy),\n    MS_easy_rt = MS_easy$rt,\n    MS_medium_n = n_count(MS_medium),\n    MS_medium_rt = MS_medium$rt,\n    MS_hard_n = n_count(MS_hard),\n    MS_hard_rt = MS_hard$rt\n  ) |&gt;\n    pivot_longer(cols = -c(\"trials\"), values_to = \"value\") |&gt;\n    separate(name, c(\"task\", \"level\", \"name\")) |&gt;\n    pivot_wider(values_from = value, names_from = name) |&gt;\n    mutate(acc = ifelse(level == \"easy\", n / 3,\n                        ifelse(\n                          level == \"medium\", n / 5,\n                          ifelse(level == \"hard\", n / 7, NA)\n                        ))) -&gt; MS\n  \n  return(MS)\n  \n}\n\nnasatlx_preproc &lt;- function(d) {\n  d |&gt; select(slider.response,\n              head,\n              task_type,\n              task_level) |&gt;\n    filter_at(vars(head, task_type, task_level), all_vars(!is.na(.))) |&gt;\n    rename(\"score\" = slider.response) |&gt;\n    mutate(\n      scale = recode(\n        head,\n        \"Умственная нагрузка\" = \"ME\",\n        \"Физическая нагрузка\" = \"PH\",\n        \"Давление времени\" = \"TI\",\n        \"Успешность выполнения\" = \"PE\",\n        \"Усилия\" = \"EF\",\n        \"Уровень фрустрации\" = \"FR\"\n      ),\n      task = recode(\n        task_type,\n        \"mental_rotation\" = \"MR\",\n        \"sternberg\" = \"ST\",\n        \"mental_span\" = \"MS\"\n      ),\n      level = recode(\n        task_level,\n        \"1\" = \"easy\",\n        \"2\" = \"medium\",\n        \"3\" = \"hard\"\n      )\n    ) |&gt;\n    select(scale, score, task, level) -&gt; NASATLX\n  \n  return(NASATLX)\n}\n\n# sequence_preproc &lt;- function(d) {\n#   \n#   d |&gt; select(\n#     E_rotation,\n#     M_rotation,\n#     H_rotation,\n#     E_Sternberg,\n#     M_Sternberg,\n#     H_Sternberg,\n#     E_span,\n#     M_span,\n#     H_span\n#   ) |&gt;\n#     drop_na() |&gt;\n#     sapply(function(x) which(x == 1)) -&gt; v \n#   \n#   tibble(name = names(v),\n#          order = v,\n#          id = d[[\"Индивидуальный_код\"]][1]) |&gt;\n#     arrange(order) |&gt;\n#     separate(name, c(\"level\", \"task\"), \"_\") |&gt;\n#     mutate(\n#       task = recode(\n#         task,\n#         \"rotation\" = \"MR\",\n#         \"Sternberg\" = \"ST\",\n#         \"span\" = \"MS\"\n#       ),\n#       level = recode(\n#         level,\n#         \"E\" = \"easy\",\n#         \"M\" = \"medium\",\n#         \"H\" = \"hard\"\n#       )\n#     ) -&gt; SEQUENCE\n#   \n#   return(SEQUENCE)\n#   \n# }"
  },
  {
    "objectID": "toloka-explore.html#banch-2",
    "href": "toloka-explore.html#banch-2",
    "title": "Yandex.Toloka Data Exploration",
    "section": "",
    "text": "files &lt;- paste0(\"../data-toloka/banch2/\", dir(\"../data-toloka/banch2\"))\n\n\nMR_data &lt;- tibble()\nST_data &lt;- tibble()\nMS_data &lt;- tibble()\nNASATLX_data &lt;- tibble()\n#SEQUENCE_data &lt;- tibble()\n\n\nfor (i in 1:length(files)) {\n  \n  print(files[i])\n  \n  d &lt;- read_csv(files[i], show_col_types = FALSE)\n  \n  MR_data |&gt; bind_rows(mr_preproc(d) |&gt; mutate(file = files[i])) -&gt; MR_data\n  ST_data |&gt; bind_rows(st_preproc(d) |&gt; mutate(file = files[i])) -&gt; ST_data\n  MS_data |&gt; bind_rows(ms_preproc(d) |&gt; mutate(file = files[i])) -&gt; MS_data\n  NASATLX_data |&gt; bind_rows(nasatlx_preproc(d) |&gt; mutate(file = files[i])) -&gt; NASATLX_data\n  #SEQUENCE_data |&gt; bind_rows(sequence_preproc(d)) -&gt; SEQUENCE_data\n  \n}\n\n[1] \"../data-toloka/banch2/22.12.1976_toloka_2023-07-20_13h46.18.948.csv\"\n[1] \"../data-toloka/banch2/AA1907_toloka_2023-07-19_18h28.35.931.csv\"\n[1] \"../data-toloka/banch2/AS1907_toloka_2023-07-19_16h28.42.052.csv\"\n[1] \"../data-toloka/banch2/AT1907_toloka_2023-07-19_21h02.24.635.csv\"\n[1] \"../data-toloka/banch2/EA19.07.2023_toloka_2023-07-19_15h45.55.420.csv\"\n[1] \"../data-toloka/banch2/ES1907_toloka_2023-07-19_23h27.32.195.csv\"\n[1] \"../data-toloka/banch2/GV1907_toloka_2023-07-19_16h56.45.263.csv\"\n[1] \"../data-toloka/banch2/MA1907_toloka_2023-07-19_16h56.11.966.csv\"\n[1] \"../data-toloka/banch2/tolkacheva_toloka_2023-07-19_17h00.04.319.csv\"\n[1] \"../data-toloka/banch2/VG1907_toloka_2023-07-19_16h28.02.926.csv\"\n[1] \"../data-toloka/banch2/VN1907_toloka_2023-07-19_16h30.33.286.csv\"\n\n\n\n# MR_data |&gt; write_csv(\"mentral_rotation_data_toloka.csv\")\n# ST_data |&gt; write_csv(\"sternberg_data_toloka.csv\")\n# MS_data |&gt; write_csv(\"mental_span_data_toloka.csv\")\n# NASATLX_data |&gt; write_csv(\"nasa_tlx_data_toloka.csv\")\n# SEQUENCE_data |&gt; write_csv(\"sequence_data_toloka.csv\")\n\n\nMR_data |&gt; \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  facet_wrap(~ file) +\n  labs(title = \"MR\")\n\n\n\n\n\nMR_data |&gt; \n  ggplot() +\n  stat_summary(data = MR_fb_agg,\n               aes(level, acc),\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(aes(level, is_correct), fun = mean, geom = \"point\") +\n  facet_wrap(~ file) +\n  labs(title = \"MR\")\n\n\n\n\n\nMS_data |&gt; \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MS_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  facet_wrap(~ file) +\n  labs(title = \"MS\")\n\nWarning: Removed 792 rows containing non-finite values (`stat_summary()`).\n\n\n\n\n\n\nMS_data |&gt; \n  ggplot(aes(level, acc)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun = mean, geom = \"point\") +\n  facet_wrap(~ file) +\n  labs(title = \"MS\")\n\n\n\n\n\nST_data |&gt; \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  facet_wrap(~ file) +\n  labs(title = \"ST\")\n\n\n\n\n\nST_data |&gt; \n  ggplot() +\n  stat_summary(data = MR_fb_agg,\n               aes(level, acc),\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(aes(level, is_correct),\n               fun = mean, geom = \"point\") +\n  facet_wrap(~ file) +\n  labs(title = \"ST\")"
  },
  {
    "objectID": "toloka-explore.html#load-fistbanch-data",
    "href": "toloka-explore.html#load-fistbanch-data",
    "title": "Yandex.Toloka Data Exploration",
    "section": "",
    "text": "To compare\n\nread_csv(\"MR_firstbanch_data_agg.csv\") -&gt; MR_fb_agg\n\nRows: 234 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): id, level, task\ndbl (2): rt, acc\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nread_csv(\"MS_firstbanch_data_agg.csv\") -&gt; MS_fb_agg\n\nRows: 234 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): id, level, task\ndbl (2): rt, acc\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nread_csv(\"ST_firstbanch_data_agg.csv\") -&gt; ST_fb_agg\n\nRows: 234 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): id, level, task\ndbl (2): rt, acc\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "toloka-explore.html#banch-1",
    "href": "toloka-explore.html#banch-1",
    "title": "Yandex.Toloka Data Exploration",
    "section": "",
    "text": "files &lt;- paste0(\"../data-toloka/banch1/\", dir(\"../data-toloka/banch1\"))\n\n\nMR_data &lt;- tibble()\nST_data &lt;- tibble()\nMS_data &lt;- tibble()\nNASATLX_data &lt;- tibble()\n#SEQUENCE_data &lt;- tibble()\n\n\nfor (i in 1:length(files)) {\n  \n  print(files[i])\n  \n  d &lt;- read_csv(files[i], show_col_types = FALSE)\n  \n  MR_data |&gt; bind_rows(mr_preproc(d) |&gt; mutate(file = files[i])) -&gt; MR_data\n  ST_data |&gt; bind_rows(st_preproc(d) |&gt; mutate(file = files[i])) -&gt; ST_data\n  MS_data |&gt; bind_rows(ms_preproc(d) |&gt; mutate(file = files[i])) -&gt; MS_data\n  NASATLX_data |&gt; bind_rows(nasatlx_preproc(d) |&gt; mutate(file = files[i])) -&gt; NASATLX_data\n  #SEQUENCE_data |&gt; bind_rows(sequence_preproc(d)) -&gt; SEQUENCE_data\n  \n}\n\n[1] \"../data-toloka/banch1/365de3d587a6051d9066b869baebe6e2_toloka_2023-07-18_16h41.40.855.csv\"\n[1] \"../data-toloka/banch1/6af6b02e8c1c6bd3a161eb57c5e15aec_toloka_2023-07-18_16h45.12.214.csv\"\n[1] \"../data-toloka/banch1/BM1907_toloka_2023-07-19_12h24.59.648.csv\"\n[1] \"../data-toloka/banch1/EK_87c83102d38e143f82f3ee0ba479365c_toloka_2023-07-19_10h44.00.598.csv\"\n[1] \"../data-toloka/banch1/ОВ1907_toloka_2023-07-19_10h50.37.778.csv\"\n\n\n\n# MR_data |&gt; write_csv(\"mentral_rotation_data_toloka.csv\")\n# ST_data |&gt; write_csv(\"sternberg_data_toloka.csv\")\n# MS_data |&gt; write_csv(\"mental_span_data_toloka.csv\")\n# NASATLX_data |&gt; write_csv(\"nasa_tlx_data_toloka.csv\")\n# SEQUENCE_data |&gt; write_csv(\"sequence_data_toloka.csv\")\n\n\nMR_data |&gt; \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  facet_wrap(~ file) +\n  labs(title = \"MR\")\n\n\n\n\n\nMR_data |&gt; \n  ggplot() +\n  stat_summary(data = MR_fb_agg,\n               aes(level, acc),\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(aes(level, is_correct), fun = mean, geom = \"point\") +\n  facet_wrap(~ file) +\n  labs(title = \"MR\")\n\n\n\n\n\nMS_data |&gt; \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MS_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  facet_wrap(~ file) +\n  labs(title = \"MS\")\n\nWarning: Removed 360 rows containing non-finite values (`stat_summary()`).\n\n\n\n\n\n\nMS_data |&gt; \n  ggplot(aes(level, acc)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun = mean, geom = \"point\") +\n  facet_wrap(~ file) +\n  labs(title = \"MS\")\n\n\n\n\n\nST_data |&gt; \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  facet_wrap(~ file) +\n  labs(title = \"ST\")\n\n\n\n\n\nST_data |&gt; \n  ggplot() +\n  stat_summary(data = MR_fb_agg,\n               aes(level, acc),\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(aes(level, is_correct),\n               fun = mean, geom = \"point\") +\n  facet_wrap(~ file) +\n  labs(title = \"ST\")"
  },
  {
    "objectID": "toloka-explore.html#banch-1-banch-2-together",
    "href": "toloka-explore.html#banch-1-banch-2-together",
    "title": "Yandex.Toloka Data Exploration",
    "section": "",
    "text": "files &lt;- c(\n  paste0(\"../data-toloka/banch1/\", dir(\"../data-toloka/banch1\")),\n  paste0(\"../data-toloka/banch2/\", dir(\"../data-toloka/banch2\"))\n)\n\n\nMR_data &lt;- tibble()\nST_data &lt;- tibble()\nMS_data &lt;- tibble()\nNASATLX_data &lt;- tibble()\n#SEQUENCE_data &lt;- tibble()\n\n\nfor (i in 1:length(files)) {\n  \n  print(files[i])\n  \n  d &lt;- read_csv(files[i], show_col_types = FALSE)\n  \n  MR_data |&gt; bind_rows(mr_preproc(d) |&gt; mutate(file = files[i])) -&gt; MR_data\n  ST_data |&gt; bind_rows(st_preproc(d) |&gt; mutate(file = files[i])) -&gt; ST_data\n  MS_data |&gt; bind_rows(ms_preproc(d) |&gt; mutate(file = files[i])) -&gt; MS_data\n  NASATLX_data |&gt; bind_rows(nasatlx_preproc(d) |&gt; mutate(file = files[i])) -&gt; NASATLX_data\n  #SEQUENCE_data |&gt; bind_rows(sequence_preproc(d)) -&gt; SEQUENCE_data\n  \n}\n\n[1] \"../data-toloka/banch1/365de3d587a6051d9066b869baebe6e2_toloka_2023-07-18_16h41.40.855.csv\"\n[1] \"../data-toloka/banch1/6af6b02e8c1c6bd3a161eb57c5e15aec_toloka_2023-07-18_16h45.12.214.csv\"\n[1] \"../data-toloka/banch1/BM1907_toloka_2023-07-19_12h24.59.648.csv\"\n[1] \"../data-toloka/banch1/EK_87c83102d38e143f82f3ee0ba479365c_toloka_2023-07-19_10h44.00.598.csv\"\n[1] \"../data-toloka/banch1/ОВ1907_toloka_2023-07-19_10h50.37.778.csv\"\n[1] \"../data-toloka/banch2/22.12.1976_toloka_2023-07-20_13h46.18.948.csv\"\n[1] \"../data-toloka/banch2/AA1907_toloka_2023-07-19_18h28.35.931.csv\"\n[1] \"../data-toloka/banch2/AS1907_toloka_2023-07-19_16h28.42.052.csv\"\n[1] \"../data-toloka/banch2/AT1907_toloka_2023-07-19_21h02.24.635.csv\"\n[1] \"../data-toloka/banch2/EA19.07.2023_toloka_2023-07-19_15h45.55.420.csv\"\n[1] \"../data-toloka/banch2/ES1907_toloka_2023-07-19_23h27.32.195.csv\"\n[1] \"../data-toloka/banch2/GV1907_toloka_2023-07-19_16h56.45.263.csv\"\n[1] \"../data-toloka/banch2/MA1907_toloka_2023-07-19_16h56.11.966.csv\"\n[1] \"../data-toloka/banch2/tolkacheva_toloka_2023-07-19_17h00.04.319.csv\"\n[1] \"../data-toloka/banch2/VG1907_toloka_2023-07-19_16h28.02.926.csv\"\n[1] \"../data-toloka/banch2/VN1907_toloka_2023-07-19_16h30.33.286.csv\"\n\n\n\n# MR_data |&gt; write_csv(\"mentral_rotation_data_toloka.csv\")\n# ST_data |&gt; write_csv(\"sternberg_data_toloka.csv\")\n# MS_data |&gt; write_csv(\"mental_span_data_toloka.csv\")\n# NASATLX_data |&gt; write_csv(\"nasa_tlx_data_toloka.csv\")\n# SEQUENCE_data |&gt; write_csv(\"sequence_data_toloka.csv\")\n\n\nMR_data |&gt; \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"MR\")\n\n\n\n\n\nMR_data |&gt; \n  ggplot() +\n  stat_summary(data = MR_fb_agg,\n               aes(level, acc),\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(aes(level, is_correct), fun = mean, geom = \"point\") +\n  labs(title = \"MR\")\n\n\n\n\n\nMS_data |&gt; \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MS_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"MS\")\n\nWarning: Removed 72 rows containing non-finite values (`stat_summary()`).\n\n\n\n\n\n\nMS_data |&gt; \n  ggplot(aes(level, acc)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun = mean, geom = \"point\") +\n  labs(title = \"MS\")\n\n\n\n\n\nST_data |&gt; \n  ggplot(aes(level, rt)) +\n  stat_summary(data = MR_fb_agg,\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(fun.data = mean_cl_boot, geom = \"pointrange\") +\n  labs(title = \"ST\")\n\n\n\n\n\nST_data |&gt; \n  ggplot() +\n  stat_summary(data = MR_fb_agg,\n               aes(level, acc),\n               fun.data = mean_cl_boot, geom = \"pointrange\", color = \"darkred\") +\n  stat_summary(aes(level, is_correct),\n               fun = mean, geom = \"point\") +\n  labs(title = \"ST\")"
  }
]